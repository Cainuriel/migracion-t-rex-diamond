{"id":"096ce49cd5f3f4f1e09c4d03f10a58f4","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/abstracts/BaseStorageAccessor.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title BaseStorageAccessor - Abstract base contract for Diamond Storage access\r\n/// @dev Provides common patterns and utilities for Diamond Storage implementation\r\n/// @dev This contract defines the foundation for type-safe storage access across all facets\r\nabstract contract BaseStorageAccessor {\r\n    \r\n    // ================== STORAGE CONSTANTS ==================\r\n    \r\n    /// @dev Namespace prefix for T-REX Diamond storage slots\r\n    string private constant NAMESPACE_PREFIX = \"t-rex.diamond\";\r\n    \r\n    /// @dev Storage version for future migrations\r\n    uint256 internal constant STORAGE_VERSION = 1;\r\n    \r\n    // ================== ABSTRACT STORAGE FUNCTIONS ==================\r\n    \r\n    /// @notice Get storage slot hash for a domain\r\n    /// @param domain The storage domain name (e.g., \"token\", \"roles\")\r\n    /// @return slot The computed storage slot hash\r\n    function _getStorageSlot(string memory domain) internal pure returns (bytes32 slot) {\r\n        slot = keccak256(abi.encodePacked(NAMESPACE_PREFIX, \".\", domain, \".storage\"));\r\n    }\r\n    \r\n    /// @notice Get versioned storage slot hash for a domain\r\n    /// @param domain The storage domain name\r\n    /// @param version The storage version\r\n    /// @return slot The computed versioned storage slot hash\r\n    function _getVersionedStorageSlot(string memory domain, uint256 version) internal pure returns (bytes32 slot) {\r\n        slot = keccak256(abi.encodePacked(NAMESPACE_PREFIX, \".\", domain, \".storage.v\", version));\r\n    }\r\n    \r\n    // ================== STORAGE VALIDATION ==================\r\n    \r\n    /// @notice Validate that storage is properly initialized\r\n    /// @param storagePointer The storage pointer to validate\r\n    /// @param domain The domain name for error messages\r\n    modifier validateStorage(bytes32 storagePointer, string memory domain) {\r\n        require(storagePointer != bytes32(0), string(abi.encodePacked(\"BaseStorageAccessor: Invalid \", domain, \" storage\")));\r\n        _;\r\n    }\r\n    \r\n    // ================== UTILITIES ==================\r\n    \r\n    /// @notice Check if an address is the zero address\r\n    /// @param addr The address to check\r\n    /// @return True if the address is zero\r\n    function _isZeroAddress(address addr) internal pure returns (bool) {\r\n        return addr == address(0);\r\n    }\r\n    \r\n    /// @notice Require that an address is not zero\r\n    /// @param addr The address to check\r\n    /// @param errorMessage Custom error message\r\n    function _requireNotZero(address addr, string memory errorMessage) internal pure {\r\n        require(!_isZeroAddress(addr), errorMessage);\r\n    }\r\n    \r\n    // ================== STORAGE INTROSPECTION ==================\r\n    \r\n    /// @notice Get the current storage version\r\n    /// @return The current storage version\r\n    function getStorageVersion() external pure returns (uint256) {\r\n        return STORAGE_VERSION;\r\n    }\r\n    \r\n    /// @notice Get the namespace prefix used for storage slots\r\n    /// @return The namespace prefix\r\n    function getStorageNamespace() external pure returns (string memory) {\r\n        return NAMESPACE_PREFIX;\r\n    }\r\n}\r\n"},"contracts/abstracts/ComplianceStorageAccessor.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\nimport { BaseStorageAccessor } from \"./BaseStorageAccessor.sol\";\r\nimport { IComplianceStorage } from \"../interfaces/storage/IComplianceStorage.sol\";\r\n\r\n/// @title ComplianceStorageAccessor - Specialized storage accessor for Compliance domain\r\n/// @dev Provides type-safe access to Compliance storage using Diamond Storage pattern\r\n/// @dev Inherits common storage utilities from BaseStorageAccessor\r\nabstract contract ComplianceStorageAccessor is BaseStorageAccessor, IComplianceStorage {\r\n    \r\n    // ================== STORAGE CONSTANTS ==================\r\n    \r\n    /// @dev Storage domain name for Compliance\r\n    string private constant COMPLIANCE_DOMAIN = \"compliance\";\r\n    \r\n    /// @dev Computed storage slot for Compliance domain\r\n    bytes32 private constant COMPLIANCE_STORAGE_SLOT = keccak256(\"t-rex.diamond.compliance.storage\");\r\n    \r\n    // ================== STORAGE ACCESS ==================\r\n    \r\n    /// @notice Get Compliance storage reference with validation\r\n    /// @return cs Compliance storage struct reference\r\n    function _getComplianceStorage() internal pure returns (ComplianceStorage storage cs) {\r\n        bytes32 slot = COMPLIANCE_STORAGE_SLOT;\r\n        assembly {\r\n            cs.slot := slot\r\n        }\r\n    }\r\n    \r\n    /// @notice Get Compliance storage reference using computed slot\r\n    /// @return cs Compliance storage struct reference\r\n    function _getComplianceStorageComputed() internal pure returns (ComplianceStorage storage cs) {\r\n        bytes32 slot = _getStorageSlot(COMPLIANCE_DOMAIN);\r\n        assembly {\r\n            cs.slot := slot\r\n        }\r\n    }\r\n    \r\n    // ================== STORAGE UTILITIES ==================\r\n    \r\n    /// @notice Check if Compliance storage is initialized\r\n    /// @return True if storage is initialized\r\n    function _isComplianceStorageInitialized() internal view returns (bool) {\r\n        // Compliance is considered initialized if any rule is set\r\n        ComplianceStorage storage cs = _getComplianceStorage();\r\n        return cs.maxBalance > 0 || cs.minBalance > 0 || cs.maxInvestors > 0;\r\n    }\r\n    \r\n    /// @notice Get maximum balance limit safely\r\n    /// @return The maximum balance limit (0 = no limit)\r\n    function _getMaxBalance() internal view returns (uint256) {\r\n        return _getComplianceStorage().maxBalance;\r\n    }\r\n    \r\n    /// @notice Get minimum balance requirement safely\r\n    /// @return The minimum balance requirement\r\n    function _getMinBalance() internal view returns (uint256) {\r\n        return _getComplianceStorage().minBalance;\r\n    }\r\n    \r\n    /// @notice Get maximum investors limit safely\r\n    /// @return The maximum investors limit (0 = no limit)\r\n    function _getMaxInvestors() internal view returns (uint256) {\r\n        return _getComplianceStorage().maxInvestors;\r\n    }\r\n    \r\n    /// @notice Get current investor count safely\r\n    /// @return The current number of investors\r\n    function _getCurrentInvestorCount() internal view returns (uint256) {\r\n        return _getComplianceStorage().currentInvestorCount;\r\n    }\r\n    \r\n    /// @notice Check if an investor is frozen safely\r\n    /// @param investor The investor address to check\r\n    /// @return True if the investor is frozen\r\n    function _isInvestorFrozen(address investor) internal view returns (bool) {\r\n        if (_isZeroAddress(investor)) return false;\r\n        return _getComplianceStorage().frozenInvestors[investor];\r\n    }\r\n    \r\n    /// @notice Get last transfer time for an investor safely\r\n    /// @param investor The investor address to check\r\n    /// @return The timestamp of the last transfer\r\n    function _getLastTransferTime(address investor) internal view returns (uint256) {\r\n        if (_isZeroAddress(investor)) return 0;\r\n        return _getComplianceStorage().lastTransferTime[investor];\r\n    }\r\n    \r\n    // ================== COMPLIANCE VALIDATION ==================\r\n    \r\n    /// @notice Check if a balance amount complies with rules\r\n    /// @param balance The balance amount to check\r\n    /// @return True if balance complies with rules\r\n    function _isBalanceCompliant(uint256 balance) internal view returns (bool) {\r\n        ComplianceStorage storage cs = _getComplianceStorage();\r\n        \r\n        // Check minimum balance (if set)\r\n        if (cs.minBalance > 0 && balance < cs.minBalance) {\r\n            return false;\r\n        }\r\n        \r\n        // Check maximum balance (if set)\r\n        if (cs.maxBalance > 0 && balance > cs.maxBalance) {\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    \r\n    /// @notice Check if investor count complies with rules\r\n    /// @return True if investor count complies with rules\r\n    function _isInvestorCountCompliant() internal view returns (bool) {\r\n        ComplianceStorage storage cs = _getComplianceStorage();\r\n        \r\n        // Check maximum investors (if set)\r\n        if (cs.maxInvestors > 0 && cs.currentInvestorCount >= cs.maxInvestors) {\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    \r\n    // ================== STORAGE VALIDATION ==================\r\n    \r\n    /// @notice Validate Compliance storage state\r\n    /// @dev Performs comprehensive validation of Compliance storage integrity\r\n    function _validateComplianceStorage() internal view {\r\n        ComplianceStorage storage cs = _getComplianceStorage();\r\n        \r\n        // Validate that limits are reasonable (if set)\r\n        if (cs.maxBalance > 0 && cs.minBalance > 0) {\r\n            require(cs.maxBalance >= cs.minBalance, \"ComplianceStorageAccessor: Max balance must be >= min balance\");\r\n        }\r\n        \r\n        // Validate investor count\r\n        require(cs.currentInvestorCount >= 0, \"ComplianceStorageAccessor: Invalid investor count\");\r\n        \r\n        if (cs.maxInvestors > 0) {\r\n            require(cs.currentInvestorCount <= cs.maxInvestors, \"ComplianceStorageAccessor: Investor count exceeds limit\");\r\n        }\r\n    }\r\n}\r\n"},"contracts/abstracts/MultiDomainStorageAccessor.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\nimport { TokenStorageAccessor } from \"./TokenStorageAccessor.sol\";\r\nimport { RolesStorageAccessor } from \"./RolesStorageAccessor.sol\";\r\nimport { ComplianceStorageAccessor } from \"./ComplianceStorageAccessor.sol\";\r\n\r\n/// @title MultiDomainStorageAccessor - Unified access to multiple storage domains\r\n/// @dev Provides coordinated access to Token, Roles, and Compliance storage domains\r\n/// @dev Useful for facets that need to interact with multiple storage domains\r\nabstract contract MultiDomainStorageAccessor is \r\n    TokenStorageAccessor, \r\n    RolesStorageAccessor, \r\n    ComplianceStorageAccessor \r\n{\r\n    \r\n    // ================== CROSS-DOMAIN VALIDATION ==================\r\n    \r\n    /// @notice Validate all storage domains are properly initialized\r\n    /// @dev Comprehensive validation across all storage domains\r\n    function _validateAllStorageDomains() internal view {\r\n        _validateTokenStorage();\r\n        _validateRolesStorage();\r\n        _validateComplianceStorage();\r\n    }\r\n    \r\n    /// @notice Check if all core storage domains are initialized\r\n    /// @return True if Token, Roles, and Compliance storage are all initialized\r\n    function _areAllDomainsInitialized() internal view returns (bool) {\r\n        return _isTokenStorageInitialized() && \r\n               _isRolesStorageInitialized() && \r\n               _isComplianceStorageInitialized();\r\n    }\r\n    \r\n    // ================== CROSS-DOMAIN OPERATIONS ==================\r\n    \r\n    /// @notice Validate a transfer operation across all relevant domains\r\n    /// @param from The sender address\r\n    /// @param to The recipient address\r\n    /// @param amount The transfer amount\r\n    /// @return True if transfer is valid across all domains\r\n    function _validateTransfer(address from, address to, uint256 amount) internal view returns (bool) {\r\n        // Validate addresses\r\n        if (_isZeroAddress(from) || _isZeroAddress(to)) {\r\n            return false;\r\n        }\r\n        \r\n        // Check if accounts are frozen (Compliance domain)\r\n        if (_isInvestorFrozen(from) || _isInvestorFrozen(to)) {\r\n            return false;\r\n        }\r\n        \r\n        // Check sender balance (Token domain)\r\n        if (_getBalance(from) < amount) {\r\n            return false;\r\n        }\r\n        \r\n        // Check if resulting balance would be compliant (Compliance domain)\r\n        uint256 newBalance = _getBalance(to) + amount;\r\n        if (!_isBalanceCompliant(newBalance)) {\r\n            return false;\r\n        }\r\n        \r\n        // Check investor count limits if this creates a new investor\r\n        if (_getBalance(to) == 0 && !_isInvestorCountCompliant()) {\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    \r\n    /// @notice Check if an account can perform privileged operations\r\n    /// @param account The account to check\r\n    /// @return True if account has sufficient privileges\r\n    function _hasPrivilegedAccess(address account) internal view returns (bool) {\r\n        return _isOwnerOrAgent(account);\r\n    }\r\n    \r\n    // ================== EMERGENCY FUNCTIONS ==================\r\n    \r\n    /// @notice Emergency validation of all storage integrity\r\n    /// @dev Should be called during critical operations or upgrades\r\n    function _emergencyStorageCheck() internal view {\r\n        // Validate all domains\r\n        _validateAllStorageDomains();\r\n        \r\n        // Additional cross-domain checks\r\n        require(_areAllDomainsInitialized(), \"MultiDomainStorageAccessor: Not all domains initialized\");\r\n    }\r\n    \r\n    // ================== STORAGE MIGRATION SUPPORT ==================\r\n    \r\n    /// @notice Get migration readiness status\r\n    /// @return ready True if all domains are ready for migration\r\n    /// @return domainStatus Array indicating readiness of each domain\r\n    function _getMigrationReadiness() internal view returns (bool ready, bool[3] memory domainStatus) {\r\n        domainStatus[0] = _isTokenStorageInitialized();\r\n        domainStatus[1] = _isRolesStorageInitialized();\r\n        domainStatus[2] = _isComplianceStorageInitialized();\r\n        \r\n        ready = domainStatus[0] && domainStatus[1] && domainStatus[2];\r\n    }\r\n    \r\n    // ================== INTROSPECTION ==================\r\n    \r\n    /// @notice Get comprehensive storage status\r\n    /// @return token True if Token storage is initialized\r\n    /// @return roles True if Roles storage is initialized\r\n    /// @return compliance True if Compliance storage is initialized\r\n    function getStorageStatus() external view returns (\r\n        bool token,\r\n        bool roles,\r\n        bool compliance\r\n    ) {\r\n        token = _isTokenStorageInitialized();\r\n        roles = _isRolesStorageInitialized();\r\n        compliance = _isComplianceStorageInitialized();\r\n    }\r\n}\r\n"},"contracts/abstracts/RolesStorageAccessor.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\nimport { BaseStorageAccessor } from \"./BaseStorageAccessor.sol\";\r\nimport { IRolesStorage } from \"../interfaces/storage/IRolesStorage.sol\";\r\n\r\n/// @title RolesStorageAccessor - Specialized storage accessor for Roles domain\r\n/// @dev Provides type-safe access to Roles storage using Diamond Storage pattern\r\n/// @dev Inherits common storage utilities from BaseStorageAccessor\r\nabstract contract RolesStorageAccessor is BaseStorageAccessor, IRolesStorage {\r\n    \r\n    // ================== STORAGE CONSTANTS ==================\r\n    \r\n    /// @dev Storage domain name for Roles\r\n    string private constant ROLES_DOMAIN = \"roles\";\r\n    \r\n    /// @dev Computed storage slot for Roles domain\r\n    bytes32 private constant ROLES_STORAGE_SLOT = keccak256(\"t-rex.diamond.roles.storage\");\r\n    \r\n    // ================== STORAGE ACCESS ==================\r\n    \r\n    /// @notice Get Roles storage reference with validation\r\n    /// @return rs Roles storage struct reference\r\n    function _getRolesStorage() internal pure returns (RolesStorage storage rs) {\r\n        bytes32 slot = ROLES_STORAGE_SLOT;\r\n        assembly {\r\n            rs.slot := slot\r\n        }\r\n    }\r\n    \r\n    /// @notice Get Roles storage reference using computed slot\r\n    /// @return rs Roles storage struct reference\r\n    function _getRolesStorageComputed() internal pure returns (RolesStorage storage rs) {\r\n        bytes32 slot = _getStorageSlot(ROLES_DOMAIN);\r\n        assembly {\r\n            rs.slot := slot\r\n        }\r\n    }\r\n    \r\n    // ================== STORAGE UTILITIES ==================\r\n    \r\n    /// @notice Check if Roles storage is initialized\r\n    /// @return True if storage is initialized (has an owner)\r\n    function _isRolesStorageInitialized() internal view returns (bool) {\r\n        return !_isZeroAddress(_getRolesStorage().owner);\r\n    }\r\n    \r\n    /// @notice Get current owner safely\r\n    /// @return The current owner address\r\n    function _getOwner() internal view returns (address) {\r\n        return _getRolesStorage().owner;\r\n    }\r\n    \r\n    /// @notice Check if an address is an agent safely\r\n    /// @param account The account to check\r\n    /// @return True if the account is an agent\r\n    function _isAgent(address account) internal view returns (bool) {\r\n        if (_isZeroAddress(account)) return false;\r\n        return _getRolesStorage().agents[account];\r\n    }\r\n    \r\n    /// @notice Check if an address is owner or agent\r\n    /// @param account The account to check\r\n    /// @return True if the account is owner or agent\r\n    function _isOwnerOrAgent(address account) internal view returns (bool) {\r\n        if (_isZeroAddress(account)) return false;\r\n        RolesStorage storage rs = _getRolesStorage();\r\n        return account == rs.owner || rs.agents[account];\r\n    }\r\n    \r\n    // ================== AUTHORIZATION HELPERS ==================\r\n    \r\n    /// @notice Require that caller is the owner\r\n    /// @param caller The address to check\r\n    function _requireOwner(address caller) internal view {\r\n        require(caller == _getOwner(), \"RolesStorageAccessor: Not owner\");\r\n    }\r\n    \r\n    /// @notice Require that caller is an agent\r\n    /// @param caller The address to check\r\n    function _requireAgent(address caller) internal view {\r\n        require(_isAgent(caller), \"RolesStorageAccessor: Not agent\");\r\n    }\r\n    \r\n    /// @notice Require that caller is owner or agent\r\n    /// @param caller The address to check\r\n    function _requireOwnerOrAgent(address caller) internal view {\r\n        require(_isOwnerOrAgent(caller), \"RolesStorageAccessor: Not authorized\");\r\n    }\r\n    \r\n    // ================== STORAGE VALIDATION ==================\r\n    \r\n    /// @notice Validate Roles storage state\r\n    /// @dev Performs comprehensive validation of Roles storage integrity\r\n    function _validateRolesStorage() internal view {\r\n        RolesStorage storage rs = _getRolesStorage();\r\n        \r\n        // Validate that owner is set\r\n        require(!_isZeroAddress(rs.owner), \"RolesStorageAccessor: Owner not set\");\r\n        \r\n        // Validate that storage is marked as initialized\r\n        require(rs.initialized, \"RolesStorageAccessor: Storage not initialized\");\r\n    }\r\n}\r\n"},"contracts/abstracts/TokenStorageAccessor.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\nimport { BaseStorageAccessor } from \"./BaseStorageAccessor.sol\";\r\nimport { ITokenStorage } from \"../interfaces/storage/ITokenStorage.sol\";\r\n\r\n/// @title TokenStorageAccessor - Specialized storage accessor for Token domain\r\n/// @dev Provides type-safe access to Token storage using Diamond Storage pattern\r\n/// @dev Inherits common storage utilities from BaseStorageAccessor\r\nabstract contract TokenStorageAccessor is BaseStorageAccessor, ITokenStorage {\r\n    \r\n    // ================== STORAGE CONSTANTS ==================\r\n    \r\n    /// @dev Storage domain name for Token\r\n    string private constant TOKEN_DOMAIN = \"token\";\r\n    \r\n    /// @dev Computed storage slot for Token domain\r\n    bytes32 private constant TOKEN_STORAGE_SLOT = keccak256(\"t-rex.diamond.token.storage\");\r\n    \r\n    // ================== STORAGE ACCESS ==================\r\n    \r\n    /// @notice Get Token storage reference with validation\r\n    /// @return ts Token storage struct reference\r\n    function _getTokenStorage() internal pure returns (TokenStorage storage ts) {\r\n        bytes32 slot = TOKEN_STORAGE_SLOT;\r\n        assembly {\r\n            ts.slot := slot\r\n        }\r\n    }\r\n    \r\n    /// @notice Get Token storage reference using computed slot\r\n    /// @return ts Token storage struct reference\r\n    function _getTokenStorageComputed() internal pure returns (TokenStorage storage ts) {\r\n        bytes32 slot = _getStorageSlot(TOKEN_DOMAIN);\r\n        assembly {\r\n            ts.slot := slot\r\n        }\r\n    }\r\n    \r\n    // ================== STORAGE UTILITIES ==================\r\n    \r\n    /// @notice Check if Token storage is initialized\r\n    /// @return True if storage is initialized (has a name)\r\n    function _isTokenStorageInitialized() internal view returns (bool) {\r\n        return bytes(_getTokenStorage().name).length > 0;\r\n    }\r\n    \r\n    /// @notice Get current total supply safely\r\n    /// @return The current total supply\r\n    function _getTotalSupply() internal view returns (uint256) {\r\n        return _getTokenStorage().totalSupply;\r\n    }\r\n    \r\n    /// @notice Get balance of an address safely\r\n    /// @param account The account to check\r\n    /// @return The account balance\r\n    function _getBalance(address account) internal view returns (uint256) {\r\n        require(!_isZeroAddress(account), \"TokenStorageAccessor: Cannot get balance of zero address\");\r\n        return _getTokenStorage().balances[account];\r\n    }\r\n    \r\n    /// @notice Get allowance safely\r\n    /// @param owner The owner address\r\n    /// @param spender The spender address\r\n    /// @return The allowance amount\r\n    function _getAllowance(address owner, address spender) internal view returns (uint256) {\r\n        require(!_isZeroAddress(owner), \"TokenStorageAccessor: Cannot get allowance from zero address\");\r\n        require(!_isZeroAddress(spender), \"TokenStorageAccessor: Cannot get allowance for zero address\");\r\n        return _getTokenStorage().allowances[owner][spender];\r\n    }\r\n    \r\n    // ================== STORAGE VALIDATION ==================\r\n    \r\n    /// @notice Validate Token storage state\r\n    /// @dev Performs comprehensive validation of Token storage integrity\r\n    function _validateTokenStorage() internal view {\r\n        TokenStorage storage ts = _getTokenStorage();\r\n        \r\n        // Validate basic token metadata\r\n        require(bytes(ts.name).length > 0, \"TokenStorageAccessor: Token name not set\");\r\n        require(bytes(ts.symbol).length > 0, \"TokenStorageAccessor: Token symbol not set\");\r\n        require(ts.decimals > 0, \"TokenStorageAccessor: Token decimals not set\");\r\n        \r\n        // Additional validations can be added here\r\n    }\r\n}\r\n"},"contracts/interfaces/storage/IComplianceStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title IComplianceStorage - Interface for Compliance domain storage structure\r\n/// @dev Defines the storage layout for Compliance domain using Diamond Storage pattern\r\ninterface IComplianceStorage {\r\n    /// @title ComplianceStorage - Unstructured storage for Compliance domain\r\n    /// @dev Uses Diamond Storage pattern with unique storage slot\r\n    struct ComplianceStorage {\r\n        // === COMPLIANCE RULES ===\r\n        uint256 maxBalance; // 0 = no limit\r\n        uint256 minBalance; // minimum balance required\r\n        uint256 maxInvestors; // 0 = no limit\r\n        uint256 currentInvestorCount;\r\n        \r\n        // === TRANSFER VALIDATION ===\r\n        mapping(address => uint256) lastTransferTime;\r\n        mapping(address => bool) frozenInvestors;\r\n    }\r\n}\r\n"},"contracts/interfaces/storage/IRolesStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title IRolesStorage - Interface for Roles domain storage structure\r\n/// @dev Defines the storage layout for Roles domain using Diamond Storage pattern\r\ninterface IRolesStorage {\r\n    /// @title RolesStorage - Unstructured storage for Roles domain\r\n    /// @dev Uses Diamond Storage pattern with unique storage slot\r\n    struct RolesStorage {\r\n        // === ACCESS CONTROL ===\r\n        address owner;\r\n        mapping(address => bool) agents;\r\n        bool initialized;\r\n    }\r\n}\r\n"},"contracts/interfaces/storage/ITokenStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title ITokenStorage - Interface for Token domain storage structure\r\n/// @dev Defines the storage layout for Token domain using Diamond Storage pattern\r\ninterface ITokenStorage {\r\n    /// @title TokenStorage - Unstructured storage for Token domain\r\n    /// @dev Uses Diamond Storage pattern with unique storage slot\r\n    struct TokenStorage {\r\n        // === TOKEN CORE ERC20 ===\r\n        mapping(address => uint256) balances;\r\n        mapping(address => mapping(address => uint256)) allowances;\r\n        uint256 totalSupply;\r\n        string name;\r\n        string symbol;\r\n        uint8 decimals;\r\n        \r\n        // === TOKEN ERC-3643 EXTENSIONS ===\r\n        mapping(address => bool) frozenAccounts;\r\n        address[] holders; // Track all token holders for compliance\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"contracts/abstracts/BaseStorageAccessor.sol":{"ast":{"absolutePath":"contracts/abstracts/BaseStorageAccessor.sol","exportedSymbols":{"BaseStorageAccessor":[134]},"id":135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"BaseStorageAccessor","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"60:262:0","text":"@title BaseStorageAccessor - Abstract base contract for Diamond Storage access\n @dev Provides common patterns and utilities for Diamond Storage implementation\n @dev This contract defines the foundation for type-safe storage access across all facets"},"fullyImplemented":true,"id":134,"linearizedBaseContracts":[134],"name":"BaseStorageAccessor","nameLocation":"340:19:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"443:57:0","text":"@dev Namespace prefix for T-REX Diamond storage slots"},"id":6,"mutability":"constant","name":"NAMESPACE_PREFIX","nameLocation":"530:16:0","nodeType":"VariableDeclaration","scope":134,"src":"506:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4,"name":"string","nodeType":"ElementaryTypeName","src":"506:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"742d7265782e6469616d6f6e64","id":5,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"549:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_81c59a60b99b3cf3949d2100563c72f180d8858a7d8de56b87800721ec396ec6","typeString":"literal_string \"t-rex.diamond\""},"value":"t-rex.diamond"},"visibility":"private"},{"constant":true,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"577:46:0","text":"@dev Storage version for future migrations"},"id":10,"mutability":"constant","name":"STORAGE_VERSION","nameLocation":"655:15:0","nodeType":"VariableDeclaration","scope":134,"src":"629:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":9,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"673:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1027:96:0","statements":[{"expression":{"id":28,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"1038:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":22,"name":"NAMESPACE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1072:16:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e","id":23,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1090:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},{"id":24,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1095:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e73746f72616765","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1103:10:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b637e94d5e244509ee5432236d47990bd0eaf7c8d5fce4d73d618b9f654eb62","typeString":"literal_string \".storage\""},"value":".storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_7b637e94d5e244509ee5432236d47990bd0eaf7c8d5fce4d73d618b9f654eb62","typeString":"literal_string \".storage\""}],"expression":{"id":20,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1055:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":21,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1059:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"1055:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1055:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":19,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1045:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1045:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1038:77:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":29,"nodeType":"ExpressionStatement","src":"1038:77:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"766:171:0","text":"@notice Get storage slot hash for a domain\n @param domain The storage domain name (e.g., \"token\", \"roles\")\n @return slot The computed storage slot hash"},"id":31,"implemented":true,"kind":"function","modifiers":[],"name":"_getStorageSlot","nameLocation":"952:15:0","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"domain","nameLocation":"982:6:0","nodeType":"VariableDeclaration","scope":31,"src":"968:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12,"name":"string","nodeType":"ElementaryTypeName","src":"968:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"967:22:0"},"returnParameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"slot","nameLocation":"1021:4:0","nodeType":"VariableDeclaration","scope":31,"src":"1013:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1013:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1012:14:0"},"scope":134,"src":"943:180:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":54,"nodeType":"Block","src":"1461:107:0","statements":[{"expression":{"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1472:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":45,"name":"NAMESPACE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1506:16:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e","id":46,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1524:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},{"id":47,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"1529:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e73746f726167652e76","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1537:12:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8bf18382dea8c15eee66d002c34f5dda0d60cbde3904fd6c980aead89532afa2","typeString":"literal_string \".storage.v\""},"value":".storage.v"},{"id":49,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1551:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_8bf18382dea8c15eee66d002c34f5dda0d60cbde3904fd6c980aead89532afa2","typeString":"literal_string \".storage.v\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":43,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1489:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":44,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1493:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"1489:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1489:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":42,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1479:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1479:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1472:88:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":53,"nodeType":"ExpressionStatement","src":"1472:88:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1135:210:0","text":"@notice Get versioned storage slot hash for a domain\n @param domain The storage domain name\n @param version The storage version\n @return slot The computed versioned storage slot hash"},"id":55,"implemented":true,"kind":"function","modifiers":[],"name":"_getVersionedStorageSlot","nameLocation":"1360:24:0","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"domain","nameLocation":"1399:6:0","nodeType":"VariableDeclaration","scope":55,"src":"1385:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33,"name":"string","nodeType":"ElementaryTypeName","src":"1385:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"version","nameLocation":"1415:7:0","nodeType":"VariableDeclaration","scope":55,"src":"1407:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"1407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1384:39:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"slot","nameLocation":"1455:4:0","nodeType":"VariableDeclaration","scope":55,"src":"1447:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":38,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1447:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1446:14:0"},"scope":134,"src":"1351:217:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"1906:147:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":63,"name":"storagePointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1925:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":65,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1943:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1943:7:0","typeDescriptions":{}}},"id":67,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1925:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"hexValue":"4261736553746f726167654163636573736f723a20496e76616c696420","id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1979:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff86eb63c7ea1ed2bfb1dc61c4dbedf27db4fba5151e171df2750b52cd6c6f80","typeString":"literal_string \"BaseStorageAccessor: Invalid \""},"value":"BaseStorageAccessor: Invalid "},{"id":74,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2012:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2073746f72616765","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:10:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_40155b763d3c0c8be4ce3e552ccf6ea46e60fe9bbb0378fa1534d90eee3a0b59","typeString":"literal_string \" storage\""},"value":" storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ff86eb63c7ea1ed2bfb1dc61c4dbedf27db4fba5151e171df2750b52cd6c6f80","typeString":"literal_string \"BaseStorageAccessor: Invalid \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_40155b763d3c0c8be4ce3e552ccf6ea46e60fe9bbb0378fa1534d90eee3a0b59","typeString":"literal_string \" storage\""}],"expression":{"id":71,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1962:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":72,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1966:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"1962:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":70,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1955:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":69,"name":"string","nodeType":"ElementaryTypeName","src":"1955:6:0","typeDescriptions":{}}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1955:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":62,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1917:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1917:116:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"1917:116:0"},{"id":80,"nodeType":"PlaceholderStatement","src":"2044:1:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1651:178:0","text":"@notice Validate that storage is properly initialized\n @param storagePointer The storage pointer to validate\n @param domain The domain name for error messages"},"id":82,"name":"validateStorage","nameLocation":"1844:15:0","nodeType":"ModifierDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"storagePointer","nameLocation":"1868:14:0","nodeType":"VariableDeclaration","scope":82,"src":"1860:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":57,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1860:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"domain","nameLocation":"1898:6:0","nodeType":"VariableDeclaration","scope":82,"src":"1884:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":59,"name":"string","nodeType":"ElementaryTypeName","src":"1884:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1859:46:0"},"src":"1835:218:0","virtual":false,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2338:44:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":90,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2356:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2372:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2364:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2364:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2364:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2356:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":89,"id":96,"nodeType":"Return","src":"2349:25:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2127:138:0","text":"@notice Check if an address is the zero address\n @param addr The address to check\n @return True if the address is zero"},"id":98,"implemented":true,"kind":"function","modifiers":[],"name":"_isZeroAddress","nameLocation":"2280:14:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"addr","nameLocation":"2303:4:0","nodeType":"VariableDeclaration","scope":98,"src":"2295:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2295:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2294:14:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"2332:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":87,"name":"bool","nodeType":"ElementaryTypeName","src":"2332:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2331:6:0"},"scope":134,"src":"2271:111:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"2620:63:0","statements":[{"expression":{"arguments":[{"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2639:21:0","subExpression":{"arguments":[{"id":108,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2655:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":107,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2640:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2640:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":111,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"2662:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2631:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":113,"nodeType":"ExpressionStatement","src":"2631:44:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2394:139:0","text":"@notice Require that an address is not zero\n @param addr The address to check\n @param errorMessage Custom error message"},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotZero","nameLocation":"2548:15:0","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"addr","nameLocation":"2572:4:0","nodeType":"VariableDeclaration","scope":115,"src":"2564:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"errorMessage","nameLocation":"2592:12:0","nodeType":"VariableDeclaration","scope":115,"src":"2578:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":102,"name":"string","nodeType":"ElementaryTypeName","src":"2578:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:42:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2620:0:0"},"scope":134,"src":"2539:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":123,"nodeType":"Block","src":"2924:41:0","statements":[{"expression":{"id":121,"name":"STORAGE_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2942:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":120,"id":122,"nodeType":"Return","src":"2935:22:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"2769:88:0","text":"@notice Get the current storage version\n @return The current storage version"},"functionSelector":"79fd5e2e","id":124,"implemented":true,"kind":"function","modifiers":[],"name":"getStorageVersion","nameLocation":"2872:17:0","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"2889:2:0"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"2915:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2914:9:0"},"scope":134,"src":"2863:102:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":132,"nodeType":"Block","src":"3149:42:0","statements":[{"expression":{"id":130,"name":"NAMESPACE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3167:16:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":129,"id":131,"nodeType":"Return","src":"3160:23:0"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"2977:97:0","text":"@notice Get the namespace prefix used for storage slots\n @return The namespace prefix"},"functionSelector":"c3946aa8","id":133,"implemented":true,"kind":"function","modifiers":[],"name":"getStorageNamespace","nameLocation":"3089:19:0","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"3108:2:0"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":133,"src":"3134:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":127,"name":"string","nodeType":"ElementaryTypeName","src":"3134:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3133:15:0"},"scope":134,"src":"3080:111:0","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":135,"src":"322:2872:0","usedErrors":[]}],"src":"33:3163:0"},"id":0},"contracts/abstracts/ComplianceStorageAccessor.sol":{"ast":{"absolutePath":"contracts/abstracts/ComplianceStorageAccessor.sol","exportedSymbols":{"BaseStorageAccessor":[134],"ComplianceStorageAccessor":[424],"IComplianceStorage":[1040]},"id":425,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":136,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:1"},{"absolutePath":"contracts/abstracts/BaseStorageAccessor.sol","file":"./BaseStorageAccessor.sol","id":138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":425,"sourceUnit":135,"src":"60:64:1","symbolAliases":[{"foreign":{"id":137,"name":"BaseStorageAccessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"69:19:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/storage/IComplianceStorage.sol","file":"../interfaces/storage/IComplianceStorage.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":425,"sourceUnit":1041,"src":"126:82:1","symbolAliases":[{"foreign":{"id":139,"name":"IComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"135:18:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":142,"name":"BaseStorageAccessor","nameLocations":["507:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"507:19:1"},"id":143,"nodeType":"InheritanceSpecifier","src":"507:19:1"},{"baseName":{"id":144,"name":"IComplianceStorage","nameLocations":["528:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":1040,"src":"528:18:1"},"id":145,"nodeType":"InheritanceSpecifier","src":"528:18:1"}],"canonicalName":"ComplianceStorageAccessor","contractDependencies":[],"contractKind":"contract","documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"212:248:1","text":"@title ComplianceStorageAccessor - Specialized storage accessor for Compliance domain\n @dev Provides type-safe access to Compliance storage using Diamond Storage pattern\n @dev Inherits common storage utilities from BaseStorageAccessor"},"fullyImplemented":true,"id":424,"linearizedBaseContracts":[424,1040,134],"name":"ComplianceStorageAccessor","nameLocation":"478:25:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"630:43:1","text":"@dev Storage domain name for Compliance"},"id":149,"mutability":"constant","name":"COMPLIANCE_DOMAIN","nameLocation":"703:17:1","nodeType":"VariableDeclaration","scope":424,"src":"679:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":147,"name":"string","nodeType":"ElementaryTypeName","src":"679:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"636f6d706c69616e6365","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"723:12:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_30987b70f981248bd9abc917127ad8e166a4f25730b30eb10141561980c1db7a","typeString":"literal_string \"compliance\""},"value":"compliance"},"visibility":"private"},{"constant":true,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"748:52:1","text":"@dev Computed storage slot for Compliance domain"},"id":155,"mutability":"constant","name":"COMPLIANCE_STORAGE_SLOT","nameLocation":"831:23:1","nodeType":"VariableDeclaration","scope":424,"src":"806:96:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"806:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"742d7265782e6469616d6f6e642e636f6d706c69616e63652e73746f72616765","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"867:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d4","typeString":"literal_string \"t-rex.diamond.compliance.storage\""},"value":"t-rex.diamond.compliance.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d4","typeString":"literal_string \"t-rex.diamond.compliance.storage\""}],"id":152,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"857:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"857:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":167,"nodeType":"Block","src":"1190:117:1","statements":[{"assignments":[163],"declarations":[{"constant":false,"id":163,"mutability":"mutable","name":"slot","nameLocation":"1209:4:1","nodeType":"VariableDeclaration","scope":167,"src":"1201:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1201:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":165,"initialValue":{"id":164,"name":"COMPLIANCE_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1216:23:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1201:38:1"},{"AST":{"nodeType":"YulBlock","src":"1259:41:1","statements":[{"nodeType":"YulAssignment","src":"1274:15:1","value":{"name":"slot","nodeType":"YulIdentifier","src":"1285:4:1"},"variableNames":[{"name":"cs.slot","nodeType":"YulIdentifier","src":"1274:7:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":160,"isOffset":false,"isSlot":true,"src":"1274:7:1","suffix":"slot","valueSize":1},{"declaration":163,"isOffset":false,"isSlot":false,"src":"1285:4:1","valueSize":1}],"id":166,"nodeType":"InlineAssembly","src":"1250:50:1"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"982:116:1","text":"@notice Get Compliance storage reference with validation\n @return cs Compliance storage struct reference"},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_getComplianceStorage","nameLocation":"1113:21:1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"1134:2:1"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"cs","nameLocation":"1186:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1160:28:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"ComplianceStorage","nameLocations":["1160:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":1039,"src":"1160:17:1"},"referencedDeclaration":1039,"src":"1160:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"}},"visibility":"internal"}],"src":"1159:30:1"},"scope":424,"src":"1104:203:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":182,"nodeType":"Block","src":"1539:128:1","statements":[{"assignments":[176],"declarations":[{"constant":false,"id":176,"mutability":"mutable","name":"slot","nameLocation":"1558:4:1","nodeType":"VariableDeclaration","scope":182,"src":"1550:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1550:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":180,"initialValue":{"arguments":[{"id":178,"name":"COMPLIANCE_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"1581:17:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":177,"name":"_getStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1565:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (string memory) pure returns (bytes32)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1565:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1550:49:1"},{"AST":{"nodeType":"YulBlock","src":"1619:41:1","statements":[{"nodeType":"YulAssignment","src":"1634:15:1","value":{"name":"slot","nodeType":"YulIdentifier","src":"1645:4:1"},"variableNames":[{"name":"cs.slot","nodeType":"YulIdentifier","src":"1634:7:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":173,"isOffset":false,"isSlot":true,"src":"1634:7:1","suffix":"slot","valueSize":1},{"declaration":176,"isOffset":false,"isSlot":false,"src":"1645:4:1","valueSize":1}],"id":181,"nodeType":"InlineAssembly","src":"1610:50:1"}]},"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1319:120:1","text":"@notice Get Compliance storage reference using computed slot\n @return cs Compliance storage struct reference"},"id":183,"implemented":true,"kind":"function","modifiers":[],"name":"_getComplianceStorageComputed","nameLocation":"1454:29:1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"1483:2:1"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"cs","nameLocation":"1535:2:1","nodeType":"VariableDeclaration","scope":183,"src":"1509:28:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"},"typeName":{"id":172,"nodeType":"UserDefinedTypeName","pathNode":{"id":171,"name":"ComplianceStorage","nameLocations":["1509:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":1039,"src":"1509:17:1"},"referencedDeclaration":1039,"src":"1509:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"}},"visibility":"internal"}],"src":"1508:30:1"},"scope":424,"src":"1445:222:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":210,"nodeType":"Block","src":"1929:220:1","statements":[{"assignments":[191],"declarations":[{"constant":false,"id":191,"mutability":"mutable","name":"cs","nameLocation":"2034:2:1","nodeType":"VariableDeclaration","scope":210,"src":"2008:28:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"},"typeName":{"id":190,"nodeType":"UserDefinedTypeName","pathNode":{"id":189,"name":"ComplianceStorage","nameLocations":["2008:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":1039,"src":"2008:17:1"},"referencedDeclaration":1039,"src":"2008:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"}},"visibility":"internal"}],"id":194,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":192,"name":"_getComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2039:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ComplianceStorage_$1039_storage_ptr_$","typeString":"function () pure returns (struct IComplianceStorage.ComplianceStorage storage pointer)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2039:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2008:54:1"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":195,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2080:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:10:1","memberName":"maxBalance","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"2080:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2096:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2080:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":199,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2101:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2104:10:1","memberName":"minBalance","nodeType":"MemberAccess","referencedDeclaration":1026,"src":"2101:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2117:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2101:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2080:38:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":204,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2122:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2125:12:1","memberName":"maxInvestors","nodeType":"MemberAccess","referencedDeclaration":1028,"src":"2122:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2140:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2122:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2080:61:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":188,"id":209,"nodeType":"Return","src":"2073:68:1"}]},"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1749:102:1","text":"@notice Check if Compliance storage is initialized\n @return True if storage is initialized"},"id":211,"implemented":true,"kind":"function","modifiers":[],"name":"_isComplianceStorageInitialized","nameLocation":"1866:31:1","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"1897:2:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"1923:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"1923:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1922:6:1"},"scope":424,"src":"1857:292:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":221,"nodeType":"Block","src":"2327:60:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":217,"name":"_getComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2345:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ComplianceStorage_$1039_storage_ptr_$","typeString":"function () pure returns (struct IComplianceStorage.ComplianceStorage storage pointer)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2345:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2369:10:1","memberName":"maxBalance","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"2345:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":216,"id":220,"nodeType":"Return","src":"2338:41:1"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"2161:102:1","text":"@notice Get maximum balance limit safely\n @return The maximum balance limit (0 = no limit)"},"id":222,"implemented":true,"kind":"function","modifiers":[],"name":"_getMaxBalance","nameLocation":"2278:14:1","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"2292:2:1"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"2318:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2318:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2317:9:1"},"scope":424,"src":"2269:118:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":232,"nodeType":"Block","src":"2562:60:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":228,"name":"_getComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2580:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ComplianceStorage_$1039_storage_ptr_$","typeString":"function () pure returns (struct IComplianceStorage.ComplianceStorage storage pointer)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2580:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2604:10:1","memberName":"minBalance","nodeType":"MemberAccess","referencedDeclaration":1026,"src":"2580:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":227,"id":231,"nodeType":"Return","src":"2573:41:1"}]},"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"2399:99:1","text":"@notice Get minimum balance requirement safely\n @return The minimum balance requirement"},"id":233,"implemented":true,"kind":"function","modifiers":[],"name":"_getMinBalance","nameLocation":"2513:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"2527:2:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":233,"src":"2553:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2553:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2552:9:1"},"scope":424,"src":"2504:118:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":243,"nodeType":"Block","src":"2806:62:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":239,"name":"_getComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2824:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ComplianceStorage_$1039_storage_ptr_$","typeString":"function () pure returns (struct IComplianceStorage.ComplianceStorage storage pointer)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2824:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2848:12:1","memberName":"maxInvestors","nodeType":"MemberAccess","referencedDeclaration":1028,"src":"2824:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":238,"id":242,"nodeType":"Return","src":"2817:43:1"}]},"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"2634:106:1","text":"@notice Get maximum investors limit safely\n @return The maximum investors limit (0 = no limit)"},"id":244,"implemented":true,"kind":"function","modifiers":[],"name":"_getMaxInvestors","nameLocation":"2755:16:1","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"2771:2:1"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":244,"src":"2797:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2797:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2796:9:1"},"scope":424,"src":"2746:122:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":254,"nodeType":"Block","src":"3048:70:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":250,"name":"_getComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3066:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ComplianceStorage_$1039_storage_ptr_$","typeString":"function () pure returns (struct IComplianceStorage.ComplianceStorage storage pointer)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3090:20:1","memberName":"currentInvestorCount","nodeType":"MemberAccess","referencedDeclaration":1030,"src":"3066:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":249,"id":253,"nodeType":"Return","src":"3059:51:1"}]},"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"2880:94:1","text":"@notice Get current investor count safely\n @return The current number of investors"},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"_getCurrentInvestorCount","nameLocation":"2989:24:1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[],"src":"3013:2:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":255,"src":"3039:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"3039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3038:9:1"},"scope":424,"src":"2980:138:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"3362:128:1","statements":[{"condition":{"arguments":[{"id":264,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3392:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":263,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3377:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":268,"nodeType":"IfStatement","src":"3373:42:1","trueBody":{"expression":{"hexValue":"66616c7365","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3410:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":262,"id":267,"nodeType":"Return","src":"3403:12:1"}},{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":269,"name":"_getComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3433:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ComplianceStorage_$1039_storage_ptr_$","typeString":"function () pure returns (struct IComplianceStorage.ComplianceStorage storage pointer)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3457:15:1","memberName":"frozenInvestors","nodeType":"MemberAccess","referencedDeclaration":1038,"src":"3433:39:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":273,"indexExpression":{"id":272,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3473:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3433:49:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":262,"id":274,"nodeType":"Return","src":"3426:56:1"}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"3130:152:1","text":"@notice Check if an investor is frozen safely\n @param investor The investor address to check\n @return True if the investor is frozen"},"id":276,"implemented":true,"kind":"function","modifiers":[],"name":"_isInvestorFrozen","nameLocation":"3297:17:1","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"investor","nameLocation":"3323:8:1","nodeType":"VariableDeclaration","scope":276,"src":"3315:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:18:1"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":276,"src":"3356:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":260,"name":"bool","nodeType":"ElementaryTypeName","src":"3356:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3355:6:1"},"scope":424,"src":"3288:202:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":296,"nodeType":"Block","src":"3752:125:1","statements":[{"condition":{"arguments":[{"id":285,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3782:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3767:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3767:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":289,"nodeType":"IfStatement","src":"3763:38:1","trueBody":{"expression":{"hexValue":"30","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3800:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":283,"id":288,"nodeType":"Return","src":"3793:8:1"}},{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_getComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3819:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ComplianceStorage_$1039_storage_ptr_$","typeString":"function () pure returns (struct IComplianceStorage.ComplianceStorage storage pointer)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3819:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3843:16:1","memberName":"lastTransferTime","nodeType":"MemberAccess","referencedDeclaration":1034,"src":"3819:40:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":294,"indexExpression":{"id":293,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3860:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3819:50:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":283,"id":295,"nodeType":"Return","src":"3812:57:1"}]},"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"3502:164:1","text":"@notice Get last transfer time for an investor safely\n @param investor The investor address to check\n @return The timestamp of the last transfer"},"id":297,"implemented":true,"kind":"function","modifiers":[],"name":"_getLastTransferTime","nameLocation":"3681:20:1","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"investor","nameLocation":"3710:8:1","nodeType":"VariableDeclaration","scope":297,"src":"3702:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"3702:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3701:18:1"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"3743:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3743:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:9:1"},"scope":424,"src":"3672:205:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":339,"nodeType":"Block","src":"4206:409:1","statements":[{"assignments":[307],"declarations":[{"constant":false,"id":307,"mutability":"mutable","name":"cs","nameLocation":"4243:2:1","nodeType":"VariableDeclaration","scope":339,"src":"4217:28:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"},"typeName":{"id":306,"nodeType":"UserDefinedTypeName","pathNode":{"id":305,"name":"ComplianceStorage","nameLocations":["4217:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":1039,"src":"4217:17:1"},"referencedDeclaration":1039,"src":"4217:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"}},"visibility":"internal"}],"id":310,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":308,"name":"_getComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"4248:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ComplianceStorage_$1039_storage_ptr_$","typeString":"function () pure returns (struct IComplianceStorage.ComplianceStorage storage pointer)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4248:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4217:54:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":311,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4339:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4342:10:1","memberName":"minBalance","nodeType":"MemberAccess","referencedDeclaration":1026,"src":"4339:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4355:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4339:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":315,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4360:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":316,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4370:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4373:10:1","memberName":"minBalance","nodeType":"MemberAccess","referencedDeclaration":1026,"src":"4370:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4360:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4339:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":323,"nodeType":"IfStatement","src":"4335:89:1","trueBody":{"id":322,"nodeType":"Block","src":"4385:39:1","statements":[{"expression":{"hexValue":"66616c7365","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4407:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":304,"id":321,"nodeType":"Return","src":"4400:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":324,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4491:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4494:10:1","memberName":"maxBalance","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"4491:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4507:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4491:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":328,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4512:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":329,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4522:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:10:1","memberName":"maxBalance","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"4522:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4512:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4491:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"IfStatement","src":"4487:89:1","trueBody":{"id":335,"nodeType":"Block","src":"4537:39:1","statements":[{"expression":{"hexValue":"66616c7365","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4559:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":304,"id":334,"nodeType":"Return","src":"4552:12:1"}]}},{"expression":{"hexValue":"74727565","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4603:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":304,"id":338,"nodeType":"Return","src":"4596:11:1"}]},"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"3963:162:1","text":"@notice Check if a balance amount complies with rules\n @param balance The balance amount to check\n @return True if balance complies with rules"},"id":340,"implemented":true,"kind":"function","modifiers":[],"name":"_isBalanceCompliant","nameLocation":"4140:19:1","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"balance","nameLocation":"4168:7:1","nodeType":"VariableDeclaration","scope":340,"src":"4160:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4160:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4159:17:1"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":340,"src":"4200:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":302,"name":"bool","nodeType":"ElementaryTypeName","src":"4200:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4199:6:1"},"scope":424,"src":"4131:484:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":368,"nodeType":"Block","src":"4814:280:1","statements":[{"assignments":[348],"declarations":[{"constant":false,"id":348,"mutability":"mutable","name":"cs","nameLocation":"4851:2:1","nodeType":"VariableDeclaration","scope":368,"src":"4825:28:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"},"typeName":{"id":347,"nodeType":"UserDefinedTypeName","pathNode":{"id":346,"name":"ComplianceStorage","nameLocations":["4825:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":1039,"src":"4825:17:1"},"referencedDeclaration":1039,"src":"4825:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"}},"visibility":"internal"}],"id":351,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_getComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"4856:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ComplianceStorage_$1039_storage_ptr_$","typeString":"function () pure returns (struct IComplianceStorage.ComplianceStorage storage pointer)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4856:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4825:54:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":352,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"4949:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4952:12:1","memberName":"maxInvestors","nodeType":"MemberAccess","referencedDeclaration":1028,"src":"4949:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4967:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4949:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":356,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"4972:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4975:20:1","memberName":"currentInvestorCount","nodeType":"MemberAccess","referencedDeclaration":1030,"src":"4972:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":358,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"4999:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5002:12:1","memberName":"maxInvestors","nodeType":"MemberAccess","referencedDeclaration":1028,"src":"4999:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4972:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4949:65:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":365,"nodeType":"IfStatement","src":"4945:110:1","trueBody":{"id":364,"nodeType":"Block","src":"5016:39:1","statements":[{"expression":{"hexValue":"66616c7365","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5038:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":345,"id":363,"nodeType":"Return","src":"5031:12:1"}]}},{"expression":{"hexValue":"74727565","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5082:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":345,"id":367,"nodeType":"Return","src":"5075:11:1"}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"4627:115:1","text":"@notice Check if investor count complies with rules\n @return True if investor count complies with rules"},"id":369,"implemented":true,"kind":"function","modifiers":[],"name":"_isInvestorCountCompliant","nameLocation":"4757:25:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"4782:2:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":369,"src":"4808:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"4808:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4807:6:1"},"scope":424,"src":"4748:346:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":422,"nodeType":"Block","src":"5360:654:1","statements":[{"assignments":[375],"declarations":[{"constant":false,"id":375,"mutability":"mutable","name":"cs","nameLocation":"5397:2:1","nodeType":"VariableDeclaration","scope":422,"src":"5371:28:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"},"typeName":{"id":374,"nodeType":"UserDefinedTypeName","pathNode":{"id":373,"name":"ComplianceStorage","nameLocations":["5371:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":1039,"src":"5371:17:1"},"referencedDeclaration":1039,"src":"5371:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage"}},"visibility":"internal"}],"id":378,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":376,"name":"_getComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"5402:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ComplianceStorage_$1039_storage_ptr_$","typeString":"function () pure returns (struct IComplianceStorage.ComplianceStorage storage pointer)"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5402:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5371:54:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":379,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5507:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5510:10:1","memberName":"maxBalance","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"5507:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5523:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5507:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":383,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5528:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5531:10:1","memberName":"minBalance","nodeType":"MemberAccess","referencedDeclaration":1026,"src":"5528:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5528:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5507:38:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":398,"nodeType":"IfStatement","src":"5503:175:1","trueBody":{"id":397,"nodeType":"Block","src":"5547:131:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":389,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5570:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5573:10:1","memberName":"maxBalance","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"5570:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":391,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5587:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5590:10:1","memberName":"minBalance","nodeType":"MemberAccess","referencedDeclaration":1026,"src":"5587:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5570:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6d706c69616e636553746f726167654163636573736f723a204d61782062616c616e6365206d757374206265203e3d206d696e2062616c616e6365","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5602:63:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5645e641748514522e2efd745e856dd86ef54cef5a1a3cb0bd1c749476f065a1","typeString":"literal_string \"ComplianceStorageAccessor: Max balance must be >= min balance\""},"value":"ComplianceStorageAccessor: Max balance must be >= min balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5645e641748514522e2efd745e856dd86ef54cef5a1a3cb0bd1c749476f065a1","typeString":"literal_string \"ComplianceStorageAccessor: Max balance must be >= min balance\""}],"id":388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5562:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5562:104:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":396,"nodeType":"ExpressionStatement","src":"5562:104:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":400,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5742:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5745:20:1","memberName":"currentInvestorCount","nodeType":"MemberAccess","referencedDeclaration":1030,"src":"5742:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5769:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5742:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6d706c69616e636553746f726167654163636573736f723a20496e76616c696420696e766573746f7220636f756e74","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5772:51:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3db79e39a30b4b1c55075093b1b20975ffc85449719b9d730a3e0f4970357bc5","typeString":"literal_string \"ComplianceStorageAccessor: Invalid investor count\""},"value":"ComplianceStorageAccessor: Invalid investor count"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3db79e39a30b4b1c55075093b1b20975ffc85449719b9d730a3e0f4970357bc5","typeString":"literal_string \"ComplianceStorageAccessor: Invalid investor count\""}],"id":399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5734:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5734:90:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"5734:90:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":407,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5849:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5852:12:1","memberName":"maxInvestors","nodeType":"MemberAccess","referencedDeclaration":1028,"src":"5849:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5867:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5849:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":421,"nodeType":"IfStatement","src":"5845:162:1","trueBody":{"id":420,"nodeType":"Block","src":"5870:137:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":412,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5893:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5896:20:1","memberName":"currentInvestorCount","nodeType":"MemberAccess","referencedDeclaration":1030,"src":"5893:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":414,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5920:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_ComplianceStorage_$1039_storage_ptr","typeString":"struct IComplianceStorage.ComplianceStorage storage pointer"}},"id":415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5923:12:1","memberName":"maxInvestors","nodeType":"MemberAccess","referencedDeclaration":1028,"src":"5920:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5893:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6d706c69616e636553746f726167654163636573736f723a20496e766573746f7220636f756e742065786365656473206c696d6974","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5937:57:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca7ce7092590ad7de63943e293b9872ebc66a7e588e3a49b66610c34d2cc2a37","typeString":"literal_string \"ComplianceStorageAccessor: Investor count exceeds limit\""},"value":"ComplianceStorageAccessor: Investor count exceeds limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca7ce7092590ad7de63943e293b9872ebc66a7e588e3a49b66610c34d2cc2a37","typeString":"literal_string \"ComplianceStorageAccessor: Investor count exceeds limit\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5885:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5885:110:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"ExpressionStatement","src":"5885:110:1"}]}}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"5177:125:1","text":"@notice Validate Compliance storage state\n @dev Performs comprehensive validation of Compliance storage integrity"},"id":423,"implemented":true,"kind":"function","modifiers":[],"name":"_validateComplianceStorage","nameLocation":"5317:26:1","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"5343:2:1"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"5360:0:1"},"scope":424,"src":"5308:706:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":425,"src":"460:5557:1","usedErrors":[]}],"src":"33:5986:1"},"id":1},"contracts/abstracts/MultiDomainStorageAccessor.sol":{"ast":{"absolutePath":"contracts/abstracts/MultiDomainStorageAccessor.sol","exportedSymbols":{"ComplianceStorageAccessor":[424],"MultiDomainStorageAccessor":[644],"RolesStorageAccessor":[840],"TokenStorageAccessor":[1019]},"id":645,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":426,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"contracts/abstracts/TokenStorageAccessor.sol","file":"./TokenStorageAccessor.sol","id":428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":1020,"src":"60:66:2","symbolAliases":[{"foreign":{"id":427,"name":"TokenStorageAccessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"69:20:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/abstracts/RolesStorageAccessor.sol","file":"./RolesStorageAccessor.sol","id":430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":841,"src":"128:66:2","symbolAliases":[{"foreign":{"id":429,"name":"RolesStorageAccessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"137:20:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/abstracts/ComplianceStorageAccessor.sol","file":"./ComplianceStorageAccessor.sol","id":432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":425,"src":"196:76:2","symbolAliases":[{"foreign":{"id":431,"name":"ComplianceStorageAccessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"205:25:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":434,"name":"TokenStorageAccessor","nameLocations":["580:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"580:20:2"},"id":435,"nodeType":"InheritanceSpecifier","src":"580:20:2"},{"baseName":{"id":436,"name":"RolesStorageAccessor","nameLocations":["608:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":840,"src":"608:20:2"},"id":437,"nodeType":"InheritanceSpecifier","src":"608:20:2"},{"baseName":{"id":438,"name":"ComplianceStorageAccessor","nameLocations":["636:25:2"],"nodeType":"IdentifierPath","referencedDeclaration":424,"src":"636:25:2"},"id":439,"nodeType":"InheritanceSpecifier","src":"636:25:2"}],"canonicalName":"MultiDomainStorageAccessor","contractDependencies":[],"contractKind":"contract","documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"276:250:2","text":"@title MultiDomainStorageAccessor - Unified access to multiple storage domains\n @dev Provides coordinated access to Token, Roles, and Compliance storage domains\n @dev Useful for facets that need to interact with multiple storage domains"},"fullyImplemented":true,"id":644,"linearizedBaseContracts":[644,424,1040,840,1053,1019,1083,134],"name":"MultiDomainStorageAccessor","nameLocation":"544:26:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":452,"nodeType":"Block","src":"942:115:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":443,"name":"_validateTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"953:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"953:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"953:23:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":446,"name":"_validateRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"987:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"987:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"ExpressionStatement","src":"987:23:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":449,"name":"_validateComplianceStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1021:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1021:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"1021:28:2"}]},"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"753:131:2","text":"@notice Validate all storage domains are properly initialized\n @dev Comprehensive validation across all storage domains"},"id":453,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAllStorageDomains","nameLocation":"899:26:2","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"925:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"942:0:2"},"scope":644,"src":"890:167:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":468,"nodeType":"Block","src":"1284:157:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":459,"name":"_isTokenStorageInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"1302:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1302:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":461,"name":"_isRolesStorageInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"1351:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1351:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1302:77:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_isComplianceStorageInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"1400:31:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1400:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1302:131:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":458,"id":467,"nodeType":"Return","src":"1295:138:2"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"1069:143:2","text":"@notice Check if all core storage domains are initialized\n @return True if Token, Roles, and Compliance storage are all initialized"},"id":469,"implemented":true,"kind":"function","modifiers":[],"name":"_areAllDomainsInitialized","nameLocation":"1227:25:2","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"1252:2:2"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":469,"src":"1278:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":456,"name":"bool","nodeType":"ElementaryTypeName","src":"1278:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1277:6:2"},"scope":644,"src":"1218:223:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":543,"nodeType":"Block","src":"1888:900:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":482,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"1949:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":481,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1934:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1934:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":485,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"1973:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":484,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1958:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1958:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1934:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":491,"nodeType":"IfStatement","src":"1930:87:2","trueBody":{"id":490,"nodeType":"Block","src":"1978:39:2","statements":[{"expression":{"hexValue":"66616c7365","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2000:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":480,"id":489,"nodeType":"Return","src":"1993:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"2120:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":492,"name":"_isInvestorFrozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2102:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2102:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":496,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"2147:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":495,"name":"_isInvestorFrozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2129:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2129:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2102:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":502,"nodeType":"IfStatement","src":"2098:93:2","trueBody":{"id":501,"nodeType":"Block","src":"2152:39:2","statements":[{"expression":{"hexValue":"66616c7365","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2174:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":480,"id":500,"nodeType":"Return","src":"2167:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":504,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"2275:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":503,"name":"_getBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2263:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":506,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2283:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2263:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"IfStatement","src":"2259:71:2","trueBody":{"id":510,"nodeType":"Block","src":"2291:39:2","statements":[{"expression":{"hexValue":"66616c7365","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2313:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":480,"id":509,"nodeType":"Return","src":"2306:12:2"}]}},{"assignments":[513],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"newBalance","nameLocation":"2436:10:2","nodeType":"VariableDeclaration","scope":543,"src":"2428:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"2428:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":519,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":515,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"2461:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":514,"name":"_getBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2449:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":517,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2467:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2449:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2428:45:2"},{"condition":{"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2488:32:2","subExpression":{"arguments":[{"id":521,"name":"newBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2509:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":520,"name":"_isBalanceCompliant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2489:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":527,"nodeType":"IfStatement","src":"2484:77:2","trueBody":{"id":526,"nodeType":"Block","src":"2522:39:2","statements":[{"expression":{"hexValue":"66616c7365","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2544:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":480,"id":525,"nodeType":"Return","src":"2537:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":529,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"2668:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":528,"name":"_getBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2656:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2656:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2675:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2656:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2680:28:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":533,"name":"_isInvestorCountCompliant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2681:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2681:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2656:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":540,"nodeType":"IfStatement","src":"2652:97:2","trueBody":{"id":539,"nodeType":"Block","src":"2710:39:2","statements":[{"expression":{"hexValue":"66616c7365","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2732:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":480,"id":538,"nodeType":"Return","src":"2725:12:2"}]}},{"expression":{"hexValue":"74727565","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2776:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":480,"id":542,"nodeType":"Return","src":"2769:11:2"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"1529:255:2","text":"@notice Validate a transfer operation across all relevant domains\n @param from The sender address\n @param to The recipient address\n @param amount The transfer amount\n @return True if transfer is valid across all domains"},"id":544,"implemented":true,"kind":"function","modifiers":[],"name":"_validateTransfer","nameLocation":"1799:17:2","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"from","nameLocation":"1825:4:2","nodeType":"VariableDeclaration","scope":544,"src":"1817:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"1817:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"to","nameLocation":"1839:2:2","nodeType":"VariableDeclaration","scope":544,"src":"1831:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"1831:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"amount","nameLocation":"1851:6:2","nodeType":"VariableDeclaration","scope":544,"src":"1843:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1843:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1816:42:2"},"returnParameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":544,"src":"1882:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":478,"name":"bool","nodeType":"ElementaryTypeName","src":"1882:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1881:6:2"},"scope":644,"src":"1790:998:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":556,"nodeType":"Block","src":"3051:50:2","statements":[{"expression":{"arguments":[{"id":553,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3085:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":552,"name":"_isOwnerOrAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"3069:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3069:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":551,"id":555,"nodeType":"Return","src":"3062:31:2"}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"2800:169:2","text":"@notice Check if an account can perform privileged operations\n @param account The account to check\n @return True if account has sufficient privileges"},"id":557,"implemented":true,"kind":"function","modifiers":[],"name":"_hasPrivilegedAccess","nameLocation":"2984:20:2","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"account","nameLocation":"3013:7:2","nodeType":"VariableDeclaration","scope":557,"src":"3005:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"3005:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3004:17:2"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":557,"src":"3045:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":549,"name":"bool","nodeType":"ElementaryTypeName","src":"3045:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3044:6:2"},"scope":644,"src":"2975:126:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":570,"nodeType":"Block","src":"3366:239:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":561,"name":"_validateAllStorageDomains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"3410:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"3410:28:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":565,"name":"_areAllDomainsInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"3510:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d756c7469446f6d61696e53746f726167654163636573736f723a204e6f7420616c6c20646f6d61696e7320696e697469616c697a6564","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3539:57:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f72083ce754ad0cb6cfda8f82ed4c0a0876f072c9b6e5bf41ff6e069a979205","typeString":"literal_string \"MultiDomainStorageAccessor: Not all domains initialized\""},"value":"MultiDomainStorageAccessor: Not all domains initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f72083ce754ad0cb6cfda8f82ed4c0a0876f072c9b6e5bf41ff6e069a979205","typeString":"literal_string \"MultiDomainStorageAccessor: Not all domains initialized\""}],"id":564,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3502:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3502:95:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"ExpressionStatement","src":"3502:95:2"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"3185:127:2","text":"@notice Emergency validation of all storage integrity\n @dev Should be called during critical operations or upgrades"},"id":571,"implemented":true,"kind":"function","modifiers":[],"name":"_emergencyStorageCheck","nameLocation":"3327:22:2","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"3349:2:2"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"3366:0:2"},"scope":644,"src":"3318:287:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":616,"nodeType":"Block","src":"3980:266:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":581,"name":"domainStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"3991:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_memory_ptr","typeString":"bool[3] memory"}},"id":583,"indexExpression":{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3991:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":584,"name":"_isTokenStorageInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4009:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4009:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3991:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":587,"nodeType":"ExpressionStatement","src":"3991:46:2"},{"expression":{"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":588,"name":"domainStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4048:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_memory_ptr","typeString":"bool[3] memory"}},"id":590,"indexExpression":{"hexValue":"31","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4048:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":591,"name":"_isRolesStorageInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4066:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4066:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4048:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":594,"nodeType":"ExpressionStatement","src":"4048:46:2"},{"expression":{"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":595,"name":"domainStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4105:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_memory_ptr","typeString":"bool[3] memory"}},"id":597,"indexExpression":{"hexValue":"32","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4118:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4105:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":598,"name":"_isComplianceStorageInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4123:31:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4123:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4105:51:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":601,"nodeType":"ExpressionStatement","src":"4105:51:2"},{"expression":{"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":602,"name":"ready","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"4177:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":603,"name":"domainStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4185:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_memory_ptr","typeString":"bool[3] memory"}},"id":605,"indexExpression":{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4198:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4185:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"id":606,"name":"domainStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4204:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_memory_ptr","typeString":"bool[3] memory"}},"id":608,"indexExpression":{"hexValue":"31","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4217:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4204:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4185:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"id":610,"name":"domainStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4223:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_memory_ptr","typeString":"bool[3] memory"}},"id":612,"indexExpression":{"hexValue":"32","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4236:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4223:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4185:53:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4177:61:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":615,"nodeType":"ExpressionStatement","src":"4177:61:2"}]},"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"3695:181:2","text":"@notice Get migration readiness status\n @return ready True if all domains are ready for migration\n @return domainStatus Array indicating readiness of each domain"},"id":617,"implemented":true,"kind":"function","modifiers":[],"name":"_getMigrationReadiness","nameLocation":"3891:22:2","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[],"src":"3913:2:2"},"returnParameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"ready","nameLocation":"3944:5:2","nodeType":"VariableDeclaration","scope":617,"src":"3939:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":574,"name":"bool","nodeType":"ElementaryTypeName","src":"3939:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"domainStatus","nameLocation":"3966:12:2","nodeType":"VariableDeclaration","scope":617,"src":"3951:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_memory_ptr","typeString":"bool[3]"},"typeName":{"baseType":{"id":576,"name":"bool","nodeType":"ElementaryTypeName","src":"3951:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":578,"length":{"hexValue":"33","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3956:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3951:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$3_storage_ptr","typeString":"bool[3]"}},"visibility":"internal"}],"src":"3938:41:2"},"scope":644,"src":"3882:364:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"4690:159:2","statements":[{"expression":{"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":627,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"4701:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":628,"name":"_isTokenStorageInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4709:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4709:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4701:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":631,"nodeType":"ExpressionStatement","src":"4701:36:2"},{"expression":{"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":632,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"4748:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":633,"name":"_isRolesStorageInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4756:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4756:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4748:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"ExpressionStatement","src":"4748:36:2"},{"expression":{"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":637,"name":"compliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"4795:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":638,"name":"_isComplianceStorageInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4808:31:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4795:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":641,"nodeType":"ExpressionStatement","src":"4795:46:2"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"4324:234:2","text":"@notice Get comprehensive storage status\n @return token True if Token storage is initialized\n @return roles True if Roles storage is initialized\n @return compliance True if Compliance storage is initialized"},"functionSelector":"545e1b52","id":643,"implemented":true,"kind":"function","modifiers":[],"name":"getStorageStatus","nameLocation":"4573:16:2","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[],"src":"4589:2:2"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"token","nameLocation":"4630:5:2","nodeType":"VariableDeclaration","scope":643,"src":"4625:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":620,"name":"bool","nodeType":"ElementaryTypeName","src":"4625:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"roles","nameLocation":"4651:5:2","nodeType":"VariableDeclaration","scope":643,"src":"4646:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":622,"name":"bool","nodeType":"ElementaryTypeName","src":"4646:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"compliance","nameLocation":"4672:10:2","nodeType":"VariableDeclaration","scope":643,"src":"4667:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":624,"name":"bool","nodeType":"ElementaryTypeName","src":"4667:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4614:75:2"},"scope":644,"src":"4564:285:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":645,"src":"526:4326:2","usedErrors":[]}],"src":"33:4821:2"},"id":2},"contracts/abstracts/RolesStorageAccessor.sol":{"ast":{"absolutePath":"contracts/abstracts/RolesStorageAccessor.sol","exportedSymbols":{"BaseStorageAccessor":[134],"IRolesStorage":[1053],"RolesStorageAccessor":[840]},"id":841,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":646,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"contracts/abstracts/BaseStorageAccessor.sol","file":"./BaseStorageAccessor.sol","id":648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":841,"sourceUnit":135,"src":"60:64:3","symbolAliases":[{"foreign":{"id":647,"name":"BaseStorageAccessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"69:19:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/storage/IRolesStorage.sol","file":"../interfaces/storage/IRolesStorage.sol","id":650,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":841,"sourceUnit":1054,"src":"126:72:3","symbolAliases":[{"foreign":{"id":649,"name":"IRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"135:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":652,"name":"BaseStorageAccessor","nameLocations":["477:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"477:19:3"},"id":653,"nodeType":"InheritanceSpecifier","src":"477:19:3"},{"baseName":{"id":654,"name":"IRolesStorage","nameLocations":["498:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1053,"src":"498:13:3"},"id":655,"nodeType":"InheritanceSpecifier","src":"498:13:3"}],"canonicalName":"RolesStorageAccessor","contractDependencies":[],"contractKind":"contract","documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"202:233:3","text":"@title RolesStorageAccessor - Specialized storage accessor for Roles domain\n @dev Provides type-safe access to Roles storage using Diamond Storage pattern\n @dev Inherits common storage utilities from BaseStorageAccessor"},"fullyImplemented":true,"id":840,"linearizedBaseContracts":[840,1053,134],"name":"RolesStorageAccessor","nameLocation":"453:20:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"595:38:3","text":"@dev Storage domain name for Roles"},"id":659,"mutability":"constant","name":"ROLES_DOMAIN","nameLocation":"663:12:3","nodeType":"VariableDeclaration","scope":840,"src":"639:46:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":657,"name":"string","nodeType":"ElementaryTypeName","src":"639:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"726f6c6573","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"678:7:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_de9bdca322e1a848f72215bc15cf2c87fe7749145789a9ee281a2a6290af26ab","typeString":"literal_string \"roles\""},"value":"roles"},"visibility":"private"},{"constant":true,"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"698:47:3","text":"@dev Computed storage slot for Roles domain"},"id":665,"mutability":"constant","name":"ROLES_STORAGE_SLOT","nameLocation":"776:18:3","nodeType":"VariableDeclaration","scope":840,"src":"751:86:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"751:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"742d7265782e6469616d6f6e642e726f6c65732e73746f72616765","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"807:29:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd5","typeString":"literal_string \"t-rex.diamond.roles.storage\""},"value":"t-rex.diamond.roles.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd5","typeString":"literal_string \"t-rex.diamond.roles.storage\""}],"id":662,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"797:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"797:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":677,"nodeType":"Block","src":"1105:112:3","statements":[{"assignments":[673],"declarations":[{"constant":false,"id":673,"mutability":"mutable","name":"slot","nameLocation":"1124:4:3","nodeType":"VariableDeclaration","scope":677,"src":"1116:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1116:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":675,"initialValue":{"id":674,"name":"ROLES_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"1131:18:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1116:33:3"},{"AST":{"nodeType":"YulBlock","src":"1169:41:3","statements":[{"nodeType":"YulAssignment","src":"1184:15:3","value":{"name":"slot","nodeType":"YulIdentifier","src":"1195:4:3"},"variableNames":[{"name":"rs.slot","nodeType":"YulIdentifier","src":"1184:7:3"}]}]},"evmVersion":"london","externalReferences":[{"declaration":670,"isOffset":false,"isSlot":true,"src":"1184:7:3","suffix":"slot","valueSize":1},{"declaration":673,"isOffset":false,"isSlot":false,"src":"1195:4:3","valueSize":1}],"id":676,"nodeType":"InlineAssembly","src":"1160:50:3"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"917:106:3","text":"@notice Get Roles storage reference with validation\n @return rs Roles storage struct reference"},"id":678,"implemented":true,"kind":"function","modifiers":[],"name":"_getRolesStorage","nameLocation":"1038:16:3","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[],"src":"1054:2:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"rs","nameLocation":"1101:2:3","nodeType":"VariableDeclaration","scope":678,"src":"1080:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"},"typeName":{"id":669,"nodeType":"UserDefinedTypeName","pathNode":{"id":668,"name":"RolesStorage","nameLocations":["1080:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1052,"src":"1080:12:3"},"referencedDeclaration":1052,"src":"1080:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"}},"visibility":"internal"}],"src":"1079:25:3"},"scope":840,"src":"1029:188:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":692,"nodeType":"Block","src":"1429:123:3","statements":[{"assignments":[686],"declarations":[{"constant":false,"id":686,"mutability":"mutable","name":"slot","nameLocation":"1448:4:3","nodeType":"VariableDeclaration","scope":692,"src":"1440:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1440:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":690,"initialValue":{"arguments":[{"id":688,"name":"ROLES_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"1471:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":687,"name":"_getStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1455:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (string memory) pure returns (bytes32)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1440:44:3"},{"AST":{"nodeType":"YulBlock","src":"1504:41:3","statements":[{"nodeType":"YulAssignment","src":"1519:15:3","value":{"name":"slot","nodeType":"YulIdentifier","src":"1530:4:3"},"variableNames":[{"name":"rs.slot","nodeType":"YulIdentifier","src":"1519:7:3"}]}]},"evmVersion":"london","externalReferences":[{"declaration":683,"isOffset":false,"isSlot":true,"src":"1519:7:3","suffix":"slot","valueSize":1},{"declaration":686,"isOffset":false,"isSlot":false,"src":"1530:4:3","valueSize":1}],"id":691,"nodeType":"InlineAssembly","src":"1495:50:3"}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"1229:110:3","text":"@notice Get Roles storage reference using computed slot\n @return rs Roles storage struct reference"},"id":693,"implemented":true,"kind":"function","modifiers":[],"name":"_getRolesStorageComputed","nameLocation":"1354:24:3","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[],"src":"1378:2:3"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"rs","nameLocation":"1425:2:3","nodeType":"VariableDeclaration","scope":693,"src":"1404:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"},"typeName":{"id":682,"nodeType":"UserDefinedTypeName","pathNode":{"id":681,"name":"RolesStorage","nameLocations":["1404:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1052,"src":"1404:12:3"},"referencedDeclaration":1052,"src":"1404:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"}},"visibility":"internal"}],"src":"1403:25:3"},"scope":840,"src":"1345:207:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"1819:67:3","statements":[{"expression":{"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1837:41:3","subExpression":{"arguments":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":700,"name":"_getRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"1853:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_RolesStorage_$1052_storage_ptr_$","typeString":"function () pure returns (struct IRolesStorage.RolesStorage storage pointer)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1853:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1872:5:3","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"1853:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":699,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1838:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1838:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":698,"id":705,"nodeType":"Return","src":"1830:48:3"}]},"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"1634:112:3","text":"@notice Check if Roles storage is initialized\n @return True if storage is initialized (has an owner)"},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"_isRolesStorageInitialized","nameLocation":"1761:26:3","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[],"src":"1787:2:3"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"1813:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":696,"name":"bool","nodeType":"ElementaryTypeName","src":"1813:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1812:6:3"},"scope":840,"src":"1752:134:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":717,"nodeType":"Block","src":"2036:50:3","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":713,"name":"_getRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"2054:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_RolesStorage_$1052_storage_ptr_$","typeString":"function () pure returns (struct IRolesStorage.RolesStorage storage pointer)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2054:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2073:5:3","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"2054:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":712,"id":716,"nodeType":"Return","src":"2047:31:3"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"1898:79:3","text":"@notice Get current owner safely\n @return The current owner address"},"id":718,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwner","nameLocation":"1992:9:3","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"2001:2:3"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":718,"src":"2027:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"2027:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2026:9:3"},"scope":840,"src":"1983:103:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":738,"nodeType":"Block","src":"2312:112:3","statements":[{"condition":{"arguments":[{"id":727,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2342:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":726,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2327:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"2323:41:3","trueBody":{"expression":{"hexValue":"66616c7365","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2359:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":725,"id":730,"nodeType":"Return","src":"2352:12:3"}},{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":732,"name":"_getRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"2382:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_RolesStorage_$1052_storage_ptr_$","typeString":"function () pure returns (struct IRolesStorage.RolesStorage storage pointer)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2401:6:3","memberName":"agents","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"2382:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":736,"indexExpression":{"id":735,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2408:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2382:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":725,"id":737,"nodeType":"Return","src":"2375:41:3"}]},"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"2098:144:3","text":"@notice Check if an address is an agent safely\n @param account The account to check\n @return True if the account is an agent"},"id":739,"implemented":true,"kind":"function","modifiers":[],"name":"_isAgent","nameLocation":"2257:8:3","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"mutability":"mutable","name":"account","nameLocation":"2274:7:3","nodeType":"VariableDeclaration","scope":739,"src":"2266:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:17:3"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":739,"src":"2306:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"2306:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2305:6:3"},"scope":840,"src":"2248:176:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":769,"nodeType":"Block","src":"2662:174:3","statements":[{"condition":{"arguments":[{"id":748,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"2692:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":747,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2677:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2677:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":752,"nodeType":"IfStatement","src":"2673:41:3","trueBody":{"expression":{"hexValue":"66616c7365","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2709:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":746,"id":751,"nodeType":"Return","src":"2702:12:3"}},{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"rs","nameLocation":"2746:2:3","nodeType":"VariableDeclaration","scope":769,"src":"2725:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"},"typeName":{"id":754,"nodeType":"UserDefinedTypeName","pathNode":{"id":753,"name":"RolesStorage","nameLocations":["2725:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1052,"src":"2725:12:3"},"referencedDeclaration":1052,"src":"2725:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"}},"visibility":"internal"}],"id":758,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":756,"name":"_getRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"2751:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_RolesStorage_$1052_storage_ptr_$","typeString":"function () pure returns (struct IRolesStorage.RolesStorage storage pointer)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2725:44:3"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"2787:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":760,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"2798:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2801:5:3","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"2798:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2787:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"expression":{"id":763,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"2810:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2813:6:3","memberName":"agents","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"2810:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":766,"indexExpression":{"id":765,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"2820:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2810:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2787:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":746,"id":768,"nodeType":"Return","src":"2780:48:3"}]},"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"2436:149:3","text":"@notice Check if an address is owner or agent\n @param account The account to check\n @return True if the account is owner or agent"},"id":770,"implemented":true,"kind":"function","modifiers":[],"name":"_isOwnerOrAgent","nameLocation":"2600:15:3","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"account","nameLocation":"2624:7:3","nodeType":"VariableDeclaration","scope":770,"src":"2616:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"2616:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2615:17:3"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":770,"src":"2656:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":744,"name":"bool","nodeType":"ElementaryTypeName","src":"2656:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2655:6:3"},"scope":840,"src":"2591:245:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":784,"nodeType":"Block","src":"3069:84:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":777,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"3088:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":778,"name":"_getOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"3098:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3098:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3088:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c657353746f726167654163636573736f723a204e6f74206f776e6572","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3111:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0c7320a53d3e1c946e100b26f8957aa691cbc750a89fdd57876a410f0651c37","typeString":"literal_string \"RolesStorageAccessor: Not owner\""},"value":"RolesStorageAccessor: Not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d0c7320a53d3e1c946e100b26f8957aa691cbc750a89fdd57876a410f0651c37","typeString":"literal_string \"RolesStorageAccessor: Not owner\""}],"id":776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3080:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"ExpressionStatement","src":"3080:65:3"}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"2922:88:3","text":"@notice Require that caller is the owner\n @param caller The address to check"},"id":785,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwner","nameLocation":"3025:13:3","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"caller","nameLocation":"3047:6:3","nodeType":"VariableDeclaration","scope":785,"src":"3039:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"3039:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3038:16:3"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"3069:0:3"},"scope":840,"src":"3016:137:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":798,"nodeType":"Block","src":"3311:79:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":793,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"3339:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":792,"name":"_isAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"3330:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c657353746f726167654163636573736f723a204e6f74206167656e74","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3348:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c84bc604a4ae7f1be72b045668210a9cba48b8f8bd0aa18005129f96763e648a","typeString":"literal_string \"RolesStorageAccessor: Not agent\""},"value":"RolesStorageAccessor: Not agent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c84bc604a4ae7f1be72b045668210a9cba48b8f8bd0aa18005129f96763e648a","typeString":"literal_string \"RolesStorageAccessor: Not agent\""}],"id":791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3322:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3322:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"3322:60:3"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"3165:87:3","text":"@notice Require that caller is an agent\n @param caller The address to check"},"id":799,"implemented":true,"kind":"function","modifiers":[],"name":"_requireAgent","nameLocation":"3267:13:3","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"caller","nameLocation":"3289:6:3","nodeType":"VariableDeclaration","scope":799,"src":"3281:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3280:16:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"3311:0:3"},"scope":840,"src":"3258:132:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":812,"nodeType":"Block","src":"3561:91:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":807,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"3596:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":806,"name":"_isOwnerOrAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"3580:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3580:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c657353746f726167654163636573736f723a204e6f7420617574686f72697a6564","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3605:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0063fced1942f5b4428fec3947e5be1863334b868817ad6a227bdc15738e37f2","typeString":"literal_string \"RolesStorageAccessor: Not authorized\""},"value":"RolesStorageAccessor: Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0063fced1942f5b4428fec3947e5be1863334b868817ad6a227bdc15738e37f2","typeString":"literal_string \"RolesStorageAccessor: Not authorized\""}],"id":805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3572:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":811,"nodeType":"ExpressionStatement","src":"3572:72:3"}]},"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"3402:93:3","text":"@notice Require that caller is owner or agent\n @param caller The address to check"},"id":813,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwnerOrAgent","nameLocation":"3510:20:3","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"caller","nameLocation":"3539:6:3","nodeType":"VariableDeclaration","scope":813,"src":"3531:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"3531:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3530:16:3"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"3561:0:3"},"scope":840,"src":"3501:151:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":838,"nodeType":"Block","src":"3903:348:3","statements":[{"assignments":[819],"declarations":[{"constant":false,"id":819,"mutability":"mutable","name":"rs","nameLocation":"3935:2:3","nodeType":"VariableDeclaration","scope":838,"src":"3914:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"},"typeName":{"id":818,"nodeType":"UserDefinedTypeName","pathNode":{"id":817,"name":"RolesStorage","nameLocations":["3914:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1052,"src":"3914:12:3"},"referencedDeclaration":1052,"src":"3914:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"}},"visibility":"internal"}],"id":822,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":820,"name":"_getRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"3940:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_RolesStorage_$1052_storage_ptr_$","typeString":"function () pure returns (struct IRolesStorage.RolesStorage storage pointer)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3940:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3914:44:3"},{"expression":{"arguments":[{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4026:25:3","subExpression":{"arguments":[{"expression":{"id":825,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"4042:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4045:5:3","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"4042:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":824,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"4027:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4027:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c657353746f726167654163636573736f723a204f776e6572206e6f7420736574","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4053:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_12704de861351daca41c21b5500d50a97372831dd921b78d885a3d9fc62fe4a2","typeString":"literal_string \"RolesStorageAccessor: Owner not set\""},"value":"RolesStorageAccessor: Owner not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12704de861351daca41c21b5500d50a97372831dd921b78d885a3d9fc62fe4a2","typeString":"literal_string \"RolesStorageAccessor: Owner not set\""}],"id":823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4018:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4018:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":831,"nodeType":"ExpressionStatement","src":"4018:73:3"},{"expression":{"arguments":[{"expression":{"id":833,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"4179:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$1052_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4182:11:3","memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"4179:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c657353746f726167654163636573736f723a2053746f72616765206e6f7420696e697469616c697a6564","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4195:47:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1193b3573cf5977e8a170a4fa52ef3c81e827ba58f076666a98b419fea150994","typeString":"literal_string \"RolesStorageAccessor: Storage not initialized\""},"value":"RolesStorageAccessor: Storage not initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1193b3573cf5977e8a170a4fa52ef3c81e827ba58f076666a98b419fea150994","typeString":"literal_string \"RolesStorageAccessor: Storage not initialized\""}],"id":832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4171:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4171:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":837,"nodeType":"ExpressionStatement","src":"4171:72:3"}]},"documentation":{"id":814,"nodeType":"StructuredDocumentation","src":"3735:115:3","text":"@notice Validate Roles storage state\n @dev Performs comprehensive validation of Roles storage integrity"},"id":839,"implemented":true,"kind":"function","modifiers":[],"name":"_validateRolesStorage","nameLocation":"3865:21:3","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"3886:2:3"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"3903:0:3"},"scope":840,"src":"3856:395:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":841,"src":"435:3819:3","usedErrors":[]}],"src":"33:4223:3"},"id":3},"contracts/abstracts/TokenStorageAccessor.sol":{"ast":{"absolutePath":"contracts/abstracts/TokenStorageAccessor.sol","exportedSymbols":{"BaseStorageAccessor":[134],"ITokenStorage":[1083],"TokenStorageAccessor":[1019]},"id":1020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":842,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"contracts/abstracts/BaseStorageAccessor.sol","file":"./BaseStorageAccessor.sol","id":844,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":135,"src":"60:64:4","symbolAliases":[{"foreign":{"id":843,"name":"BaseStorageAccessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"69:19:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/storage/ITokenStorage.sol","file":"../interfaces/storage/ITokenStorage.sol","id":846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":1084,"src":"126:72:4","symbolAliases":[{"foreign":{"id":845,"name":"ITokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"135:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":848,"name":"BaseStorageAccessor","nameLocations":["477:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"477:19:4"},"id":849,"nodeType":"InheritanceSpecifier","src":"477:19:4"},{"baseName":{"id":850,"name":"ITokenStorage","nameLocations":["498:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":1083,"src":"498:13:4"},"id":851,"nodeType":"InheritanceSpecifier","src":"498:13:4"}],"canonicalName":"TokenStorageAccessor","contractDependencies":[],"contractKind":"contract","documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"202:233:4","text":"@title TokenStorageAccessor - Specialized storage accessor for Token domain\n @dev Provides type-safe access to Token storage using Diamond Storage pattern\n @dev Inherits common storage utilities from BaseStorageAccessor"},"fullyImplemented":true,"id":1019,"linearizedBaseContracts":[1019,1083,134],"name":"TokenStorageAccessor","nameLocation":"453:20:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"595:38:4","text":"@dev Storage domain name for Token"},"id":855,"mutability":"constant","name":"TOKEN_DOMAIN","nameLocation":"663:12:4","nodeType":"VariableDeclaration","scope":1019,"src":"639:46:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":853,"name":"string","nodeType":"ElementaryTypeName","src":"639:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"746f6b656e","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"678:7:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d","typeString":"literal_string \"token\""},"value":"token"},"visibility":"private"},{"constant":true,"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"698:47:4","text":"@dev Computed storage slot for Token domain"},"id":861,"mutability":"constant","name":"TOKEN_STORAGE_SLOT","nameLocation":"776:18:4","nodeType":"VariableDeclaration","scope":1019,"src":"751:86:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"751:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"742d7265782e6469616d6f6e642e746f6b656e2e73746f72616765","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"807:29:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb4434","typeString":"literal_string \"t-rex.diamond.token.storage\""},"value":"t-rex.diamond.token.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb4434","typeString":"literal_string \"t-rex.diamond.token.storage\""}],"id":858,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"797:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"797:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":873,"nodeType":"Block","src":"1105:112:4","statements":[{"assignments":[869],"declarations":[{"constant":false,"id":869,"mutability":"mutable","name":"slot","nameLocation":"1124:4:4","nodeType":"VariableDeclaration","scope":873,"src":"1116:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1116:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":871,"initialValue":{"id":870,"name":"TOKEN_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"1131:18:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1116:33:4"},{"AST":{"nodeType":"YulBlock","src":"1169:41:4","statements":[{"nodeType":"YulAssignment","src":"1184:15:4","value":{"name":"slot","nodeType":"YulIdentifier","src":"1195:4:4"},"variableNames":[{"name":"ts.slot","nodeType":"YulIdentifier","src":"1184:7:4"}]}]},"evmVersion":"london","externalReferences":[{"declaration":869,"isOffset":false,"isSlot":false,"src":"1195:4:4","valueSize":1},{"declaration":866,"isOffset":false,"isSlot":true,"src":"1184:7:4","suffix":"slot","valueSize":1}],"id":872,"nodeType":"InlineAssembly","src":"1160:50:4"}]},"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"917:106:4","text":"@notice Get Token storage reference with validation\n @return ts Token storage struct reference"},"id":874,"implemented":true,"kind":"function","modifiers":[],"name":"_getTokenStorage","nameLocation":"1038:16:4","nodeType":"FunctionDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[],"src":"1054:2:4"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"ts","nameLocation":"1101:2:4","nodeType":"VariableDeclaration","scope":874,"src":"1080:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"},"typeName":{"id":865,"nodeType":"UserDefinedTypeName","pathNode":{"id":864,"name":"TokenStorage","nameLocations":["1080:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"1080:12:4"},"referencedDeclaration":1082,"src":"1080:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"}},"visibility":"internal"}],"src":"1079:25:4"},"scope":1019,"src":"1029:188:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":888,"nodeType":"Block","src":"1429:123:4","statements":[{"assignments":[882],"declarations":[{"constant":false,"id":882,"mutability":"mutable","name":"slot","nameLocation":"1448:4:4","nodeType":"VariableDeclaration","scope":888,"src":"1440:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1440:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[{"id":884,"name":"TOKEN_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"1471:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":883,"name":"_getStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1455:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (string memory) pure returns (bytes32)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1440:44:4"},{"AST":{"nodeType":"YulBlock","src":"1504:41:4","statements":[{"nodeType":"YulAssignment","src":"1519:15:4","value":{"name":"slot","nodeType":"YulIdentifier","src":"1530:4:4"},"variableNames":[{"name":"ts.slot","nodeType":"YulIdentifier","src":"1519:7:4"}]}]},"evmVersion":"london","externalReferences":[{"declaration":882,"isOffset":false,"isSlot":false,"src":"1530:4:4","valueSize":1},{"declaration":879,"isOffset":false,"isSlot":true,"src":"1519:7:4","suffix":"slot","valueSize":1}],"id":887,"nodeType":"InlineAssembly","src":"1495:50:4"}]},"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"1229:110:4","text":"@notice Get Token storage reference using computed slot\n @return ts Token storage struct reference"},"id":889,"implemented":true,"kind":"function","modifiers":[],"name":"_getTokenStorageComputed","nameLocation":"1354:24:4","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"1378:2:4"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"ts","nameLocation":"1425:2:4","nodeType":"VariableDeclaration","scope":889,"src":"1404:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"},"typeName":{"id":878,"nodeType":"UserDefinedTypeName","pathNode":{"id":877,"name":"TokenStorage","nameLocations":["1404:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"1404:12:4"},"referencedDeclaration":1082,"src":"1404:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"}},"visibility":"internal"}],"src":"1403:25:4"},"scope":1019,"src":"1345:207:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":905,"nodeType":"Block","src":"1817:67:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":897,"name":"_getTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"1841:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_TokenStorage_$1082_storage_ptr_$","typeString":"function () pure returns (struct ITokenStorage.TokenStorage storage pointer)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1841:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1860:4:4","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":1070,"src":"1841:23:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1835:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":895,"name":"bytes","nodeType":"ElementaryTypeName","src":"1835:5:4","typeDescriptions":{}}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1835:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1866:6:4","memberName":"length","nodeType":"MemberAccess","src":"1835:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1875:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1835:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":894,"id":904,"nodeType":"Return","src":"1828:48:4"}]},"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"1634:110:4","text":"@notice Check if Token storage is initialized\n @return True if storage is initialized (has a name)"},"id":906,"implemented":true,"kind":"function","modifiers":[],"name":"_isTokenStorageInitialized","nameLocation":"1759:26:4","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"1785:2:4"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":906,"src":"1811:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":892,"name":"bool","nodeType":"ElementaryTypeName","src":"1811:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1810:6:4"},"scope":1019,"src":"1750:134:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":916,"nodeType":"Block","src":"2046:56:4","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":912,"name":"_getTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2064:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_TokenStorage_$1082_storage_ptr_$","typeString":"function () pure returns (struct ITokenStorage.TokenStorage storage pointer)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2064:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:11:4","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1068,"src":"2064:30:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":911,"id":915,"nodeType":"Return","src":"2057:37:4"}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"1896:85:4","text":"@notice Get current total supply safely\n @return The current total supply"},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"1996:15:4","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"2011:2:4"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"2037:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2037:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2036:9:4"},"scope":1019,"src":"1987:115:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":939,"nodeType":"Block","src":"2316:166:4","statements":[{"expression":{"arguments":[{"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2335:24:4","subExpression":{"arguments":[{"id":927,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2351:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":926,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2336:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2336:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a2043616e6e6f74206765742062616c616e6365206f66207a65726f2061646472657373","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2361:58:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cdebef49a35fae9ad9a34e2e3f7e6d18a1b85be2c82fc47013e23ee496d7f203","typeString":"literal_string \"TokenStorageAccessor: Cannot get balance of zero address\""},"value":"TokenStorageAccessor: Cannot get balance of zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cdebef49a35fae9ad9a34e2e3f7e6d18a1b85be2c82fc47013e23ee496d7f203","typeString":"literal_string \"TokenStorageAccessor: Cannot get balance of zero address\""}],"id":925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2327:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:93:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":932,"nodeType":"ExpressionStatement","src":"2327:93:4"},{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":933,"name":"_getTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2438:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_TokenStorage_$1082_storage_ptr_$","typeString":"function () pure returns (struct ITokenStorage.TokenStorage storage pointer)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2438:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2457:8:4","memberName":"balances","nodeType":"MemberAccess","referencedDeclaration":1060,"src":"2438:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":937,"indexExpression":{"id":936,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2466:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2438:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":924,"id":938,"nodeType":"Return","src":"2431:43:4"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"2114:126:4","text":"@notice Get balance of an address safely\n @param account The account to check\n @return The account balance"},"id":940,"implemented":true,"kind":"function","modifiers":[],"name":"_getBalance","nameLocation":"2255:11:4","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"account","nameLocation":"2275:7:4","nodeType":"VariableDeclaration","scope":940,"src":"2267:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2266:17:4"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"2307:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"2307:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2306:9:4"},"scope":1019,"src":"2246:236:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":974,"nodeType":"Block","src":"2741:284:4","statements":[{"expression":{"arguments":[{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2760:22:4","subExpression":{"arguments":[{"id":952,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2776:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":951,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2761:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a2043616e6e6f742067657420616c6c6f77616e63652066726f6d207a65726f2061646472657373","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:62:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_64c66d74005965628bb29ad28046b3027770b032f407ca9f8f730240414d103f","typeString":"literal_string \"TokenStorageAccessor: Cannot get allowance from zero address\""},"value":"TokenStorageAccessor: Cannot get allowance from zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64c66d74005965628bb29ad28046b3027770b032f407ca9f8f730240414d103f","typeString":"literal_string \"TokenStorageAccessor: Cannot get allowance from zero address\""}],"id":950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2752:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2752:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":957,"nodeType":"ExpressionStatement","src":"2752:95:4"},{"expression":{"arguments":[{"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2866:24:4","subExpression":{"arguments":[{"id":960,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"2882:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":959,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2867:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a2043616e6e6f742067657420616c6c6f77616e636520666f72207a65726f2061646472657373","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2892:61:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c632c0e8ad451f98454037553c8829ecd9a6fc1ee604e198ab2231d7999cd39","typeString":"literal_string \"TokenStorageAccessor: Cannot get allowance for zero address\""},"value":"TokenStorageAccessor: Cannot get allowance for zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c632c0e8ad451f98454037553c8829ecd9a6fc1ee604e198ab2231d7999cd39","typeString":"literal_string \"TokenStorageAccessor: Cannot get allowance for zero address\""}],"id":958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2858:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"ExpressionStatement","src":"2858:96:4"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":966,"name":"_getTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2972:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_TokenStorage_$1082_storage_ptr_$","typeString":"function () pure returns (struct ITokenStorage.TokenStorage storage pointer)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2991:10:4","memberName":"allowances","nodeType":"MemberAccess","referencedDeclaration":1066,"src":"2972:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":970,"indexExpression":{"id":969,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3002:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2972:36:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":972,"indexExpression":{"id":971,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3009:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2972:45:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":949,"id":973,"nodeType":"Return","src":"2965:52:4"}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"2494:154:4","text":"@notice Get allowance safely\n @param owner The owner address\n @param spender The spender address\n @return The allowance amount"},"id":975,"implemented":true,"kind":"function","modifiers":[],"name":"_getAllowance","nameLocation":"2663:13:4","nodeType":"FunctionDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"owner","nameLocation":"2685:5:4","nodeType":"VariableDeclaration","scope":975,"src":"2677:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"spender","nameLocation":"2700:7:4","nodeType":"VariableDeclaration","scope":975,"src":"2692:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2676:32:4"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":975,"src":"2732:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"2732:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2731:9:4"},"scope":1019,"src":"2654:371:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"3276:443:4","statements":[{"assignments":[981],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"ts","nameLocation":"3308:2:4","nodeType":"VariableDeclaration","scope":1017,"src":"3287:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"},"typeName":{"id":980,"nodeType":"UserDefinedTypeName","pathNode":{"id":979,"name":"TokenStorage","nameLocations":["3287:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"3287:12:4"},"referencedDeclaration":1082,"src":"3287:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"}},"visibility":"internal"}],"id":984,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":982,"name":"_getTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"3313:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_TokenStorage_$1082_storage_ptr_$","typeString":"function () pure returns (struct ITokenStorage.TokenStorage storage pointer)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3313:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3287:44:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":988,"name":"ts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"3408:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3411:4:4","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":1070,"src":"3408:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":986,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:4","typeDescriptions":{}}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3417:6:4","memberName":"length","nodeType":"MemberAccess","src":"3402:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3426:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3402:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a20546f6b656e206e616d65206e6f7420736574","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3429:42:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad8fc01e858520d5e618b4c2f7362b814c19937bbaecec774e13b18df3af2ccb","typeString":"literal_string \"TokenStorageAccessor: Token name not set\""},"value":"TokenStorageAccessor: Token name not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad8fc01e858520d5e618b4c2f7362b814c19937bbaecec774e13b18df3af2ccb","typeString":"literal_string \"TokenStorageAccessor: Token name not set\""}],"id":985,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3394:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"ExpressionStatement","src":"3394:78:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":1000,"name":"ts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"3497:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":1001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3500:6:4","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":1072,"src":"3497:9:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3491:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":998,"name":"bytes","nodeType":"ElementaryTypeName","src":"3491:5:4","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3508:6:4","memberName":"length","nodeType":"MemberAccess","src":"3491:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3517:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3491:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a20546f6b656e2073796d626f6c206e6f7420736574","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3520:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec4da74ea9e30f0f0e56b97008b4c039124220e5c979eba02d012f45979a24b4","typeString":"literal_string \"TokenStorageAccessor: Token symbol not set\""},"value":"TokenStorageAccessor: Token symbol not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec4da74ea9e30f0f0e56b97008b4c039124220e5c979eba02d012f45979a24b4","typeString":"literal_string \"TokenStorageAccessor: Token symbol not set\""}],"id":997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3483:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3483:82:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"3483:82:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1010,"name":"ts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"3584:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$1082_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":1011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3587:8:4","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1074,"src":"3584:11:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3598:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3584:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a20546f6b656e20646563696d616c73206e6f7420736574","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3601:46:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0dd53c0c35db1e715792eeba1dd7eda83b0accb0454ed6c08b2edeced41e256f","typeString":"literal_string \"TokenStorageAccessor: Token decimals not set\""},"value":"TokenStorageAccessor: Token decimals not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0dd53c0c35db1e715792eeba1dd7eda83b0accb0454ed6c08b2edeced41e256f","typeString":"literal_string \"TokenStorageAccessor: Token decimals not set\""}],"id":1009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3576:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3576:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"3576:72:4"}]},"documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"3108:115:4","text":"@notice Validate Token storage state\n @dev Performs comprehensive validation of Token storage integrity"},"id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"_validateTokenStorage","nameLocation":"3238:21:4","nodeType":"FunctionDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[],"src":"3259:2:4"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[],"src":"3276:0:4"},"scope":1019,"src":"3229:490:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1020,"src":"435:3287:4","usedErrors":[]}],"src":"33:3691:4"},"id":4},"contracts/interfaces/storage/IComplianceStorage.sol":{"ast":{"absolutePath":"contracts/interfaces/storage/IComplianceStorage.sol","exportedSymbols":{"IComplianceStorage":[1040]},"id":1041,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1021,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IComplianceStorage","contractDependencies":[],"contractKind":"interface","documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"60:172:5","text":"@title IComplianceStorage - Interface for Compliance domain storage structure\n @dev Defines the storage layout for Compliance domain using Diamond Storage pattern"},"fullyImplemented":true,"id":1040,"linearizedBaseContracts":[1040],"name":"IComplianceStorage","nameLocation":"242:18:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IComplianceStorage.ComplianceStorage","id":1039,"members":[{"constant":false,"id":1024,"mutability":"mutable","name":"maxBalance","nameLocation":"496:10:5","nodeType":"VariableDeclaration","scope":1039,"src":"488:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"minBalance","nameLocation":"541:10:5","nodeType":"VariableDeclaration","scope":1039,"src":"533:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"maxInvestors","nameLocation":"598:12:5","nodeType":"VariableDeclaration","scope":1039,"src":"590:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"590:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"currentInvestorCount","nameLocation":"645:20:5","nodeType":"VariableDeclaration","scope":1039,"src":"637:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"lastTransferTime","nameLocation":"754:16:5","nodeType":"VariableDeclaration","scope":1039,"src":"726:44:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1033,"keyType":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"726:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"frozenInvestors","nameLocation":"806:15:5","nodeType":"VariableDeclaration","scope":1039,"src":"781:40:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1037,"keyType":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"781:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1036,"name":"bool","nodeType":"ElementaryTypeName","src":"800:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"ComplianceStorage","nameLocation":"422:17:5","nodeType":"StructDefinition","scope":1040,"src":"415:414:5","visibility":"public"}],"scope":1041,"src":"232:600:5","usedErrors":[]}],"src":"33:801:5"},"id":5},"contracts/interfaces/storage/IRolesStorage.sol":{"ast":{"absolutePath":"contracts/interfaces/storage/IRolesStorage.sol","exportedSymbols":{"IRolesStorage":[1053]},"id":1054,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1042,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IRolesStorage","contractDependencies":[],"contractKind":"interface","documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"60:157:6","text":"@title IRolesStorage - Interface for Roles domain storage structure\n @dev Defines the storage layout for Roles domain using Diamond Storage pattern"},"fullyImplemented":true,"id":1053,"linearizedBaseContracts":[1053],"name":"IRolesStorage","nameLocation":"227:13:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IRolesStorage.RolesStorage","id":1052,"members":[{"constant":false,"id":1045,"mutability":"mutable","name":"owner","nameLocation":"459:5:6","nodeType":"VariableDeclaration","scope":1052,"src":"451:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"agents","nameLocation":"500:6:6","nodeType":"VariableDeclaration","scope":1052,"src":"475:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1048,"keyType":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"483:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"475:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1047,"name":"bool","nodeType":"ElementaryTypeName","src":"494:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"initialized","nameLocation":"522:11:6","nodeType":"VariableDeclaration","scope":1052,"src":"517:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1050,"name":"bool","nodeType":"ElementaryTypeName","src":"517:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"RolesStorage","nameLocation":"392:12:6","nodeType":"StructDefinition","scope":1053,"src":"385:156:6","visibility":"public"}],"scope":1054,"src":"217:327:6","usedErrors":[]}],"src":"33:513:6"},"id":6},"contracts/interfaces/storage/ITokenStorage.sol":{"ast":{"absolutePath":"contracts/interfaces/storage/ITokenStorage.sol","exportedSymbols":{"ITokenStorage":[1083]},"id":1084,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1055,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"ITokenStorage","contractDependencies":[],"contractKind":"interface","documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"60:157:7","text":"@title ITokenStorage - Interface for Token domain storage structure\n @dev Defines the storage layout for Token domain using Diamond Storage pattern"},"fullyImplemented":true,"id":1083,"linearizedBaseContracts":[1083],"name":"ITokenStorage","nameLocation":"227:13:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ITokenStorage.TokenStorage","id":1082,"members":[{"constant":false,"id":1060,"mutability":"mutable","name":"balances","nameLocation":"481:8:7","nodeType":"VariableDeclaration","scope":1082,"src":"453:36:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1059,"keyType":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"453:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"allowances","nameLocation":"548:10:7","nodeType":"VariableDeclaration","scope":1082,"src":"500:58:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1065,"keyType":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"500:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1064,"keyType":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"519:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"totalSupply","nameLocation":"577:11:7","nodeType":"VariableDeclaration","scope":1082,"src":"569:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"569:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"name","nameLocation":"606:4:7","nodeType":"VariableDeclaration","scope":1082,"src":"599:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1069,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"symbol","nameLocation":"628:6:7","nodeType":"VariableDeclaration","scope":1082,"src":"621:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1071,"name":"string","nodeType":"ElementaryTypeName","src":"621:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"decimals","nameLocation":"651:8:7","nodeType":"VariableDeclaration","scope":1082,"src":"645:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1073,"name":"uint8","nodeType":"ElementaryTypeName","src":"645:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"frozenAccounts","nameLocation":"751:14:7","nodeType":"VariableDeclaration","scope":1082,"src":"726:39:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1077,"keyType":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"726:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1076,"name":"bool","nodeType":"ElementaryTypeName","src":"745:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"holders","nameLocation":"786:7:7","nodeType":"VariableDeclaration","scope":1082,"src":"776:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1080,"nodeType":"ArrayTypeName","src":"776:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"TokenStorage","nameLocation":"392:12:7","nodeType":"StructDefinition","scope":1083,"src":"385:458:7","visibility":"public"}],"scope":1084,"src":"217:629:7","usedErrors":[]}],"src":"33:815:7"},"id":7}},"contracts":{"contracts/abstracts/BaseStorageAccessor.sol":{"BaseStorageAccessor":{"abi":[{"inputs":[],"name":"getStorageNamespace","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getStorageVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getStorageNamespace()":"c3946aa8","getStorageVersion()":"79fd5e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStorageNamespace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides common patterns and utilities for Diamond Storage implementationThis contract defines the foundation for type-safe storage access across all facets\",\"kind\":\"dev\",\"methods\":{\"getStorageNamespace()\":{\"returns\":{\"_0\":\"The namespace prefix\"}},\"getStorageVersion()\":{\"returns\":{\"_0\":\"The current storage version\"}}},\"stateVariables\":{\"NAMESPACE_PREFIX\":{\"details\":\"Namespace prefix for T-REX Diamond storage slots\"},\"STORAGE_VERSION\":{\"details\":\"Storage version for future migrations\"}},\"title\":\"BaseStorageAccessor - Abstract base contract for Diamond Storage access\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageNamespace()\":{\"notice\":\"Get the namespace prefix used for storage slots\"},\"getStorageVersion()\":{\"notice\":\"Get the current storage version\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/BaseStorageAccessor.sol\":\"BaseStorageAccessor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/BaseStorageAccessor.sol\":{\"keccak256\":\"0x27b14ca03c799e4c8cd96f62f60808e3f9739280ea4103cb4621c5c4a77ab3b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://293d79aa54c88cf6930f9d9bd7270b3932735359eca38283ae843105ae83dd78\",\"dweb:/ipfs/QmTCfGw7s2FernisYKCLH5e6LDdcEaWcNiNkVR8sDTWh7q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/abstracts/ComplianceStorageAccessor.sol":{"ComplianceStorageAccessor":{"abi":[{"inputs":[],"name":"getStorageNamespace","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getStorageVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getStorageNamespace()":"c3946aa8","getStorageVersion()":"79fd5e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStorageNamespace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides type-safe access to Compliance storage using Diamond Storage patternInherits common storage utilities from BaseStorageAccessor\",\"kind\":\"dev\",\"methods\":{\"getStorageNamespace()\":{\"returns\":{\"_0\":\"The namespace prefix\"}},\"getStorageVersion()\":{\"returns\":{\"_0\":\"The current storage version\"}}},\"stateVariables\":{\"COMPLIANCE_DOMAIN\":{\"details\":\"Storage domain name for Compliance\"},\"COMPLIANCE_STORAGE_SLOT\":{\"details\":\"Computed storage slot for Compliance domain\"}},\"title\":\"ComplianceStorageAccessor - Specialized storage accessor for Compliance domain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageNamespace()\":{\"notice\":\"Get the namespace prefix used for storage slots\"},\"getStorageVersion()\":{\"notice\":\"Get the current storage version\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/ComplianceStorageAccessor.sol\":\"ComplianceStorageAccessor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/BaseStorageAccessor.sol\":{\"keccak256\":\"0x27b14ca03c799e4c8cd96f62f60808e3f9739280ea4103cb4621c5c4a77ab3b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://293d79aa54c88cf6930f9d9bd7270b3932735359eca38283ae843105ae83dd78\",\"dweb:/ipfs/QmTCfGw7s2FernisYKCLH5e6LDdcEaWcNiNkVR8sDTWh7q\"]},\"contracts/abstracts/ComplianceStorageAccessor.sol\":{\"keccak256\":\"0x99cc4690cff09934bc1b3e49ac9d0fca8fe8784ef2b117ee1508a6ba05437a3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7cf2f917da3a882e4eb450f95e91e3eb057a3b4ce6f4faafbd2b35619b5b20d\",\"dweb:/ipfs/QmUXAVp1rJBDmrUD9cdQJxty7edo4mFSkNfp6Dco84dGCP\"]},\"contracts/interfaces/storage/IComplianceStorage.sol\":{\"keccak256\":\"0x7c22907f49f1ad31a42d7de509fc72639a98a770b783b5d0c2232a361cbb386e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7cfa8ec3693dddeff39023cdb090d533b06538ad38fa6a355576f49c0568e70\",\"dweb:/ipfs/Qma7TVeFhmPM15hyNXaM8DHNNQKCK12ugKnEaSUtAgPinX\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/abstracts/MultiDomainStorageAccessor.sol":{"MultiDomainStorageAccessor":{"abi":[{"inputs":[],"name":"getStorageNamespace","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getStorageStatus","outputs":[{"internalType":"bool","name":"token","type":"bool"},{"internalType":"bool","name":"roles","type":"bool"},{"internalType":"bool","name":"compliance","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStorageVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getStorageNamespace()":"c3946aa8","getStorageStatus()":"545e1b52","getStorageVersion()":"79fd5e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStorageNamespace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"token\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"roles\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"compliance\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides coordinated access to Token, Roles, and Compliance storage domainsUseful for facets that need to interact with multiple storage domains\",\"kind\":\"dev\",\"methods\":{\"getStorageNamespace()\":{\"returns\":{\"_0\":\"The namespace prefix\"}},\"getStorageStatus()\":{\"returns\":{\"compliance\":\"True if Compliance storage is initialized\",\"roles\":\"True if Roles storage is initialized\",\"token\":\"True if Token storage is initialized\"}},\"getStorageVersion()\":{\"returns\":{\"_0\":\"The current storage version\"}}},\"title\":\"MultiDomainStorageAccessor - Unified access to multiple storage domains\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageNamespace()\":{\"notice\":\"Get the namespace prefix used for storage slots\"},\"getStorageStatus()\":{\"notice\":\"Get comprehensive storage status\"},\"getStorageVersion()\":{\"notice\":\"Get the current storage version\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/MultiDomainStorageAccessor.sol\":\"MultiDomainStorageAccessor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/BaseStorageAccessor.sol\":{\"keccak256\":\"0x27b14ca03c799e4c8cd96f62f60808e3f9739280ea4103cb4621c5c4a77ab3b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://293d79aa54c88cf6930f9d9bd7270b3932735359eca38283ae843105ae83dd78\",\"dweb:/ipfs/QmTCfGw7s2FernisYKCLH5e6LDdcEaWcNiNkVR8sDTWh7q\"]},\"contracts/abstracts/ComplianceStorageAccessor.sol\":{\"keccak256\":\"0x99cc4690cff09934bc1b3e49ac9d0fca8fe8784ef2b117ee1508a6ba05437a3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7cf2f917da3a882e4eb450f95e91e3eb057a3b4ce6f4faafbd2b35619b5b20d\",\"dweb:/ipfs/QmUXAVp1rJBDmrUD9cdQJxty7edo4mFSkNfp6Dco84dGCP\"]},\"contracts/abstracts/MultiDomainStorageAccessor.sol\":{\"keccak256\":\"0x1f11d404b0aaa1d948549ca544b441666eaa1699936801ada3dbd93a4b8a4ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b3d97f3aec7813913f8dd23d44bdd305278b82a24837788bce0e948300dd654\",\"dweb:/ipfs/QmTMx6EGdJjJcN3auTC4iraPy7cshXNbTR7XkxHBs78j8s\"]},\"contracts/abstracts/RolesStorageAccessor.sol\":{\"keccak256\":\"0x28c914e85efcc4bb275e81bf6699ab313da00250d048ed0a134dd1dd04df8b60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc366527a11b47e4685bd050cffce4445a40611ed3af0ed0c4c34585acae389\",\"dweb:/ipfs/QmNosWZn3u3tH1NAKnbZM5U1mqEM3RZbCCT5SdYSxrLGf4\"]},\"contracts/abstracts/TokenStorageAccessor.sol\":{\"keccak256\":\"0x4f410decd0fcfb68d760f8c0587f78643b4b872c014f4c90a32b94be488900cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56db3407403c216648d32e0223b2be096524097e91eee4c05e0078de0e427365\",\"dweb:/ipfs/QmVJn6fSZpvCHDVCqbqRu56Ec4x1JeVjQKa2KoBfvBFHz2\"]},\"contracts/interfaces/storage/IComplianceStorage.sol\":{\"keccak256\":\"0x7c22907f49f1ad31a42d7de509fc72639a98a770b783b5d0c2232a361cbb386e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7cfa8ec3693dddeff39023cdb090d533b06538ad38fa6a355576f49c0568e70\",\"dweb:/ipfs/Qma7TVeFhmPM15hyNXaM8DHNNQKCK12ugKnEaSUtAgPinX\"]},\"contracts/interfaces/storage/IRolesStorage.sol\":{\"keccak256\":\"0x7e41cbf60c0f78ed9875dffbcdaa4f6b1e6dce9f2714f1025cf84668d1ccdc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00de1d260de6ee54c29b086aec1010cfc24bdf5b9b344a899ddfc1bd2af3c121\",\"dweb:/ipfs/QmPwwwgweT7uQVSwWzTpqjf4SX66jDD2ib8Ur43GhiDSWz\"]},\"contracts/interfaces/storage/ITokenStorage.sol\":{\"keccak256\":\"0xd0f727d41578dab4d012ac6f996845760afe4ae5c27d03c1665adff7d7189a17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f932fa74431cb33d630f9618be840fef799a5d756e02df469aad36c87fee3380\",\"dweb:/ipfs/QmQkfHXzW1qFM5M8YVtqry1AEGjKUZvZnuKfXQt851MAdj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/abstracts/RolesStorageAccessor.sol":{"RolesStorageAccessor":{"abi":[{"inputs":[],"name":"getStorageNamespace","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getStorageVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getStorageNamespace()":"c3946aa8","getStorageVersion()":"79fd5e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStorageNamespace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides type-safe access to Roles storage using Diamond Storage patternInherits common storage utilities from BaseStorageAccessor\",\"kind\":\"dev\",\"methods\":{\"getStorageNamespace()\":{\"returns\":{\"_0\":\"The namespace prefix\"}},\"getStorageVersion()\":{\"returns\":{\"_0\":\"The current storage version\"}}},\"stateVariables\":{\"ROLES_DOMAIN\":{\"details\":\"Storage domain name for Roles\"},\"ROLES_STORAGE_SLOT\":{\"details\":\"Computed storage slot for Roles domain\"}},\"title\":\"RolesStorageAccessor - Specialized storage accessor for Roles domain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageNamespace()\":{\"notice\":\"Get the namespace prefix used for storage slots\"},\"getStorageVersion()\":{\"notice\":\"Get the current storage version\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/RolesStorageAccessor.sol\":\"RolesStorageAccessor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/BaseStorageAccessor.sol\":{\"keccak256\":\"0x27b14ca03c799e4c8cd96f62f60808e3f9739280ea4103cb4621c5c4a77ab3b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://293d79aa54c88cf6930f9d9bd7270b3932735359eca38283ae843105ae83dd78\",\"dweb:/ipfs/QmTCfGw7s2FernisYKCLH5e6LDdcEaWcNiNkVR8sDTWh7q\"]},\"contracts/abstracts/RolesStorageAccessor.sol\":{\"keccak256\":\"0x28c914e85efcc4bb275e81bf6699ab313da00250d048ed0a134dd1dd04df8b60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc366527a11b47e4685bd050cffce4445a40611ed3af0ed0c4c34585acae389\",\"dweb:/ipfs/QmNosWZn3u3tH1NAKnbZM5U1mqEM3RZbCCT5SdYSxrLGf4\"]},\"contracts/interfaces/storage/IRolesStorage.sol\":{\"keccak256\":\"0x7e41cbf60c0f78ed9875dffbcdaa4f6b1e6dce9f2714f1025cf84668d1ccdc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00de1d260de6ee54c29b086aec1010cfc24bdf5b9b344a899ddfc1bd2af3c121\",\"dweb:/ipfs/QmPwwwgweT7uQVSwWzTpqjf4SX66jDD2ib8Ur43GhiDSWz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/abstracts/TokenStorageAccessor.sol":{"TokenStorageAccessor":{"abi":[{"inputs":[],"name":"getStorageNamespace","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getStorageVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getStorageNamespace()":"c3946aa8","getStorageVersion()":"79fd5e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStorageNamespace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides type-safe access to Token storage using Diamond Storage patternInherits common storage utilities from BaseStorageAccessor\",\"kind\":\"dev\",\"methods\":{\"getStorageNamespace()\":{\"returns\":{\"_0\":\"The namespace prefix\"}},\"getStorageVersion()\":{\"returns\":{\"_0\":\"The current storage version\"}}},\"stateVariables\":{\"TOKEN_DOMAIN\":{\"details\":\"Storage domain name for Token\"},\"TOKEN_STORAGE_SLOT\":{\"details\":\"Computed storage slot for Token domain\"}},\"title\":\"TokenStorageAccessor - Specialized storage accessor for Token domain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageNamespace()\":{\"notice\":\"Get the namespace prefix used for storage slots\"},\"getStorageVersion()\":{\"notice\":\"Get the current storage version\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/TokenStorageAccessor.sol\":\"TokenStorageAccessor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/BaseStorageAccessor.sol\":{\"keccak256\":\"0x27b14ca03c799e4c8cd96f62f60808e3f9739280ea4103cb4621c5c4a77ab3b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://293d79aa54c88cf6930f9d9bd7270b3932735359eca38283ae843105ae83dd78\",\"dweb:/ipfs/QmTCfGw7s2FernisYKCLH5e6LDdcEaWcNiNkVR8sDTWh7q\"]},\"contracts/abstracts/TokenStorageAccessor.sol\":{\"keccak256\":\"0x4f410decd0fcfb68d760f8c0587f78643b4b872c014f4c90a32b94be488900cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56db3407403c216648d32e0223b2be096524097e91eee4c05e0078de0e427365\",\"dweb:/ipfs/QmVJn6fSZpvCHDVCqbqRu56Ec4x1JeVjQKa2KoBfvBFHz2\"]},\"contracts/interfaces/storage/ITokenStorage.sol\":{\"keccak256\":\"0xd0f727d41578dab4d012ac6f996845760afe4ae5c27d03c1665adff7d7189a17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f932fa74431cb33d630f9618be840fef799a5d756e02df469aad36c87fee3380\",\"dweb:/ipfs/QmQkfHXzW1qFM5M8YVtqry1AEGjKUZvZnuKfXQt851MAdj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/storage/IComplianceStorage.sol":{"IComplianceStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines the storage layout for Compliance domain using Diamond Storage pattern\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IComplianceStorage - Interface for Compliance domain storage structure\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/storage/IComplianceStorage.sol\":\"IComplianceStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/storage/IComplianceStorage.sol\":{\"keccak256\":\"0x7c22907f49f1ad31a42d7de509fc72639a98a770b783b5d0c2232a361cbb386e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7cfa8ec3693dddeff39023cdb090d533b06538ad38fa6a355576f49c0568e70\",\"dweb:/ipfs/Qma7TVeFhmPM15hyNXaM8DHNNQKCK12ugKnEaSUtAgPinX\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/storage/IRolesStorage.sol":{"IRolesStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines the storage layout for Roles domain using Diamond Storage pattern\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IRolesStorage - Interface for Roles domain storage structure\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/storage/IRolesStorage.sol\":\"IRolesStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/storage/IRolesStorage.sol\":{\"keccak256\":\"0x7e41cbf60c0f78ed9875dffbcdaa4f6b1e6dce9f2714f1025cf84668d1ccdc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00de1d260de6ee54c29b086aec1010cfc24bdf5b9b344a899ddfc1bd2af3c121\",\"dweb:/ipfs/QmPwwwgweT7uQVSwWzTpqjf4SX66jDD2ib8Ur43GhiDSWz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/storage/ITokenStorage.sol":{"ITokenStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines the storage layout for Token domain using Diamond Storage pattern\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ITokenStorage - Interface for Token domain storage structure\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/storage/ITokenStorage.sol\":\"ITokenStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/storage/ITokenStorage.sol\":{\"keccak256\":\"0xd0f727d41578dab4d012ac6f996845760afe4ae5c27d03c1665adff7d7189a17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f932fa74431cb33d630f9618be840fef799a5d756e02df469aad36c87fee3380\",\"dweb:/ipfs/QmQkfHXzW1qFM5M8YVtqry1AEGjKUZvZnuKfXQt851MAdj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}