{"id":"98a586fc7b359030c376215d53a1ac8c","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/abstracts/BaseStorageAccessor.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title BaseStorageAccessor - Abstract base contract for Diamond Storage access\r\n/// @dev Provides common patterns and utilities for Diamond Storage implementation\r\n/// @dev This contract defines the foundation for type-safe storage access across all facets\r\nabstract contract BaseStorageAccessor {\r\n    \r\n    // ================== STORAGE CONSTANTS ==================\r\n    \r\n    /// @dev Namespace prefix for T-REX Diamond storage slots\r\n    string private constant NAMESPACE_PREFIX = \"t-rex.diamond\";\r\n    \r\n    /// @dev Storage version for future migrations\r\n    uint256 internal constant STORAGE_VERSION = 1;\r\n    \r\n    // ================== ABSTRACT STORAGE FUNCTIONS ==================\r\n    \r\n    /// @notice Get storage slot hash for a domain\r\n    /// @param domain The storage domain name (e.g., \"token\", \"roles\")\r\n    /// @return slot The computed storage slot hash\r\n    function _getStorageSlot(string memory domain) internal pure returns (bytes32 slot) {\r\n        slot = keccak256(abi.encodePacked(NAMESPACE_PREFIX, \".\", domain, \".storage\"));\r\n    }\r\n    \r\n    /// @notice Get versioned storage slot hash for a domain\r\n    /// @param domain The storage domain name\r\n    /// @param version The storage version\r\n    /// @return slot The computed versioned storage slot hash\r\n    function _getVersionedStorageSlot(string memory domain, uint256 version) internal pure returns (bytes32 slot) {\r\n        slot = keccak256(abi.encodePacked(NAMESPACE_PREFIX, \".\", domain, \".storage.v\", version));\r\n    }\r\n    \r\n    // ================== STORAGE VALIDATION ==================\r\n    \r\n    /// @notice Validate that storage is properly initialized\r\n    /// @param storagePointer The storage pointer to validate\r\n    /// @param domain The domain name for error messages\r\n    modifier validateStorage(bytes32 storagePointer, string memory domain) {\r\n        require(storagePointer != bytes32(0), string(abi.encodePacked(\"BaseStorageAccessor: Invalid \", domain, \" storage\")));\r\n        _;\r\n    }\r\n    \r\n    // ================== UTILITIES ==================\r\n    \r\n    /// @notice Check if an address is the zero address\r\n    /// @param addr The address to check\r\n    /// @return True if the address is zero\r\n    function _isZeroAddress(address addr) internal pure returns (bool) {\r\n        return addr == address(0);\r\n    }\r\n    \r\n    /// @notice Require that an address is not zero\r\n    /// @param addr The address to check\r\n    /// @param errorMessage Custom error message\r\n    function _requireNotZero(address addr, string memory errorMessage) internal pure {\r\n        require(!_isZeroAddress(addr), errorMessage);\r\n    }\r\n    \r\n    // ================== STORAGE INTROSPECTION ==================\r\n    \r\n    /// @notice Get the current storage version\r\n    /// @return The current storage version\r\n    function getStorageVersion() external pure returns (uint256) {\r\n        return STORAGE_VERSION;\r\n    }\r\n    \r\n    /// @notice Get the namespace prefix used for storage slots\r\n    /// @return The namespace prefix\r\n    function getStorageNamespace() external pure returns (string memory) {\r\n        return NAMESPACE_PREFIX;\r\n    }\r\n}\r\n"},"contracts/abstracts/RolesStorageAccessor.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\nimport { BaseStorageAccessor } from \"./BaseStorageAccessor.sol\";\r\nimport { IRolesStorage } from \"../interfaces/storage/IRolesStorage.sol\";\r\n\r\n/// @title RolesStorageAccessor - Specialized storage accessor for Roles domain\r\n/// @dev Provides type-safe access to Roles storage using Diamond Storage pattern\r\n/// @dev Inherits common storage utilities from BaseStorageAccessor\r\nabstract contract RolesStorageAccessor is BaseStorageAccessor, IRolesStorage {\r\n    \r\n    // ================== STORAGE CONSTANTS ==================\r\n    \r\n    /// @dev Storage domain name for Roles\r\n    string private constant ROLES_DOMAIN = \"roles\";\r\n    \r\n    /// @dev Computed storage slot for Roles domain\r\n    bytes32 private constant ROLES_STORAGE_SLOT = keccak256(\"t-rex.diamond.roles.storage\");\r\n    \r\n    // ================== STORAGE ACCESS ==================\r\n    \r\n    /// @notice Get Roles storage reference with validation\r\n    /// @return rs Roles storage struct reference\r\n    function _getRolesStorage() internal pure returns (RolesStorage storage rs) {\r\n        bytes32 slot = ROLES_STORAGE_SLOT;\r\n        assembly {\r\n            rs.slot := slot\r\n        }\r\n    }\r\n    \r\n    /// @notice Get Roles storage reference using computed slot\r\n    /// @return rs Roles storage struct reference\r\n    function _getRolesStorageComputed() internal pure returns (RolesStorage storage rs) {\r\n        bytes32 slot = _getStorageSlot(ROLES_DOMAIN);\r\n        assembly {\r\n            rs.slot := slot\r\n        }\r\n    }\r\n    \r\n    // ================== STORAGE UTILITIES ==================\r\n    \r\n    /// @notice Check if Roles storage is initialized\r\n    /// @return True if storage is initialized (has an owner)\r\n    function _isRolesStorageInitialized() internal view returns (bool) {\r\n        return !_isZeroAddress(_getRolesStorage().owner);\r\n    }\r\n    \r\n    /// @notice Get current owner safely\r\n    /// @return The current owner address\r\n    function _getOwner() internal view returns (address) {\r\n        return _getRolesStorage().owner;\r\n    }\r\n    \r\n    /// @notice Check if an address is an agent safely\r\n    /// @param account The account to check\r\n    /// @return True if the account is an agent\r\n    function _isAgent(address account) internal view returns (bool) {\r\n        if (_isZeroAddress(account)) return false;\r\n        return _getRolesStorage().agents[account];\r\n    }\r\n    \r\n    /// @notice Check if an address is owner or agent\r\n    /// @param account The account to check\r\n    /// @return True if the account is owner or agent\r\n    function _isOwnerOrAgent(address account) internal view returns (bool) {\r\n        if (_isZeroAddress(account)) return false;\r\n        RolesStorage storage rs = _getRolesStorage();\r\n        return account == rs.owner || rs.agents[account];\r\n    }\r\n    \r\n    // ================== AUTHORIZATION HELPERS ==================\r\n    \r\n    /// @notice Require that caller is the owner\r\n    /// @param caller The address to check\r\n    function _requireOwner(address caller) internal view {\r\n        require(caller == _getOwner(), \"RolesStorageAccessor: Not owner\");\r\n    }\r\n    \r\n    /// @notice Require that caller is an agent\r\n    /// @param caller The address to check\r\n    function _requireAgent(address caller) internal view {\r\n        require(_isAgent(caller), \"RolesStorageAccessor: Not agent\");\r\n    }\r\n    \r\n    /// @notice Require that caller is owner or agent\r\n    /// @param caller The address to check\r\n    function _requireOwnerOrAgent(address caller) internal view {\r\n        require(_isOwnerOrAgent(caller), \"RolesStorageAccessor: Not authorized\");\r\n    }\r\n    \r\n    // ================== STORAGE VALIDATION ==================\r\n    \r\n    /// @notice Validate Roles storage state\r\n    /// @dev Performs comprehensive validation of Roles storage integrity\r\n    function _validateRolesStorage() internal view {\r\n        RolesStorage storage rs = _getRolesStorage();\r\n        \r\n        // Validate that owner is set\r\n        require(!_isZeroAddress(rs.owner), \"RolesStorageAccessor: Owner not set\");\r\n        \r\n        // Validate that storage is marked as initialized\r\n        require(rs.initialized, \"RolesStorageAccessor: Storage not initialized\");\r\n    }\r\n}\r\n"},"contracts/abstracts/TokenStorageAccessor.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\nimport { BaseStorageAccessor } from \"./BaseStorageAccessor.sol\";\r\nimport { ITokenStorage } from \"../interfaces/storage/ITokenStorage.sol\";\r\n\r\n/// @title TokenStorageAccessor - Specialized storage accessor for Token domain\r\n/// @dev Provides type-safe access to Token storage using Diamond Storage pattern\r\n/// @dev Inherits common storage utilities from BaseStorageAccessor\r\nabstract contract TokenStorageAccessor is BaseStorageAccessor, ITokenStorage {\r\n    \r\n    // ================== STORAGE CONSTANTS ==================\r\n    \r\n    /// @dev Storage domain name for Token\r\n    string private constant TOKEN_DOMAIN = \"token\";\r\n    \r\n    /// @dev Computed storage slot for Token domain\r\n    bytes32 private constant TOKEN_STORAGE_SLOT = keccak256(\"t-rex.diamond.token.storage\");\r\n    \r\n    // ================== STORAGE ACCESS ==================\r\n    \r\n    /// @notice Get Token storage reference with validation\r\n    /// @return ts Token storage struct reference\r\n    function _getTokenStorage() internal pure returns (TokenStorage storage ts) {\r\n        bytes32 slot = TOKEN_STORAGE_SLOT;\r\n        assembly {\r\n            ts.slot := slot\r\n        }\r\n    }\r\n    \r\n    /// @notice Get Token storage reference using computed slot\r\n    /// @return ts Token storage struct reference\r\n    function _getTokenStorageComputed() internal pure returns (TokenStorage storage ts) {\r\n        bytes32 slot = _getStorageSlot(TOKEN_DOMAIN);\r\n        assembly {\r\n            ts.slot := slot\r\n        }\r\n    }\r\n    \r\n    // ================== STORAGE UTILITIES ==================\r\n    \r\n    /// @notice Check if Token storage is initialized\r\n    /// @return True if storage is initialized (has a name)\r\n    function _isTokenStorageInitialized() internal view returns (bool) {\r\n        return bytes(_getTokenStorage().name).length > 0;\r\n    }\r\n    \r\n    /// @notice Get current total supply safely\r\n    /// @return The current total supply\r\n    function _getTotalSupply() internal view returns (uint256) {\r\n        return _getTokenStorage().totalSupply;\r\n    }\r\n    \r\n    /// @notice Get balance of an address safely\r\n    /// @param account The account to check\r\n    /// @return The account balance\r\n    function _getBalance(address account) internal view returns (uint256) {\r\n        require(!_isZeroAddress(account), \"TokenStorageAccessor: Cannot get balance of zero address\");\r\n        return _getTokenStorage().balances[account];\r\n    }\r\n    \r\n    /// @notice Get allowance safely\r\n    /// @param owner The owner address\r\n    /// @param spender The spender address\r\n    /// @return The allowance amount\r\n    function _getAllowance(address owner, address spender) internal view returns (uint256) {\r\n        require(!_isZeroAddress(owner), \"TokenStorageAccessor: Cannot get allowance from zero address\");\r\n        require(!_isZeroAddress(spender), \"TokenStorageAccessor: Cannot get allowance for zero address\");\r\n        return _getTokenStorage().allowances[owner][spender];\r\n    }\r\n    \r\n    // ================== STORAGE VALIDATION ==================\r\n    \r\n    /// @notice Validate Token storage state\r\n    /// @dev Performs comprehensive validation of Token storage integrity\r\n    function _validateTokenStorage() internal view {\r\n        TokenStorage storage ts = _getTokenStorage();\r\n        \r\n        // Validate basic token metadata\r\n        require(bytes(ts.name).length > 0, \"TokenStorageAccessor: Token name not set\");\r\n        require(bytes(ts.symbol).length > 0, \"TokenStorageAccessor: Token symbol not set\");\r\n        require(ts.decimals > 0, \"TokenStorageAccessor: Token decimals not set\");\r\n        \r\n        // Additional validations can be added here\r\n    }\r\n}\r\n"},"contracts/interfaces/storage/IClaimTopicsStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title IClaimTopicsStorage - Interface for ClaimTopics domain storage structure\r\n/// @dev Defines the storage layout for ClaimTopics domain using Diamond Storage pattern\r\ninterface IClaimTopicsStorage {\r\n    /// @title ClaimTopicsStorage - Unstructured storage for ClaimTopics domain\r\n    /// @dev Uses Diamond Storage pattern with unique storage slot\r\n    struct ClaimTopicsStorage {\r\n        // === CLAIM TOPICS ===\r\n        uint256[] claimTopics; // array of required claim topics\r\n        mapping(uint256 => bool) requiredClaimTopics; // topic => required\r\n    }\r\n}\r\n"},"contracts/interfaces/storage/IComplianceStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title IComplianceStorage - Interface for Compliance domain storage structure\r\n/// @dev Defines the storage layout for Compliance domain using Diamond Storage pattern\r\ninterface IComplianceStorage {\r\n    /// @title ComplianceStorage - Unstructured storage for Compliance domain\r\n    /// @dev Uses Diamond Storage pattern with unique storage slot\r\n    struct ComplianceStorage {\r\n        // === COMPLIANCE RULES ===\r\n        uint256 maxBalance; // 0 = no limit\r\n        uint256 minBalance; // minimum balance required\r\n        uint256 maxInvestors; // 0 = no limit\r\n        uint256 currentInvestorCount;\r\n        \r\n        // === TRANSFER VALIDATION ===\r\n        mapping(address => uint256) lastTransferTime;\r\n        mapping(address => bool) frozenInvestors;\r\n    }\r\n}\r\n"},"contracts/interfaces/storage/IIdentityStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title IIdentityStorage - Interface for Identity domain storage structure\r\n/// @dev Defines the storage layout for Identity domain using Diamond Storage pattern\r\ninterface IIdentityStorage {\r\n    /// @title IdentityStorage - Unstructured storage for Identity domain\r\n    /// @dev Uses Diamond Storage pattern with unique storage slot\r\n    struct IdentityStorage {\r\n        // === IDENTITY MAPPING ===\r\n        mapping(address => address) investorIdentities; // investor => identity contract\r\n        mapping(address => uint16) investorCountries; // investor => country code\r\n        mapping(address => bool) verificationStatus; // investor => verified\r\n    }\r\n}\r\n"},"contracts/interfaces/storage/IRolesStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title IRolesStorage - Interface for Roles domain storage structure\r\n/// @dev Defines the storage layout for Roles domain using Diamond Storage pattern\r\ninterface IRolesStorage {\r\n    /// @title RolesStorage - Unstructured storage for Roles domain\r\n    /// @dev Uses Diamond Storage pattern with unique storage slot\r\n    struct RolesStorage {\r\n        // === ACCESS CONTROL ===\r\n        address owner;\r\n        mapping(address => bool) agents;\r\n        bool initialized;\r\n    }\r\n}\r\n"},"contracts/interfaces/storage/ITokenStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title ITokenStorage - Interface for Token domain storage structure\r\n/// @dev Defines the storage layout for Token domain using Diamond Storage pattern\r\ninterface ITokenStorage {\r\n    /// @title TokenStorage - Unstructured storage for Token domain\r\n    /// @dev Uses Diamond Storage pattern with unique storage slot\r\n    struct TokenStorage {\r\n        // === TOKEN CORE ERC20 ===\r\n        mapping(address => uint256) balances;\r\n        mapping(address => mapping(address => uint256)) allowances;\r\n        uint256 totalSupply;\r\n        string name;\r\n        string symbol;\r\n        uint8 decimals;\r\n        \r\n        // === TOKEN ERC-3643 EXTENSIONS ===\r\n        mapping(address => bool) frozenAccounts;\r\n        address[] holders; // Track all token holders for compliance\r\n    }\r\n}\r\n"},"contracts/interfaces/storage/ITrustedIssuersStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/// @title ITrustedIssuersStorage - Interface for TrustedIssuers domain storage structure\r\n/// @dev Defines the storage layout for TrustedIssuers domain using Diamond Storage pattern\r\ninterface ITrustedIssuersStorage {\r\n    /// @title TrustedIssuersStorage - Unstructured storage for TrustedIssuers domain\r\n    /// @dev Uses Diamond Storage pattern with unique storage slot\r\n    struct TrustedIssuersStorage {\r\n        // === TRUSTED ISSUERS ===\r\n        mapping(uint256 => address[]) trustedIssuers; // claimTopic => issuer addresses\r\n        mapping(address => mapping(uint256 => bool)) issuerStatus; // issuer => claimTopic => trusted\r\n        mapping(uint256 => uint256) issuerCount; // claimTopic => count of trusted issuers\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"contracts/abstracts/BaseStorageAccessor.sol":{"ast":{"absolutePath":"contracts/abstracts/BaseStorageAccessor.sol","exportedSymbols":{"BaseStorageAccessor":[134]},"id":135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"BaseStorageAccessor","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"60:262:0","text":"@title BaseStorageAccessor - Abstract base contract for Diamond Storage access\n @dev Provides common patterns and utilities for Diamond Storage implementation\n @dev This contract defines the foundation for type-safe storage access across all facets"},"fullyImplemented":true,"id":134,"linearizedBaseContracts":[134],"name":"BaseStorageAccessor","nameLocation":"340:19:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"443:57:0","text":"@dev Namespace prefix for T-REX Diamond storage slots"},"id":6,"mutability":"constant","name":"NAMESPACE_PREFIX","nameLocation":"530:16:0","nodeType":"VariableDeclaration","scope":134,"src":"506:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4,"name":"string","nodeType":"ElementaryTypeName","src":"506:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"742d7265782e6469616d6f6e64","id":5,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"549:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_81c59a60b99b3cf3949d2100563c72f180d8858a7d8de56b87800721ec396ec6","typeString":"literal_string \"t-rex.diamond\""},"value":"t-rex.diamond"},"visibility":"private"},{"constant":true,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"577:46:0","text":"@dev Storage version for future migrations"},"id":10,"mutability":"constant","name":"STORAGE_VERSION","nameLocation":"655:15:0","nodeType":"VariableDeclaration","scope":134,"src":"629:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":9,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"673:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1027:96:0","statements":[{"expression":{"id":28,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"1038:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":22,"name":"NAMESPACE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1072:16:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e","id":23,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1090:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},{"id":24,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1095:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e73746f72616765","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1103:10:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b637e94d5e244509ee5432236d47990bd0eaf7c8d5fce4d73d618b9f654eb62","typeString":"literal_string \".storage\""},"value":".storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_7b637e94d5e244509ee5432236d47990bd0eaf7c8d5fce4d73d618b9f654eb62","typeString":"literal_string \".storage\""}],"expression":{"id":20,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1055:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":21,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1059:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"1055:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1055:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":19,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1045:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1045:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1038:77:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":29,"nodeType":"ExpressionStatement","src":"1038:77:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"766:171:0","text":"@notice Get storage slot hash for a domain\n @param domain The storage domain name (e.g., \"token\", \"roles\")\n @return slot The computed storage slot hash"},"id":31,"implemented":true,"kind":"function","modifiers":[],"name":"_getStorageSlot","nameLocation":"952:15:0","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"domain","nameLocation":"982:6:0","nodeType":"VariableDeclaration","scope":31,"src":"968:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12,"name":"string","nodeType":"ElementaryTypeName","src":"968:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"967:22:0"},"returnParameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"slot","nameLocation":"1021:4:0","nodeType":"VariableDeclaration","scope":31,"src":"1013:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1013:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1012:14:0"},"scope":134,"src":"943:180:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":54,"nodeType":"Block","src":"1461:107:0","statements":[{"expression":{"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1472:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":45,"name":"NAMESPACE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1506:16:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e","id":46,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1524:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},{"id":47,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"1529:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e73746f726167652e76","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1537:12:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8bf18382dea8c15eee66d002c34f5dda0d60cbde3904fd6c980aead89532afa2","typeString":"literal_string \".storage.v\""},"value":".storage.v"},{"id":49,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1551:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_8bf18382dea8c15eee66d002c34f5dda0d60cbde3904fd6c980aead89532afa2","typeString":"literal_string \".storage.v\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":43,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1489:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":44,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1493:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"1489:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1489:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":42,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1479:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1479:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1472:88:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":53,"nodeType":"ExpressionStatement","src":"1472:88:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1135:210:0","text":"@notice Get versioned storage slot hash for a domain\n @param domain The storage domain name\n @param version The storage version\n @return slot The computed versioned storage slot hash"},"id":55,"implemented":true,"kind":"function","modifiers":[],"name":"_getVersionedStorageSlot","nameLocation":"1360:24:0","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"domain","nameLocation":"1399:6:0","nodeType":"VariableDeclaration","scope":55,"src":"1385:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33,"name":"string","nodeType":"ElementaryTypeName","src":"1385:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"version","nameLocation":"1415:7:0","nodeType":"VariableDeclaration","scope":55,"src":"1407:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"1407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1384:39:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"slot","nameLocation":"1455:4:0","nodeType":"VariableDeclaration","scope":55,"src":"1447:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":38,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1447:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1446:14:0"},"scope":134,"src":"1351:217:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"1906:147:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":63,"name":"storagePointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1925:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":65,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1943:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1943:7:0","typeDescriptions":{}}},"id":67,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1925:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"hexValue":"4261736553746f726167654163636573736f723a20496e76616c696420","id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1979:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff86eb63c7ea1ed2bfb1dc61c4dbedf27db4fba5151e171df2750b52cd6c6f80","typeString":"literal_string \"BaseStorageAccessor: Invalid \""},"value":"BaseStorageAccessor: Invalid "},{"id":74,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2012:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2073746f72616765","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:10:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_40155b763d3c0c8be4ce3e552ccf6ea46e60fe9bbb0378fa1534d90eee3a0b59","typeString":"literal_string \" storage\""},"value":" storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ff86eb63c7ea1ed2bfb1dc61c4dbedf27db4fba5151e171df2750b52cd6c6f80","typeString":"literal_string \"BaseStorageAccessor: Invalid \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_40155b763d3c0c8be4ce3e552ccf6ea46e60fe9bbb0378fa1534d90eee3a0b59","typeString":"literal_string \" storage\""}],"expression":{"id":71,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1962:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":72,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1966:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"1962:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":70,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1955:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":69,"name":"string","nodeType":"ElementaryTypeName","src":"1955:6:0","typeDescriptions":{}}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1955:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":62,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1917:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1917:116:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"1917:116:0"},{"id":80,"nodeType":"PlaceholderStatement","src":"2044:1:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1651:178:0","text":"@notice Validate that storage is properly initialized\n @param storagePointer The storage pointer to validate\n @param domain The domain name for error messages"},"id":82,"name":"validateStorage","nameLocation":"1844:15:0","nodeType":"ModifierDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"storagePointer","nameLocation":"1868:14:0","nodeType":"VariableDeclaration","scope":82,"src":"1860:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":57,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1860:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"domain","nameLocation":"1898:6:0","nodeType":"VariableDeclaration","scope":82,"src":"1884:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":59,"name":"string","nodeType":"ElementaryTypeName","src":"1884:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1859:46:0"},"src":"1835:218:0","virtual":false,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2338:44:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":90,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2356:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2372:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2364:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2364:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2364:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2356:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":89,"id":96,"nodeType":"Return","src":"2349:25:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2127:138:0","text":"@notice Check if an address is the zero address\n @param addr The address to check\n @return True if the address is zero"},"id":98,"implemented":true,"kind":"function","modifiers":[],"name":"_isZeroAddress","nameLocation":"2280:14:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"addr","nameLocation":"2303:4:0","nodeType":"VariableDeclaration","scope":98,"src":"2295:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2295:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2294:14:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"2332:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":87,"name":"bool","nodeType":"ElementaryTypeName","src":"2332:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2331:6:0"},"scope":134,"src":"2271:111:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"2620:63:0","statements":[{"expression":{"arguments":[{"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2639:21:0","subExpression":{"arguments":[{"id":108,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2655:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":107,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2640:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2640:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":111,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"2662:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2631:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":113,"nodeType":"ExpressionStatement","src":"2631:44:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2394:139:0","text":"@notice Require that an address is not zero\n @param addr The address to check\n @param errorMessage Custom error message"},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotZero","nameLocation":"2548:15:0","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"addr","nameLocation":"2572:4:0","nodeType":"VariableDeclaration","scope":115,"src":"2564:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"errorMessage","nameLocation":"2592:12:0","nodeType":"VariableDeclaration","scope":115,"src":"2578:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":102,"name":"string","nodeType":"ElementaryTypeName","src":"2578:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:42:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2620:0:0"},"scope":134,"src":"2539:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":123,"nodeType":"Block","src":"2924:41:0","statements":[{"expression":{"id":121,"name":"STORAGE_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2942:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":120,"id":122,"nodeType":"Return","src":"2935:22:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"2769:88:0","text":"@notice Get the current storage version\n @return The current storage version"},"functionSelector":"79fd5e2e","id":124,"implemented":true,"kind":"function","modifiers":[],"name":"getStorageVersion","nameLocation":"2872:17:0","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"2889:2:0"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"2915:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2914:9:0"},"scope":134,"src":"2863:102:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":132,"nodeType":"Block","src":"3149:42:0","statements":[{"expression":{"id":130,"name":"NAMESPACE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3167:16:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":129,"id":131,"nodeType":"Return","src":"3160:23:0"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"2977:97:0","text":"@notice Get the namespace prefix used for storage slots\n @return The namespace prefix"},"functionSelector":"c3946aa8","id":133,"implemented":true,"kind":"function","modifiers":[],"name":"getStorageNamespace","nameLocation":"3089:19:0","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"3108:2:0"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":133,"src":"3134:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":127,"name":"string","nodeType":"ElementaryTypeName","src":"3134:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3133:15:0"},"scope":134,"src":"3080:111:0","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":135,"src":"322:2872:0","usedErrors":[]}],"src":"33:3163:0"},"id":0},"contracts/abstracts/RolesStorageAccessor.sol":{"ast":{"absolutePath":"contracts/abstracts/RolesStorageAccessor.sol","exportedSymbols":{"BaseStorageAccessor":[134],"IRolesStorage":[572],"RolesStorageAccessor":[330]},"id":331,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":136,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:1"},{"absolutePath":"contracts/abstracts/BaseStorageAccessor.sol","file":"./BaseStorageAccessor.sol","id":138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":331,"sourceUnit":135,"src":"60:64:1","symbolAliases":[{"foreign":{"id":137,"name":"BaseStorageAccessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"69:19:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/storage/IRolesStorage.sol","file":"../interfaces/storage/IRolesStorage.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":331,"sourceUnit":573,"src":"126:72:1","symbolAliases":[{"foreign":{"id":139,"name":"IRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"135:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":142,"name":"BaseStorageAccessor","nameLocations":["477:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"477:19:1"},"id":143,"nodeType":"InheritanceSpecifier","src":"477:19:1"},{"baseName":{"id":144,"name":"IRolesStorage","nameLocations":["498:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":572,"src":"498:13:1"},"id":145,"nodeType":"InheritanceSpecifier","src":"498:13:1"}],"canonicalName":"RolesStorageAccessor","contractDependencies":[],"contractKind":"contract","documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"202:233:1","text":"@title RolesStorageAccessor - Specialized storage accessor for Roles domain\n @dev Provides type-safe access to Roles storage using Diamond Storage pattern\n @dev Inherits common storage utilities from BaseStorageAccessor"},"fullyImplemented":true,"id":330,"linearizedBaseContracts":[330,572,134],"name":"RolesStorageAccessor","nameLocation":"453:20:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"595:38:1","text":"@dev Storage domain name for Roles"},"id":149,"mutability":"constant","name":"ROLES_DOMAIN","nameLocation":"663:12:1","nodeType":"VariableDeclaration","scope":330,"src":"639:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":147,"name":"string","nodeType":"ElementaryTypeName","src":"639:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"726f6c6573","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"678:7:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_de9bdca322e1a848f72215bc15cf2c87fe7749145789a9ee281a2a6290af26ab","typeString":"literal_string \"roles\""},"value":"roles"},"visibility":"private"},{"constant":true,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"698:47:1","text":"@dev Computed storage slot for Roles domain"},"id":155,"mutability":"constant","name":"ROLES_STORAGE_SLOT","nameLocation":"776:18:1","nodeType":"VariableDeclaration","scope":330,"src":"751:86:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"751:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"742d7265782e6469616d6f6e642e726f6c65732e73746f72616765","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"807:29:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd5","typeString":"literal_string \"t-rex.diamond.roles.storage\""},"value":"t-rex.diamond.roles.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd5","typeString":"literal_string \"t-rex.diamond.roles.storage\""}],"id":152,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"797:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"797:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":167,"nodeType":"Block","src":"1105:112:1","statements":[{"assignments":[163],"declarations":[{"constant":false,"id":163,"mutability":"mutable","name":"slot","nameLocation":"1124:4:1","nodeType":"VariableDeclaration","scope":167,"src":"1116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":165,"initialValue":{"id":164,"name":"ROLES_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1131:18:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1116:33:1"},{"AST":{"nodeType":"YulBlock","src":"1169:41:1","statements":[{"nodeType":"YulAssignment","src":"1184:15:1","value":{"name":"slot","nodeType":"YulIdentifier","src":"1195:4:1"},"variableNames":[{"name":"rs.slot","nodeType":"YulIdentifier","src":"1184:7:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":160,"isOffset":false,"isSlot":true,"src":"1184:7:1","suffix":"slot","valueSize":1},{"declaration":163,"isOffset":false,"isSlot":false,"src":"1195:4:1","valueSize":1}],"id":166,"nodeType":"InlineAssembly","src":"1160:50:1"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"917:106:1","text":"@notice Get Roles storage reference with validation\n @return rs Roles storage struct reference"},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_getRolesStorage","nameLocation":"1038:16:1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"1054:2:1"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"rs","nameLocation":"1101:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1080:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"RolesStorage","nameLocations":["1080:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":571,"src":"1080:12:1"},"referencedDeclaration":571,"src":"1080:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"}},"visibility":"internal"}],"src":"1079:25:1"},"scope":330,"src":"1029:188:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":182,"nodeType":"Block","src":"1429:123:1","statements":[{"assignments":[176],"declarations":[{"constant":false,"id":176,"mutability":"mutable","name":"slot","nameLocation":"1448:4:1","nodeType":"VariableDeclaration","scope":182,"src":"1440:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1440:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":180,"initialValue":{"arguments":[{"id":178,"name":"ROLES_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"1471:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":177,"name":"_getStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1455:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (string memory) pure returns (bytes32)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1440:44:1"},{"AST":{"nodeType":"YulBlock","src":"1504:41:1","statements":[{"nodeType":"YulAssignment","src":"1519:15:1","value":{"name":"slot","nodeType":"YulIdentifier","src":"1530:4:1"},"variableNames":[{"name":"rs.slot","nodeType":"YulIdentifier","src":"1519:7:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":173,"isOffset":false,"isSlot":true,"src":"1519:7:1","suffix":"slot","valueSize":1},{"declaration":176,"isOffset":false,"isSlot":false,"src":"1530:4:1","valueSize":1}],"id":181,"nodeType":"InlineAssembly","src":"1495:50:1"}]},"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1229:110:1","text":"@notice Get Roles storage reference using computed slot\n @return rs Roles storage struct reference"},"id":183,"implemented":true,"kind":"function","modifiers":[],"name":"_getRolesStorageComputed","nameLocation":"1354:24:1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"1378:2:1"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"rs","nameLocation":"1425:2:1","nodeType":"VariableDeclaration","scope":183,"src":"1404:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"},"typeName":{"id":172,"nodeType":"UserDefinedTypeName","pathNode":{"id":171,"name":"RolesStorage","nameLocations":["1404:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":571,"src":"1404:12:1"},"referencedDeclaration":571,"src":"1404:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"}},"visibility":"internal"}],"src":"1403:25:1"},"scope":330,"src":"1345:207:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":196,"nodeType":"Block","src":"1819:67:1","statements":[{"expression":{"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1837:41:1","subExpression":{"arguments":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":190,"name":"_getRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1853:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_RolesStorage_$571_storage_ptr_$","typeString":"function () pure returns (struct IRolesStorage.RolesStorage storage pointer)"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1853:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1872:5:1","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":564,"src":"1853:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":189,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1838:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1838:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":188,"id":195,"nodeType":"Return","src":"1830:48:1"}]},"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1634:112:1","text":"@notice Check if Roles storage is initialized\n @return True if storage is initialized (has an owner)"},"id":197,"implemented":true,"kind":"function","modifiers":[],"name":"_isRolesStorageInitialized","nameLocation":"1761:26:1","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"1787:2:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"1813:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"1813:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1812:6:1"},"scope":330,"src":"1752:134:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":207,"nodeType":"Block","src":"2036:50:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":203,"name":"_getRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2054:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_RolesStorage_$571_storage_ptr_$","typeString":"function () pure returns (struct IRolesStorage.RolesStorage storage pointer)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2054:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2073:5:1","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":564,"src":"2054:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":202,"id":206,"nodeType":"Return","src":"2047:31:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1898:79:1","text":"@notice Get current owner safely\n @return The current owner address"},"id":208,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwner","nameLocation":"1992:9:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"2001:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":208,"src":"2027:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"2027:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2026:9:1"},"scope":330,"src":"1983:103:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":228,"nodeType":"Block","src":"2312:112:1","statements":[{"condition":{"arguments":[{"id":217,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"2342:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":216,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2327:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":221,"nodeType":"IfStatement","src":"2323:41:1","trueBody":{"expression":{"hexValue":"66616c7365","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2359:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":215,"id":220,"nodeType":"Return","src":"2352:12:1"}},{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":222,"name":"_getRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2382:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_RolesStorage_$571_storage_ptr_$","typeString":"function () pure returns (struct IRolesStorage.RolesStorage storage pointer)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2401:6:1","memberName":"agents","nodeType":"MemberAccess","referencedDeclaration":568,"src":"2382:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":226,"indexExpression":{"id":225,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"2408:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2382:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":215,"id":227,"nodeType":"Return","src":"2375:41:1"}]},"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"2098:144:1","text":"@notice Check if an address is an agent safely\n @param account The account to check\n @return True if the account is an agent"},"id":229,"implemented":true,"kind":"function","modifiers":[],"name":"_isAgent","nameLocation":"2257:8:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"account","nameLocation":"2274:7:1","nodeType":"VariableDeclaration","scope":229,"src":"2266:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:17:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":229,"src":"2306:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"2306:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2305:6:1"},"scope":330,"src":"2248:176:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":259,"nodeType":"Block","src":"2662:174:1","statements":[{"condition":{"arguments":[{"id":238,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2692:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":237,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2677:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2677:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":242,"nodeType":"IfStatement","src":"2673:41:1","trueBody":{"expression":{"hexValue":"66616c7365","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2709:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":236,"id":241,"nodeType":"Return","src":"2702:12:1"}},{"assignments":[245],"declarations":[{"constant":false,"id":245,"mutability":"mutable","name":"rs","nameLocation":"2746:2:1","nodeType":"VariableDeclaration","scope":259,"src":"2725:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"},"typeName":{"id":244,"nodeType":"UserDefinedTypeName","pathNode":{"id":243,"name":"RolesStorage","nameLocations":["2725:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":571,"src":"2725:12:1"},"referencedDeclaration":571,"src":"2725:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"}},"visibility":"internal"}],"id":248,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":246,"name":"_getRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2751:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_RolesStorage_$571_storage_ptr_$","typeString":"function () pure returns (struct IRolesStorage.RolesStorage storage pointer)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2725:44:1"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2787:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":250,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"2798:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2801:5:1","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":564,"src":"2798:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2787:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"expression":{"id":253,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"2810:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2813:6:1","memberName":"agents","nodeType":"MemberAccess","referencedDeclaration":568,"src":"2810:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":256,"indexExpression":{"id":255,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2820:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2810:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2787:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":236,"id":258,"nodeType":"Return","src":"2780:48:1"}]},"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"2436:149:1","text":"@notice Check if an address is owner or agent\n @param account The account to check\n @return True if the account is owner or agent"},"id":260,"implemented":true,"kind":"function","modifiers":[],"name":"_isOwnerOrAgent","nameLocation":"2600:15:1","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"account","nameLocation":"2624:7:1","nodeType":"VariableDeclaration","scope":260,"src":"2616:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"2616:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2615:17:1"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":260,"src":"2656:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":234,"name":"bool","nodeType":"ElementaryTypeName","src":"2656:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2655:6:1"},"scope":330,"src":"2591:245:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":274,"nodeType":"Block","src":"3069:84:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":267,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3088:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":268,"name":"_getOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"3098:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3098:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3088:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c657353746f726167654163636573736f723a204e6f74206f776e6572","id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3111:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0c7320a53d3e1c946e100b26f8957aa691cbc750a89fdd57876a410f0651c37","typeString":"literal_string \"RolesStorageAccessor: Not owner\""},"value":"RolesStorageAccessor: Not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d0c7320a53d3e1c946e100b26f8957aa691cbc750a89fdd57876a410f0651c37","typeString":"literal_string \"RolesStorageAccessor: Not owner\""}],"id":266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3080:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":273,"nodeType":"ExpressionStatement","src":"3080:65:1"}]},"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"2922:88:1","text":"@notice Require that caller is the owner\n @param caller The address to check"},"id":275,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwner","nameLocation":"3025:13:1","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"caller","nameLocation":"3047:6:1","nodeType":"VariableDeclaration","scope":275,"src":"3039:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"3039:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3038:16:1"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"3069:0:1"},"scope":330,"src":"3016:137:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":288,"nodeType":"Block","src":"3311:79:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":283,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"3339:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":282,"name":"_isAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3330:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c657353746f726167654163636573736f723a204e6f74206167656e74","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3348:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c84bc604a4ae7f1be72b045668210a9cba48b8f8bd0aa18005129f96763e648a","typeString":"literal_string \"RolesStorageAccessor: Not agent\""},"value":"RolesStorageAccessor: Not agent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c84bc604a4ae7f1be72b045668210a9cba48b8f8bd0aa18005129f96763e648a","typeString":"literal_string \"RolesStorageAccessor: Not agent\""}],"id":281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3322:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3322:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":287,"nodeType":"ExpressionStatement","src":"3322:60:1"}]},"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"3165:87:1","text":"@notice Require that caller is an agent\n @param caller The address to check"},"id":289,"implemented":true,"kind":"function","modifiers":[],"name":"_requireAgent","nameLocation":"3267:13:1","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"caller","nameLocation":"3289:6:1","nodeType":"VariableDeclaration","scope":289,"src":"3281:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3280:16:1"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"3311:0:1"},"scope":330,"src":"3258:132:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":302,"nodeType":"Block","src":"3561:91:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":297,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3596:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":296,"name":"_isOwnerOrAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3580:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3580:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c657353746f726167654163636573736f723a204e6f7420617574686f72697a6564","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3605:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0063fced1942f5b4428fec3947e5be1863334b868817ad6a227bdc15738e37f2","typeString":"literal_string \"RolesStorageAccessor: Not authorized\""},"value":"RolesStorageAccessor: Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0063fced1942f5b4428fec3947e5be1863334b868817ad6a227bdc15738e37f2","typeString":"literal_string \"RolesStorageAccessor: Not authorized\""}],"id":295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3572:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":301,"nodeType":"ExpressionStatement","src":"3572:72:1"}]},"documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"3402:93:1","text":"@notice Require that caller is owner or agent\n @param caller The address to check"},"id":303,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwnerOrAgent","nameLocation":"3510:20:1","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"caller","nameLocation":"3539:6:1","nodeType":"VariableDeclaration","scope":303,"src":"3531:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"3531:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3530:16:1"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"3561:0:1"},"scope":330,"src":"3501:151:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":328,"nodeType":"Block","src":"3903:348:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"rs","nameLocation":"3935:2:1","nodeType":"VariableDeclaration","scope":328,"src":"3914:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"RolesStorage","nameLocations":["3914:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":571,"src":"3914:12:1"},"referencedDeclaration":571,"src":"3914:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getRolesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3940:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_RolesStorage_$571_storage_ptr_$","typeString":"function () pure returns (struct IRolesStorage.RolesStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3940:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3914:44:1"},{"expression":{"arguments":[{"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4026:25:1","subExpression":{"arguments":[{"expression":{"id":315,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4042:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4045:5:1","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":564,"src":"4042:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":314,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"4027:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4027:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c657353746f726167654163636573736f723a204f776e6572206e6f7420736574","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4053:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_12704de861351daca41c21b5500d50a97372831dd921b78d885a3d9fc62fe4a2","typeString":"literal_string \"RolesStorageAccessor: Owner not set\""},"value":"RolesStorageAccessor: Owner not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12704de861351daca41c21b5500d50a97372831dd921b78d885a3d9fc62fe4a2","typeString":"literal_string \"RolesStorageAccessor: Owner not set\""}],"id":313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4018:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4018:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":321,"nodeType":"ExpressionStatement","src":"4018:73:1"},{"expression":{"arguments":[{"expression":{"id":323,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4179:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_RolesStorage_$571_storage_ptr","typeString":"struct IRolesStorage.RolesStorage storage pointer"}},"id":324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4182:11:1","memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":570,"src":"4179:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c657353746f726167654163636573736f723a2053746f72616765206e6f7420696e697469616c697a6564","id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4195:47:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1193b3573cf5977e8a170a4fa52ef3c81e827ba58f076666a98b419fea150994","typeString":"literal_string \"RolesStorageAccessor: Storage not initialized\""},"value":"RolesStorageAccessor: Storage not initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1193b3573cf5977e8a170a4fa52ef3c81e827ba58f076666a98b419fea150994","typeString":"literal_string \"RolesStorageAccessor: Storage not initialized\""}],"id":322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4171:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4171:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"ExpressionStatement","src":"4171:72:1"}]},"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"3735:115:1","text":"@notice Validate Roles storage state\n @dev Performs comprehensive validation of Roles storage integrity"},"id":329,"implemented":true,"kind":"function","modifiers":[],"name":"_validateRolesStorage","nameLocation":"3865:21:1","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"3886:2:1"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"3903:0:1"},"scope":330,"src":"3856:395:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":331,"src":"435:3819:1","usedErrors":[]}],"src":"33:4223:1"},"id":1},"contracts/abstracts/TokenStorageAccessor.sol":{"ast":{"absolutePath":"contracts/abstracts/TokenStorageAccessor.sol","exportedSymbols":{"BaseStorageAccessor":[134],"ITokenStorage":[602],"TokenStorageAccessor":[509]},"id":510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":332,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"contracts/abstracts/BaseStorageAccessor.sol","file":"./BaseStorageAccessor.sol","id":334,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":510,"sourceUnit":135,"src":"60:64:2","symbolAliases":[{"foreign":{"id":333,"name":"BaseStorageAccessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"69:19:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/storage/ITokenStorage.sol","file":"../interfaces/storage/ITokenStorage.sol","id":336,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":510,"sourceUnit":603,"src":"126:72:2","symbolAliases":[{"foreign":{"id":335,"name":"ITokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"135:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":338,"name":"BaseStorageAccessor","nameLocations":["477:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"477:19:2"},"id":339,"nodeType":"InheritanceSpecifier","src":"477:19:2"},{"baseName":{"id":340,"name":"ITokenStorage","nameLocations":["498:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":602,"src":"498:13:2"},"id":341,"nodeType":"InheritanceSpecifier","src":"498:13:2"}],"canonicalName":"TokenStorageAccessor","contractDependencies":[],"contractKind":"contract","documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"202:233:2","text":"@title TokenStorageAccessor - Specialized storage accessor for Token domain\n @dev Provides type-safe access to Token storage using Diamond Storage pattern\n @dev Inherits common storage utilities from BaseStorageAccessor"},"fullyImplemented":true,"id":509,"linearizedBaseContracts":[509,602,134],"name":"TokenStorageAccessor","nameLocation":"453:20:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"595:38:2","text":"@dev Storage domain name for Token"},"id":345,"mutability":"constant","name":"TOKEN_DOMAIN","nameLocation":"663:12:2","nodeType":"VariableDeclaration","scope":509,"src":"639:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"639:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"746f6b656e","id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"678:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d","typeString":"literal_string \"token\""},"value":"token"},"visibility":"private"},{"constant":true,"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"698:47:2","text":"@dev Computed storage slot for Token domain"},"id":351,"mutability":"constant","name":"TOKEN_STORAGE_SLOT","nameLocation":"776:18:2","nodeType":"VariableDeclaration","scope":509,"src":"751:86:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"751:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"742d7265782e6469616d6f6e642e746f6b656e2e73746f72616765","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"807:29:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb4434","typeString":"literal_string \"t-rex.diamond.token.storage\""},"value":"t-rex.diamond.token.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb4434","typeString":"literal_string \"t-rex.diamond.token.storage\""}],"id":348,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"797:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"797:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":363,"nodeType":"Block","src":"1105:112:2","statements":[{"assignments":[359],"declarations":[{"constant":false,"id":359,"mutability":"mutable","name":"slot","nameLocation":"1124:4:2","nodeType":"VariableDeclaration","scope":363,"src":"1116:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1116:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":361,"initialValue":{"id":360,"name":"TOKEN_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1131:18:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1116:33:2"},{"AST":{"nodeType":"YulBlock","src":"1169:41:2","statements":[{"nodeType":"YulAssignment","src":"1184:15:2","value":{"name":"slot","nodeType":"YulIdentifier","src":"1195:4:2"},"variableNames":[{"name":"ts.slot","nodeType":"YulIdentifier","src":"1184:7:2"}]}]},"evmVersion":"london","externalReferences":[{"declaration":359,"isOffset":false,"isSlot":false,"src":"1195:4:2","valueSize":1},{"declaration":356,"isOffset":false,"isSlot":true,"src":"1184:7:2","suffix":"slot","valueSize":1}],"id":362,"nodeType":"InlineAssembly","src":"1160:50:2"}]},"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"917:106:2","text":"@notice Get Token storage reference with validation\n @return ts Token storage struct reference"},"id":364,"implemented":true,"kind":"function","modifiers":[],"name":"_getTokenStorage","nameLocation":"1038:16:2","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"1054:2:2"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"ts","nameLocation":"1101:2:2","nodeType":"VariableDeclaration","scope":364,"src":"1080:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"},"typeName":{"id":355,"nodeType":"UserDefinedTypeName","pathNode":{"id":354,"name":"TokenStorage","nameLocations":["1080:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"1080:12:2"},"referencedDeclaration":601,"src":"1080:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"}},"visibility":"internal"}],"src":"1079:25:2"},"scope":509,"src":"1029:188:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":378,"nodeType":"Block","src":"1429:123:2","statements":[{"assignments":[372],"declarations":[{"constant":false,"id":372,"mutability":"mutable","name":"slot","nameLocation":"1448:4:2","nodeType":"VariableDeclaration","scope":378,"src":"1440:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1440:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":376,"initialValue":{"arguments":[{"id":374,"name":"TOKEN_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1471:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":373,"name":"_getStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1455:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (string memory) pure returns (bytes32)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1440:44:2"},{"AST":{"nodeType":"YulBlock","src":"1504:41:2","statements":[{"nodeType":"YulAssignment","src":"1519:15:2","value":{"name":"slot","nodeType":"YulIdentifier","src":"1530:4:2"},"variableNames":[{"name":"ts.slot","nodeType":"YulIdentifier","src":"1519:7:2"}]}]},"evmVersion":"london","externalReferences":[{"declaration":372,"isOffset":false,"isSlot":false,"src":"1530:4:2","valueSize":1},{"declaration":369,"isOffset":false,"isSlot":true,"src":"1519:7:2","suffix":"slot","valueSize":1}],"id":377,"nodeType":"InlineAssembly","src":"1495:50:2"}]},"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"1229:110:2","text":"@notice Get Token storage reference using computed slot\n @return ts Token storage struct reference"},"id":379,"implemented":true,"kind":"function","modifiers":[],"name":"_getTokenStorageComputed","nameLocation":"1354:24:2","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"1378:2:2"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"ts","nameLocation":"1425:2:2","nodeType":"VariableDeclaration","scope":379,"src":"1404:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"},"typeName":{"id":368,"nodeType":"UserDefinedTypeName","pathNode":{"id":367,"name":"TokenStorage","nameLocations":["1404:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"1404:12:2"},"referencedDeclaration":601,"src":"1404:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"}},"visibility":"internal"}],"src":"1403:25:2"},"scope":509,"src":"1345:207:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":395,"nodeType":"Block","src":"1817:67:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":387,"name":"_getTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"1841:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_TokenStorage_$601_storage_ptr_$","typeString":"function () pure returns (struct ITokenStorage.TokenStorage storage pointer)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1841:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1860:4:2","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":589,"src":"1841:23:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1835:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":385,"name":"bytes","nodeType":"ElementaryTypeName","src":"1835:5:2","typeDescriptions":{}}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1835:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1866:6:2","memberName":"length","nodeType":"MemberAccess","src":"1835:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1875:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1835:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":384,"id":394,"nodeType":"Return","src":"1828:48:2"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"1634:110:2","text":"@notice Check if Token storage is initialized\n @return True if storage is initialized (has a name)"},"id":396,"implemented":true,"kind":"function","modifiers":[],"name":"_isTokenStorageInitialized","nameLocation":"1759:26:2","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"1785:2:2"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"1811:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":382,"name":"bool","nodeType":"ElementaryTypeName","src":"1811:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1810:6:2"},"scope":509,"src":"1750:134:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"2046:56:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":402,"name":"_getTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"2064:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_TokenStorage_$601_storage_ptr_$","typeString":"function () pure returns (struct ITokenStorage.TokenStorage storage pointer)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2064:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:11:2","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":587,"src":"2064:30:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":401,"id":405,"nodeType":"Return","src":"2057:37:2"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"1896:85:2","text":"@notice Get current total supply safely\n @return The current total supply"},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"1996:15:2","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"2011:2:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"2037:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2037:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2036:9:2"},"scope":509,"src":"1987:115:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":429,"nodeType":"Block","src":"2316:166:2","statements":[{"expression":{"arguments":[{"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2335:24:2","subExpression":{"arguments":[{"id":417,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"2351:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":416,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2336:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2336:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a2043616e6e6f74206765742062616c616e6365206f66207a65726f2061646472657373","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2361:58:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_cdebef49a35fae9ad9a34e2e3f7e6d18a1b85be2c82fc47013e23ee496d7f203","typeString":"literal_string \"TokenStorageAccessor: Cannot get balance of zero address\""},"value":"TokenStorageAccessor: Cannot get balance of zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cdebef49a35fae9ad9a34e2e3f7e6d18a1b85be2c82fc47013e23ee496d7f203","typeString":"literal_string \"TokenStorageAccessor: Cannot get balance of zero address\""}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2327:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:93:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"2327:93:2"},{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":423,"name":"_getTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"2438:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_TokenStorage_$601_storage_ptr_$","typeString":"function () pure returns (struct ITokenStorage.TokenStorage storage pointer)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2438:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2457:8:2","memberName":"balances","nodeType":"MemberAccess","referencedDeclaration":579,"src":"2438:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":427,"indexExpression":{"id":426,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"2466:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2438:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":414,"id":428,"nodeType":"Return","src":"2431:43:2"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"2114:126:2","text":"@notice Get balance of an address safely\n @param account The account to check\n @return The account balance"},"id":430,"implemented":true,"kind":"function","modifiers":[],"name":"_getBalance","nameLocation":"2255:11:2","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"account","nameLocation":"2275:7:2","nodeType":"VariableDeclaration","scope":430,"src":"2267:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2266:17:2"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":430,"src":"2307:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2307:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2306:9:2"},"scope":509,"src":"2246:236:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":464,"nodeType":"Block","src":"2741:284:2","statements":[{"expression":{"arguments":[{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2760:22:2","subExpression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2776:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":441,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2761:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a2043616e6e6f742067657420616c6c6f77616e63652066726f6d207a65726f2061646472657373","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:62:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_64c66d74005965628bb29ad28046b3027770b032f407ca9f8f730240414d103f","typeString":"literal_string \"TokenStorageAccessor: Cannot get allowance from zero address\""},"value":"TokenStorageAccessor: Cannot get allowance from zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64c66d74005965628bb29ad28046b3027770b032f407ca9f8f730240414d103f","typeString":"literal_string \"TokenStorageAccessor: Cannot get allowance from zero address\""}],"id":440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2752:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2752:95:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"2752:95:2"},{"expression":{"arguments":[{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2866:24:2","subExpression":{"arguments":[{"id":450,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2882:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":449,"name":"_isZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2867:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bool_$","typeString":"function (address) pure returns (bool)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a2043616e6e6f742067657420616c6c6f77616e636520666f72207a65726f2061646472657373","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2892:61:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c632c0e8ad451f98454037553c8829ecd9a6fc1ee604e198ab2231d7999cd39","typeString":"literal_string \"TokenStorageAccessor: Cannot get allowance for zero address\""},"value":"TokenStorageAccessor: Cannot get allowance for zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c632c0e8ad451f98454037553c8829ecd9a6fc1ee604e198ab2231d7999cd39","typeString":"literal_string \"TokenStorageAccessor: Cannot get allowance for zero address\""}],"id":448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2858:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:96:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"2858:96:2"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_getTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"2972:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_TokenStorage_$601_storage_ptr_$","typeString":"function () pure returns (struct ITokenStorage.TokenStorage storage pointer)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2991:10:2","memberName":"allowances","nodeType":"MemberAccess","referencedDeclaration":585,"src":"2972:29:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":460,"indexExpression":{"id":459,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"3002:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2972:36:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":462,"indexExpression":{"id":461,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3009:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2972:45:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":439,"id":463,"nodeType":"Return","src":"2965:52:2"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"2494:154:2","text":"@notice Get allowance safely\n @param owner The owner address\n @param spender The spender address\n @return The allowance amount"},"id":465,"implemented":true,"kind":"function","modifiers":[],"name":"_getAllowance","nameLocation":"2663:13:2","nodeType":"FunctionDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"owner","nameLocation":"2685:5:2","nodeType":"VariableDeclaration","scope":465,"src":"2677:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"spender","nameLocation":"2700:7:2","nodeType":"VariableDeclaration","scope":465,"src":"2692:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":434,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2676:32:2"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":465,"src":"2732:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2732:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2731:9:2"},"scope":509,"src":"2654:371:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3276:443:2","statements":[{"assignments":[471],"declarations":[{"constant":false,"id":471,"mutability":"mutable","name":"ts","nameLocation":"3308:2:2","nodeType":"VariableDeclaration","scope":507,"src":"3287:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"},"typeName":{"id":470,"nodeType":"UserDefinedTypeName","pathNode":{"id":469,"name":"TokenStorage","nameLocations":["3287:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"3287:12:2"},"referencedDeclaration":601,"src":"3287:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage"}},"visibility":"internal"}],"id":474,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":472,"name":"_getTokenStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"3313:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_TokenStorage_$601_storage_ptr_$","typeString":"function () pure returns (struct ITokenStorage.TokenStorage storage pointer)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3313:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3287:44:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":478,"name":"ts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3408:2:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3411:4:2","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":589,"src":"3408:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":476,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:2","typeDescriptions":{}}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3417:6:2","memberName":"length","nodeType":"MemberAccess","src":"3402:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3426:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3402:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a20546f6b656e206e616d65206e6f7420736574","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3429:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad8fc01e858520d5e618b4c2f7362b814c19937bbaecec774e13b18df3af2ccb","typeString":"literal_string \"TokenStorageAccessor: Token name not set\""},"value":"TokenStorageAccessor: Token name not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad8fc01e858520d5e618b4c2f7362b814c19937bbaecec774e13b18df3af2ccb","typeString":"literal_string \"TokenStorageAccessor: Token name not set\""}],"id":475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3394:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":486,"nodeType":"ExpressionStatement","src":"3394:78:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":490,"name":"ts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3497:2:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3500:6:2","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":591,"src":"3497:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3491:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":488,"name":"bytes","nodeType":"ElementaryTypeName","src":"3491:5:2","typeDescriptions":{}}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3508:6:2","memberName":"length","nodeType":"MemberAccess","src":"3491:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3517:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3491:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a20546f6b656e2073796d626f6c206e6f7420736574","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3520:44:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec4da74ea9e30f0f0e56b97008b4c039124220e5c979eba02d012f45979a24b4","typeString":"literal_string \"TokenStorageAccessor: Token symbol not set\""},"value":"TokenStorageAccessor: Token symbol not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec4da74ea9e30f0f0e56b97008b4c039124220e5c979eba02d012f45979a24b4","typeString":"literal_string \"TokenStorageAccessor: Token symbol not set\""}],"id":487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3483:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3483:82:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"3483:82:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":500,"name":"ts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3584:2:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenStorage_$601_storage_ptr","typeString":"struct ITokenStorage.TokenStorage storage pointer"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3587:8:2","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":593,"src":"3584:11:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3598:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3584:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e53746f726167654163636573736f723a20546f6b656e20646563696d616c73206e6f7420736574","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3601:46:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0dd53c0c35db1e715792eeba1dd7eda83b0accb0454ed6c08b2edeced41e256f","typeString":"literal_string \"TokenStorageAccessor: Token decimals not set\""},"value":"TokenStorageAccessor: Token decimals not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0dd53c0c35db1e715792eeba1dd7eda83b0accb0454ed6c08b2edeced41e256f","typeString":"literal_string \"TokenStorageAccessor: Token decimals not set\""}],"id":499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3576:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3576:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"3576:72:2"}]},"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"3108:115:2","text":"@notice Validate Token storage state\n @dev Performs comprehensive validation of Token storage integrity"},"id":508,"implemented":true,"kind":"function","modifiers":[],"name":"_validateTokenStorage","nameLocation":"3238:21:2","nodeType":"FunctionDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[],"src":"3259:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"3276:0:2"},"scope":509,"src":"3229:490:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":510,"src":"435:3287:2","usedErrors":[]}],"src":"33:3691:2"},"id":2},"contracts/interfaces/storage/IClaimTopicsStorage.sol":{"ast":{"absolutePath":"contracts/interfaces/storage/IClaimTopicsStorage.sol","exportedSymbols":{"IClaimTopicsStorage":[521]},"id":522,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":511,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IClaimTopicsStorage","contractDependencies":[],"contractKind":"interface","documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"60:175:3","text":"@title IClaimTopicsStorage - Interface for ClaimTopics domain storage structure\n @dev Defines the storage layout for ClaimTopics domain using Diamond Storage pattern"},"fullyImplemented":true,"id":521,"linearizedBaseContracts":[521],"name":"IClaimTopicsStorage","nameLocation":"245:19:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IClaimTopicsStorage.ClaimTopicsStorage","id":520,"members":[{"constant":false,"id":515,"mutability":"mutable","name":"claimTopics","nameLocation":"501:11:3","nodeType":"VariableDeclaration","scope":520,"src":"491:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"491:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":514,"nodeType":"ArrayTypeName","src":"491:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"requiredClaimTopics","nameLocation":"582:19:3","nodeType":"VariableDeclaration","scope":520,"src":"557:44:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":518,"keyType":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"565:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"557:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":517,"name":"bool","nodeType":"ElementaryTypeName","src":"576:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"ClaimTopicsStorage","nameLocation":"428:18:3","nodeType":"StructDefinition","scope":521,"src":"421:209:3","visibility":"public"}],"scope":522,"src":"235:398:3","usedErrors":[]}],"src":"33:602:3"},"id":3},"contracts/interfaces/storage/IComplianceStorage.sol":{"ast":{"absolutePath":"contracts/interfaces/storage/IComplianceStorage.sol","exportedSymbols":{"IComplianceStorage":[542]},"id":543,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":523,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IComplianceStorage","contractDependencies":[],"contractKind":"interface","documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"60:172:4","text":"@title IComplianceStorage - Interface for Compliance domain storage structure\n @dev Defines the storage layout for Compliance domain using Diamond Storage pattern"},"fullyImplemented":true,"id":542,"linearizedBaseContracts":[542],"name":"IComplianceStorage","nameLocation":"242:18:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IComplianceStorage.ComplianceStorage","id":541,"members":[{"constant":false,"id":526,"mutability":"mutable","name":"maxBalance","nameLocation":"496:10:4","nodeType":"VariableDeclaration","scope":541,"src":"488:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"minBalance","nameLocation":"541:10:4","nodeType":"VariableDeclaration","scope":541,"src":"533:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"maxInvestors","nameLocation":"598:12:4","nodeType":"VariableDeclaration","scope":541,"src":"590:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"590:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"currentInvestorCount","nameLocation":"645:20:4","nodeType":"VariableDeclaration","scope":541,"src":"637:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"lastTransferTime","nameLocation":"754:16:4","nodeType":"VariableDeclaration","scope":541,"src":"726:44:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":535,"keyType":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"726:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"frozenInvestors","nameLocation":"806:15:4","nodeType":"VariableDeclaration","scope":541,"src":"781:40:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":539,"keyType":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"781:24:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":538,"name":"bool","nodeType":"ElementaryTypeName","src":"800:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"ComplianceStorage","nameLocation":"422:17:4","nodeType":"StructDefinition","scope":542,"src":"415:414:4","visibility":"public"}],"scope":543,"src":"232:600:4","usedErrors":[]}],"src":"33:801:4"},"id":4},"contracts/interfaces/storage/IIdentityStorage.sol":{"ast":{"absolutePath":"contracts/interfaces/storage/IIdentityStorage.sol","exportedSymbols":{"IIdentityStorage":[559]},"id":560,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":544,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IIdentityStorage","contractDependencies":[],"contractKind":"interface","documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"60:166:5","text":"@title IIdentityStorage - Interface for Identity domain storage structure\n @dev Defines the storage layout for Identity domain using Diamond Storage pattern"},"fullyImplemented":true,"id":559,"linearizedBaseContracts":[559],"name":"IIdentityStorage","nameLocation":"236:16:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IIdentityStorage.IdentityStorage","id":558,"members":[{"constant":false,"id":549,"mutability":"mutable","name":"investorIdentities","nameLocation":"502:18:5","nodeType":"VariableDeclaration","scope":558,"src":"474:46:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":548,"keyType":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"482:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"474:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"investorCountries","nameLocation":"591:17:5","nodeType":"VariableDeclaration","scope":558,"src":"564:44:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"},"typeName":{"id":552,"keyType":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"564:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"},"valueType":{"id":551,"name":"uint16","nodeType":"ElementaryTypeName","src":"583:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}},"visibility":"internal"},{"constant":false,"id":557,"mutability":"mutable","name":"verificationStatus","nameLocation":"672:18:5","nodeType":"VariableDeclaration","scope":558,"src":"647:43:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":556,"keyType":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"647:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":555,"name":"bool","nodeType":"ElementaryTypeName","src":"666:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"IdentityStorage","nameLocation":"410:15:5","nodeType":"StructDefinition","scope":559,"src":"403:319:5","visibility":"public"}],"scope":560,"src":"226:499:5","usedErrors":[]}],"src":"33:694:5"},"id":5},"contracts/interfaces/storage/IRolesStorage.sol":{"ast":{"absolutePath":"contracts/interfaces/storage/IRolesStorage.sol","exportedSymbols":{"IRolesStorage":[572]},"id":573,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":561,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IRolesStorage","contractDependencies":[],"contractKind":"interface","documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"60:157:6","text":"@title IRolesStorage - Interface for Roles domain storage structure\n @dev Defines the storage layout for Roles domain using Diamond Storage pattern"},"fullyImplemented":true,"id":572,"linearizedBaseContracts":[572],"name":"IRolesStorage","nameLocation":"227:13:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IRolesStorage.RolesStorage","id":571,"members":[{"constant":false,"id":564,"mutability":"mutable","name":"owner","nameLocation":"459:5:6","nodeType":"VariableDeclaration","scope":571,"src":"451:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"agents","nameLocation":"500:6:6","nodeType":"VariableDeclaration","scope":571,"src":"475:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":567,"keyType":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"483:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"475:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":566,"name":"bool","nodeType":"ElementaryTypeName","src":"494:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"initialized","nameLocation":"522:11:6","nodeType":"VariableDeclaration","scope":571,"src":"517:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":569,"name":"bool","nodeType":"ElementaryTypeName","src":"517:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"RolesStorage","nameLocation":"392:12:6","nodeType":"StructDefinition","scope":572,"src":"385:156:6","visibility":"public"}],"scope":573,"src":"217:327:6","usedErrors":[]}],"src":"33:513:6"},"id":6},"contracts/interfaces/storage/ITokenStorage.sol":{"ast":{"absolutePath":"contracts/interfaces/storage/ITokenStorage.sol","exportedSymbols":{"ITokenStorage":[602]},"id":603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":574,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"ITokenStorage","contractDependencies":[],"contractKind":"interface","documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"60:157:7","text":"@title ITokenStorage - Interface for Token domain storage structure\n @dev Defines the storage layout for Token domain using Diamond Storage pattern"},"fullyImplemented":true,"id":602,"linearizedBaseContracts":[602],"name":"ITokenStorage","nameLocation":"227:13:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ITokenStorage.TokenStorage","id":601,"members":[{"constant":false,"id":579,"mutability":"mutable","name":"balances","nameLocation":"481:8:7","nodeType":"VariableDeclaration","scope":601,"src":"453:36:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":578,"keyType":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"453:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"allowances","nameLocation":"548:10:7","nodeType":"VariableDeclaration","scope":601,"src":"500:58:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":584,"keyType":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"500:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":583,"keyType":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"519:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"totalSupply","nameLocation":"577:11:7","nodeType":"VariableDeclaration","scope":601,"src":"569:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"569:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"name","nameLocation":"606:4:7","nodeType":"VariableDeclaration","scope":601,"src":"599:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":588,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"symbol","nameLocation":"628:6:7","nodeType":"VariableDeclaration","scope":601,"src":"621:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":590,"name":"string","nodeType":"ElementaryTypeName","src":"621:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"decimals","nameLocation":"651:8:7","nodeType":"VariableDeclaration","scope":601,"src":"645:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":592,"name":"uint8","nodeType":"ElementaryTypeName","src":"645:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"frozenAccounts","nameLocation":"751:14:7","nodeType":"VariableDeclaration","scope":601,"src":"726:39:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":596,"keyType":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"726:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":595,"name":"bool","nodeType":"ElementaryTypeName","src":"745:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"holders","nameLocation":"786:7:7","nodeType":"VariableDeclaration","scope":601,"src":"776:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":599,"nodeType":"ArrayTypeName","src":"776:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"TokenStorage","nameLocation":"392:12:7","nodeType":"StructDefinition","scope":602,"src":"385:458:7","visibility":"public"}],"scope":603,"src":"217:629:7","usedErrors":[]}],"src":"33:815:7"},"id":7},"contracts/interfaces/storage/ITrustedIssuersStorage.sol":{"ast":{"absolutePath":"contracts/interfaces/storage/ITrustedIssuersStorage.sol","exportedSymbols":{"ITrustedIssuersStorage":[622]},"id":623,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":604,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"ITrustedIssuersStorage","contractDependencies":[],"contractKind":"interface","documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"60:184:8","text":"@title ITrustedIssuersStorage - Interface for TrustedIssuers domain storage structure\n @dev Defines the storage layout for TrustedIssuers domain using Diamond Storage pattern"},"fullyImplemented":true,"id":622,"linearizedBaseContracts":[622],"name":"ITrustedIssuersStorage","nameLocation":"254:22:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ITrustedIssuersStorage.TrustedIssuersStorage","id":621,"members":[{"constant":false,"id":610,"mutability":"mutable","name":"trustedIssuers","nameLocation":"545:14:8","nodeType":"VariableDeclaration","scope":621,"src":"515:44:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":609,"keyType":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"515:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueType":{"baseType":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":608,"nodeType":"ArrayTypeName","src":"534:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"issuerStatus","nameLocation":"649:12:8","nodeType":"VariableDeclaration","scope":621,"src":"604:57:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":615,"keyType":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"604:44:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueType":{"id":614,"keyType":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"623:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":613,"name":"bool","nodeType":"ElementaryTypeName","src":"642:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"issuerCount","nameLocation":"735:11:8","nodeType":"VariableDeclaration","scope":621,"src":"707:39:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":619,"keyType":{"id":617,"name":"uint256","nodeType":"ElementaryTypeName","src":"715:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"707:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"TrustedIssuersStorage","nameLocation":"446:21:8","nodeType":"StructDefinition","scope":622,"src":"439:357:8","visibility":"public"}],"scope":623,"src":"244:555:8","usedErrors":[]}],"src":"33:768:8"},"id":8}},"contracts":{"contracts/abstracts/BaseStorageAccessor.sol":{"BaseStorageAccessor":{"abi":[{"inputs":[],"name":"getStorageNamespace","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getStorageVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getStorageNamespace()":"c3946aa8","getStorageVersion()":"79fd5e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStorageNamespace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides common patterns and utilities for Diamond Storage implementationThis contract defines the foundation for type-safe storage access across all facets\",\"kind\":\"dev\",\"methods\":{\"getStorageNamespace()\":{\"returns\":{\"_0\":\"The namespace prefix\"}},\"getStorageVersion()\":{\"returns\":{\"_0\":\"The current storage version\"}}},\"stateVariables\":{\"NAMESPACE_PREFIX\":{\"details\":\"Namespace prefix for T-REX Diamond storage slots\"},\"STORAGE_VERSION\":{\"details\":\"Storage version for future migrations\"}},\"title\":\"BaseStorageAccessor - Abstract base contract for Diamond Storage access\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageNamespace()\":{\"notice\":\"Get the namespace prefix used for storage slots\"},\"getStorageVersion()\":{\"notice\":\"Get the current storage version\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/BaseStorageAccessor.sol\":\"BaseStorageAccessor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/BaseStorageAccessor.sol\":{\"keccak256\":\"0x27b14ca03c799e4c8cd96f62f60808e3f9739280ea4103cb4621c5c4a77ab3b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://293d79aa54c88cf6930f9d9bd7270b3932735359eca38283ae843105ae83dd78\",\"dweb:/ipfs/QmTCfGw7s2FernisYKCLH5e6LDdcEaWcNiNkVR8sDTWh7q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/abstracts/RolesStorageAccessor.sol":{"RolesStorageAccessor":{"abi":[{"inputs":[],"name":"getStorageNamespace","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getStorageVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getStorageNamespace()":"c3946aa8","getStorageVersion()":"79fd5e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStorageNamespace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides type-safe access to Roles storage using Diamond Storage patternInherits common storage utilities from BaseStorageAccessor\",\"kind\":\"dev\",\"methods\":{\"getStorageNamespace()\":{\"returns\":{\"_0\":\"The namespace prefix\"}},\"getStorageVersion()\":{\"returns\":{\"_0\":\"The current storage version\"}}},\"stateVariables\":{\"ROLES_DOMAIN\":{\"details\":\"Storage domain name for Roles\"},\"ROLES_STORAGE_SLOT\":{\"details\":\"Computed storage slot for Roles domain\"}},\"title\":\"RolesStorageAccessor - Specialized storage accessor for Roles domain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageNamespace()\":{\"notice\":\"Get the namespace prefix used for storage slots\"},\"getStorageVersion()\":{\"notice\":\"Get the current storage version\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/RolesStorageAccessor.sol\":\"RolesStorageAccessor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/BaseStorageAccessor.sol\":{\"keccak256\":\"0x27b14ca03c799e4c8cd96f62f60808e3f9739280ea4103cb4621c5c4a77ab3b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://293d79aa54c88cf6930f9d9bd7270b3932735359eca38283ae843105ae83dd78\",\"dweb:/ipfs/QmTCfGw7s2FernisYKCLH5e6LDdcEaWcNiNkVR8sDTWh7q\"]},\"contracts/abstracts/RolesStorageAccessor.sol\":{\"keccak256\":\"0x28c914e85efcc4bb275e81bf6699ab313da00250d048ed0a134dd1dd04df8b60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc366527a11b47e4685bd050cffce4445a40611ed3af0ed0c4c34585acae389\",\"dweb:/ipfs/QmNosWZn3u3tH1NAKnbZM5U1mqEM3RZbCCT5SdYSxrLGf4\"]},\"contracts/interfaces/storage/IRolesStorage.sol\":{\"keccak256\":\"0x7e41cbf60c0f78ed9875dffbcdaa4f6b1e6dce9f2714f1025cf84668d1ccdc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00de1d260de6ee54c29b086aec1010cfc24bdf5b9b344a899ddfc1bd2af3c121\",\"dweb:/ipfs/QmPwwwgweT7uQVSwWzTpqjf4SX66jDD2ib8Ur43GhiDSWz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/abstracts/TokenStorageAccessor.sol":{"TokenStorageAccessor":{"abi":[{"inputs":[],"name":"getStorageNamespace","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getStorageVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getStorageNamespace()":"c3946aa8","getStorageVersion()":"79fd5e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStorageNamespace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides type-safe access to Token storage using Diamond Storage patternInherits common storage utilities from BaseStorageAccessor\",\"kind\":\"dev\",\"methods\":{\"getStorageNamespace()\":{\"returns\":{\"_0\":\"The namespace prefix\"}},\"getStorageVersion()\":{\"returns\":{\"_0\":\"The current storage version\"}}},\"stateVariables\":{\"TOKEN_DOMAIN\":{\"details\":\"Storage domain name for Token\"},\"TOKEN_STORAGE_SLOT\":{\"details\":\"Computed storage slot for Token domain\"}},\"title\":\"TokenStorageAccessor - Specialized storage accessor for Token domain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageNamespace()\":{\"notice\":\"Get the namespace prefix used for storage slots\"},\"getStorageVersion()\":{\"notice\":\"Get the current storage version\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/TokenStorageAccessor.sol\":\"TokenStorageAccessor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/BaseStorageAccessor.sol\":{\"keccak256\":\"0x27b14ca03c799e4c8cd96f62f60808e3f9739280ea4103cb4621c5c4a77ab3b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://293d79aa54c88cf6930f9d9bd7270b3932735359eca38283ae843105ae83dd78\",\"dweb:/ipfs/QmTCfGw7s2FernisYKCLH5e6LDdcEaWcNiNkVR8sDTWh7q\"]},\"contracts/abstracts/TokenStorageAccessor.sol\":{\"keccak256\":\"0x4f410decd0fcfb68d760f8c0587f78643b4b872c014f4c90a32b94be488900cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56db3407403c216648d32e0223b2be096524097e91eee4c05e0078de0e427365\",\"dweb:/ipfs/QmVJn6fSZpvCHDVCqbqRu56Ec4x1JeVjQKa2KoBfvBFHz2\"]},\"contracts/interfaces/storage/ITokenStorage.sol\":{\"keccak256\":\"0xd0f727d41578dab4d012ac6f996845760afe4ae5c27d03c1665adff7d7189a17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f932fa74431cb33d630f9618be840fef799a5d756e02df469aad36c87fee3380\",\"dweb:/ipfs/QmQkfHXzW1qFM5M8YVtqry1AEGjKUZvZnuKfXQt851MAdj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/storage/IClaimTopicsStorage.sol":{"IClaimTopicsStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines the storage layout for ClaimTopics domain using Diamond Storage pattern\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IClaimTopicsStorage - Interface for ClaimTopics domain storage structure\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/storage/IClaimTopicsStorage.sol\":\"IClaimTopicsStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/storage/IClaimTopicsStorage.sol\":{\"keccak256\":\"0x65182df670137874bee396c4ba02ec23e626bd4908889333904be99a6d9f4f65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://448ee4db5216d0877f05318afdbdf4a82f6a141a9452f2db7539d842b04e9a4f\",\"dweb:/ipfs/QmRsh565nAt9KTmbbFA6c4c9qHgWLs1Bt8SCiEkk81Z5oT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/storage/IComplianceStorage.sol":{"IComplianceStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines the storage layout for Compliance domain using Diamond Storage pattern\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IComplianceStorage - Interface for Compliance domain storage structure\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/storage/IComplianceStorage.sol\":\"IComplianceStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/storage/IComplianceStorage.sol\":{\"keccak256\":\"0x7c22907f49f1ad31a42d7de509fc72639a98a770b783b5d0c2232a361cbb386e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7cfa8ec3693dddeff39023cdb090d533b06538ad38fa6a355576f49c0568e70\",\"dweb:/ipfs/Qma7TVeFhmPM15hyNXaM8DHNNQKCK12ugKnEaSUtAgPinX\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/storage/IIdentityStorage.sol":{"IIdentityStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines the storage layout for Identity domain using Diamond Storage pattern\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IIdentityStorage - Interface for Identity domain storage structure\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/storage/IIdentityStorage.sol\":\"IIdentityStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/storage/IIdentityStorage.sol\":{\"keccak256\":\"0x75b94868f0ed23a915e5cf55f4f602fb16c39ae76abe9c740e01635a8f75b5f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cab5d9f62787d3bd7d7798575c8ffdf73fe8820632f648c183a25194d76b57a6\",\"dweb:/ipfs/QmRNFHUUccHNossQN8xNtf2aT3mLU7wrLbu6XKTywxsZek\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/storage/IRolesStorage.sol":{"IRolesStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines the storage layout for Roles domain using Diamond Storage pattern\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IRolesStorage - Interface for Roles domain storage structure\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/storage/IRolesStorage.sol\":\"IRolesStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/storage/IRolesStorage.sol\":{\"keccak256\":\"0x7e41cbf60c0f78ed9875dffbcdaa4f6b1e6dce9f2714f1025cf84668d1ccdc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00de1d260de6ee54c29b086aec1010cfc24bdf5b9b344a899ddfc1bd2af3c121\",\"dweb:/ipfs/QmPwwwgweT7uQVSwWzTpqjf4SX66jDD2ib8Ur43GhiDSWz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/storage/ITokenStorage.sol":{"ITokenStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines the storage layout for Token domain using Diamond Storage pattern\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ITokenStorage - Interface for Token domain storage structure\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/storage/ITokenStorage.sol\":\"ITokenStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/storage/ITokenStorage.sol\":{\"keccak256\":\"0xd0f727d41578dab4d012ac6f996845760afe4ae5c27d03c1665adff7d7189a17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f932fa74431cb33d630f9618be840fef799a5d756e02df469aad36c87fee3380\",\"dweb:/ipfs/QmQkfHXzW1qFM5M8YVtqry1AEGjKUZvZnuKfXQt851MAdj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/storage/ITrustedIssuersStorage.sol":{"ITrustedIssuersStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines the storage layout for TrustedIssuers domain using Diamond Storage pattern\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ITrustedIssuersStorage - Interface for TrustedIssuers domain storage structure\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/storage/ITrustedIssuersStorage.sol\":\"ITrustedIssuersStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/storage/ITrustedIssuersStorage.sol\":{\"keccak256\":\"0xbe1a3ee9dfa7ea6ef29b1134e559de1e4d397f719944e4044c43fd092a18cd38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a0aa550f4082a458052d7487c5875fb812add1bf72029a455a7f75c2f68abf1\",\"dweb:/ipfs/QmXEtGABeS5thS3eVXxZuiv2AJDeQb4fRiqCpRFmgzVEPZ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}