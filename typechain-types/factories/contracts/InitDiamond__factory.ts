/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  InitDiamond,
  InitDiamondInterface,
} from "../../contracts/InitDiamond";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "DiamondInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "getInitializationStatus",
    outputs: [
      {
        internalType: "bool",
        name: "roles",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "token",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610712806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b2b45df51461003b578063f94a6fd114610050575b600080fd5b61004e61004936600461049d565b610073565b005b6100586102e4565b60408051921515835290151560208301520160405180910390f35b600054610100900460ff16158080156100935750600054600160ff909116105b806100ad5750303b1580156100ad575060005460ff166001145b6101155760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610138576000805461ff0019166101001790555b6001600160a01b0384166101a05760405162461bcd60e51b815260206004820152602960248201527f496e69744469616d6f6e643a206f776e65722063616e6e6f74206265207a65726044820152686f206164647265737360b81b606482015260840161010c565b7f0fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd580546001600160a01b0319166001600160a01b0386161790556101e4838361034e565b61025560007f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d48190557f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d58190557f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d655565b836001600160a01b03167f33b0890aead116059e09fc2986d80e5e5205c857686b538bc5b4962f1f38044c8484604051610290929190610565565b60405180910390a280156102de576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b7f0fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd5547f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb443780546001600160a01b03909216151591600091829161034590610593565b90501190509091565b7f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb4437610379838261061c565b507f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb44386103a5828261061c565b50507f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb4439805460ff191660121790555060007f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb443655565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261042157600080fd5b813567ffffffffffffffff8082111561043c5761043c6103fa565b604051601f8301601f19908116603f01168101908282118183101715610464576104646103fa565b8160405283815286602085880101111561047d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156104b257600080fd5b83356001600160a01b03811681146104c957600080fd5b9250602084013567ffffffffffffffff808211156104e657600080fd5b6104f287838801610410565b9350604086013591508082111561050857600080fd5b5061051586828701610410565b9150509250925092565b6000815180845260005b8181101561054557602081850181015186830182015201610529565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000610578604083018561051f565b828103602084015261058a818561051f565b95945050505050565b600181811c908216806105a757607f821691505b6020821081036105c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561061757600081815260208120601f850160051c810160208610156105f45750805b601f850160051c820191505b8181101561061357828155600101610600565b5050505b505050565b815167ffffffffffffffff811115610636576106366103fa565b61064a816106448454610593565b846105cd565b602080601f83116001811461067f57600084156106675750858301515b600019600386901b1c1916600185901b178555610613565b600085815260208120601f198616915b828110156106ae5788860151825594840194600190910190840161068f565b50858210156106cc5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212205b16247aa9b4f62883dfe19c0a7151464de23d0b49abc3a30c7d6005f7dd6a7164736f6c63430008110033";

type InitDiamondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitDiamondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitDiamond__factory extends ContractFactory {
  constructor(...args: InitDiamondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InitDiamond & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InitDiamond__factory {
    return super.connect(runner) as InitDiamond__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitDiamondInterface {
    return new Interface(_abi) as InitDiamondInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): InitDiamond {
    return new Contract(address, _abi, runner) as unknown as InitDiamond;
  }
}
