/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  InitDiamond,
  InitDiamondInterface,
} from "../../contracts/InitDiamond";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103ff806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e1c7392a14610030575b600080fd5b61003861003a565b005b600054610100900460ff161580801561005a5750600054600160ff909116105b806100745750303b158015610074575060005460ff166001145b6100db5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff1916600117905580156100fe576000805461ff0019166101001790555b7fa90393cd488d4fd35acba53303b1d8725393befc5ff3d3a9d4c6c252ffcc24ff547fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b01980546001600160a01b0319166001600160a01b0390921691909117905560408051808201909152600b81526a2a16a922ac102a37b5b2b760a91b60208201527fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b013906101ac9082610309565b506040805180820190915260048152630a8a48ab60e31b60208201527fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b014906101f49082610309565b507fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b015805460ff191660121790558015610267576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061029457607f821691505b6020821081036102b457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561030457600081815260208120601f850160051c810160208610156102e15750805b601f850160051c820191505b81811015610300578281556001016102ed565b5050505b505050565b815167ffffffffffffffff8111156103235761032361026a565b610337816103318454610280565b846102ba565b602080601f83116001811461036c57600084156103545750858301515b600019600386901b1c1916600185901b178555610300565b600085815260208120601f198616915b8281101561039b5788860151825594840194600190910190840161037c565b50858210156103b95787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212201817d8c35c523ae02d58a4cf056d62023dc80fe9376d99a6d46201eff2c48dca64736f6c63430008110033";

type InitDiamondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitDiamondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitDiamond__factory extends ContractFactory {
  constructor(...args: InitDiamondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InitDiamond & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InitDiamond__factory {
    return super.connect(runner) as InitDiamond__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitDiamondInterface {
    return new Interface(_abi) as InitDiamondInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): InitDiamond {
    return new Contract(address, _abi, runner) as unknown as InitDiamond;
  }
}
