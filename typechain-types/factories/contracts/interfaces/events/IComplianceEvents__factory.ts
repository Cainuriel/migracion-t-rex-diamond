/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IComplianceEvents,
  IComplianceEventsInterface,
} from "../../../../contracts/interfaces/events/IComplianceEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "MaxBalanceSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "MaxInvestorsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
    ],
    name: "MinBalanceSet",
    type: "event",
  },
] as const;

export class IComplianceEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IComplianceEventsInterface {
    return new Interface(_abi) as IComplianceEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IComplianceEvents {
    return new Contract(address, _abi, runner) as unknown as IComplianceEvents;
  }
}
