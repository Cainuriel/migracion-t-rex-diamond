/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ITrustedIssuersEvents,
  ITrustedIssuersEventsInterface,
} from "../../../../contracts/interfaces/events/ITrustedIssuersEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "claimTopics",
        type: "uint256[]",
      },
    ],
    name: "TrustedIssuerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
    ],
    name: "TrustedIssuerRemoved",
    type: "event",
  },
] as const;

export class ITrustedIssuersEvents__factory {
  static readonly abi = _abi;
  static createInterface(): ITrustedIssuersEventsInterface {
    return new Interface(_abi) as ITrustedIssuersEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ITrustedIssuersEvents {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ITrustedIssuersEvents;
  }
}
