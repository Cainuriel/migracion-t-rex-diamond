/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IIdentityEvents,
  IIdentityEventsInterface,
} from "../../../../contracts/interfaces/events/IIdentityEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
    ],
    name: "CountryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "identity",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
    ],
    name: "IdentityRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
    ],
    name: "IdentityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newIdentity",
        type: "address",
      },
    ],
    name: "IdentityUpdated",
    type: "event",
  },
] as const;

export class IIdentityEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IIdentityEventsInterface {
    return new Interface(_abi) as IIdentityEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IIdentityEvents {
    return new Contract(address, _abi, runner) as unknown as IIdentityEvents;
  }
}
