/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ComplianceFacet,
  ComplianceFacetInterface,
} from "../../../contracts/facets/ComplianceFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "MaxBalanceSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "MaxInvestorsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
    ],
    name: "MinBalanceSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "complianceRules",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxInvestors",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "setMaxBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "setMaxInvestors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
    ],
    name: "setMinBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610640806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806335e896c11461005c5780636ec58d13146100715780639d51d9b7146100f7578063c91d956c1461010a578063e46638e61461011d575b600080fd5b61006f61006a3660046104f8565b610140565b005b7fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b019547fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b01a547fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b01b54604080519384526020840192909252908201526060015b60405180910390f35b61006f6101053660046104f8565b6101e3565b61006f6101183660046104f8565b610276565b61013061012b36600461052d565b610309565b60405190151581526020016100ee565b6000805160206105eb8339815191526008015461010090046001600160a01b031633146101885760405162461bcd60e51b815260040161017f90610569565b60405180910390fd5b7fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b01b8190556040518181527f0de3b656191db95f0ae3b33d959531021110a9da5b819655d9d13a57496144ad906020015b60405180910390a150565b6000805160206105eb8339815191526008015461010090046001600160a01b031633146102225760405162461bcd60e51b815260040161017f90610569565b7fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b0198190556040518181527f82f9980487703d8db41f1ba63b2665566f7fb449fbc840a9e0c6ca932bed582c906020016101d8565b6000805160206105eb8339815191526008015461010090046001600160a01b031633146102b55760405162461bcd60e51b815260040161017f90610569565b7fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b01a8190556040518181527fc9ac0b9c6116d44b14ac8198e0802802d07cf6956054e7542f0460a4d3423b3a906020016101d8565b6001600160a01b03831660009081527fc2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b01160205260408120546000805160206105eb8339815191529060ff168061037957506001600160a01b038416600090815260028201602052604090205460ff165b156103885760009150506104f1565b6001600160a01b03848116600090815260208390526040902054166103b15760009150506104f1565b6001600160a01b03841660009081526003820160205260408120546103d79085906105a2565b9050600082600a01541180156103f0575081600a015481115b15610400576000925050506104f1565b600082600b0154118015610417575081600b015481105b15610427576000925050506104f1565b600082600c015411801561045357506001600160a01b0385166000908152600383016020526040902054155b156104ea576000805b60108401548110156104d0576000846003016000866010018481548110610485576104856105bb565b60009182526020808320909101546001600160a01b0316835282019290925260400190205411156104be57816104ba816105d1565b9250505b806104c8816105d1565b91505061045c565b5082600c015481106104e857600093505050506104f1565b505b6001925050505b9392505050565b60006020828403121561050a57600080fd5b5035919050565b80356001600160a01b038116811461052857600080fd5b919050565b60008060006060848603121561054257600080fd5b61054b84610511565b925061055960208501610511565b9150604084013590509250925092565b6020808252600990820152682737ba1037bbb732b960b91b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156105b5576105b561058c565b92915050565b634e487b7160e01b600052603260045260246000fd5b6000600182016105e3576105e361058c565b506001019056fec2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b00fa2646970667358221220c6ac30c329089105beeb75e7bc5e276258f8d4ee7077e0f2373893f5ea92ef2764736f6c63430008110033";

type ComplianceFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComplianceFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComplianceFacet__factory extends ContractFactory {
  constructor(...args: ComplianceFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ComplianceFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ComplianceFacet__factory {
    return super.connect(runner) as ComplianceFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComplianceFacetInterface {
    return new Interface(_abi) as ComplianceFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ComplianceFacet {
    return new Contract(address, _abi, runner) as unknown as ComplianceFacet;
  }
}
