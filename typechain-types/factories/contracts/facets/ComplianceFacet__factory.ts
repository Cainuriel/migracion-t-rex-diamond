/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ComplianceFacet,
  ComplianceFacetInterface,
} from "../../../contracts/facets/ComplianceFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "MaxBalanceSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "MaxInvestorsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
    ],
    name: "MinBalanceSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "complianceRules",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxInvestors",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "selectorsIntrospection",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "setMaxBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "setMaxInvestors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
    ],
    name: "setMinBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506108e4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806335e896c1146100675780636ec58d131461007c5780639d51d9b7146100f0578063c91d956c14610103578063e3b807a014610116578063e46638e61461012b575b600080fd5b61007a61007536600461075a565b61014e565b005b60008051602061088f833981519152547f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d5547f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d654604080519384526020840192909252908201526060015b60405180910390f35b61007a6100fe36600461075a565b610163565b61007a61011136600461075a565b610175565b61011e610187565b6040516100e79190610773565b61013e6101393660046107dd565b6102e6565b60405190151581526020016100e7565b610157336102fd565b6101608161037d565b50565b61016c336102fd565b610160816103e9565b61017e336102fd565b6101608161042b565b60408051600580825260c0820190925260609190816020820160a080368337019050509150639d51d9b760e01b826101be8361082f565b925082815181106101d1576101d1610846565b6001600160e01b031990921660209283029190910190910152633247655b60e21b826101fc8361082f565b9250828151811061020f5761020f610846565b6001600160e01b0319909216602092830291909101909101526335e896c160e01b8261023a8361082f565b9250828151811061024d5761024d610846565b6001600160e01b0319909216602092830291909101909101526372331c7360e11b826102788361082f565b9250828151811061028b5761028b610846565b6001600160e01b031990921660209283029190910190910152636ec58d1360e01b826102b68361082f565b925082815181106102c9576102c9610846565b6001600160e01b0319909216602092830291909101909101525090565b60006102f384848461048f565b90505b9392505050565b7f0fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd5546001600160a01b038281169116146101605760405162461bcd60e51b815260206004820152601d60248201527f436f6d706c69616e6365496e7465726e616c3a204e6f74206f776e6572000000604482015260640160405180910390fd5b7f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d681905560405181815260008051602061088f833981519152907f0de3b656191db95f0ae3b33d959531021110a9da5b819655d9d13a57496144ad906020015b60405180910390a15050565b60008051602061088f8339815191528181556040518281527f82f9980487703d8db41f1ba63b2665566f7fb449fbc840a9e0c6ca932bed582c906020016103dd565b7f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d581905560405181815260008051602061088f833981519152907fc9ac0b9c6116d44b14ac8198e0802802d07cf6956054e7542f0460a4d3423b3a906020016103dd565b6001600160a01b03831660009081527f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb443a60205260408120547f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb44349060ff168061051157506001600160a01b038416600090815260068201602052604090205460ff165b156105205760009150506102f6565b6001600160a01b0384811660009081527f8250f062390633740b58dd505171a2b7207c6c4b65557d3f50ba32fe928e9da5602081905260409091205490911661056e576000925050506102f6565b6001600160a01b03851660009081526020839052604081205460008051602061088f833981519152916105a1878361085c565b8354909150158015906105b45750825481115b156105c7576000955050505050506102f6565b600083600101541180156105de5750826001015481105b156105f1576000955050505050506102f6565b60008360020154118015610603575081155b1561063057600061061261063f565b90508360020154811061062e57600096505050505050506102f6565b505b50600198975050505050505050565b7f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb443b8054604080516020808402820181019092528281526000937f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb44349385938301828280156106d557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106b7575b505050505090506000805b825181101561075257600084600001600085848151811061070357610703610846565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020541115610740578161073c81610875565b9250505b8061074a81610875565b9150506106e0565b509392505050565b60006020828403121561076c57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156107b55783516001600160e01b0319168352928401929184019160010161078f565b50909695505050505050565b80356001600160a01b03811681146107d857600080fd5b919050565b6000806000606084860312156107f257600080fd5b6107fb846107c1565b9250610809602085016107c1565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b60008161083e5761083e610819565b506000190190565b634e487b7160e01b600052603260045260246000fd5b8082018082111561086f5761086f610819565b92915050565b60006001820161088757610887610819565b506001019056fe3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d4a2646970667358221220056ff8ea3ec4bab4cfcf19cdd8a47e3996d615e53564bce6bec80be0f16d763b64736f6c63430008110033";

type ComplianceFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComplianceFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComplianceFacet__factory extends ContractFactory {
  constructor(...args: ComplianceFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ComplianceFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ComplianceFacet__factory {
    return super.connect(runner) as ComplianceFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComplianceFacetInterface {
    return new Interface(_abi) as ComplianceFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ComplianceFacet {
    return new Contract(address, _abi, runner) as unknown as ComplianceFacet;
  }
}
