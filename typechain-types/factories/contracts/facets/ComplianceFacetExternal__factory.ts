/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ComplianceFacetExternal,
  ComplianceFacetExternalInterface,
} from "../../../contracts/facets/ComplianceFacetExternal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "MaxBalanceSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "MaxInvestorsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
    ],
    name: "MinBalanceSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "complianceRules",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxInvestors",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "selectorsIntrospection",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "setMaxBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "setMaxInvestors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
    ],
    name: "setMinBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506108f0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806335e896c1146100675780636ec58d131461007c5780639d51d9b7146100f0578063c91d956c14610103578063e3b807a014610116578063e46638e61461012b575b600080fd5b61007a610075366004610766565b61014e565b005b60008051602061089b833981519152547f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d5547f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d654604080519384526020840192909252908201526060015b60405180910390f35b61007a6100fe366004610766565b610163565b61007a610111366004610766565b610175565b61011e610187565b6040516100e7919061077f565b61013e6101393660046107e9565b6102e6565b60405190151581526020016100e7565b610157336102fd565b6101608161037d565b50565b61016c336102fd565b610160816103e9565b61017e336102fd565b6101608161042b565b60408051600580825260c0820190925260609190816020820160a080368337019050509150639d51d9b760e01b826101be8361083b565b925082815181106101d1576101d1610852565b6001600160e01b031990921660209283029190910190910152633247655b60e21b826101fc8361083b565b9250828151811061020f5761020f610852565b6001600160e01b0319909216602092830291909101909101526335e896c160e01b8261023a8361083b565b9250828151811061024d5761024d610852565b6001600160e01b0319909216602092830291909101909101526372331c7360e11b826102788361083b565b9250828151811061028b5761028b610852565b6001600160e01b031990921660209283029190910190910152636ec58d1360e01b826102b68361083b565b925082815181106102c9576102c9610852565b6001600160e01b0319909216602092830291909101909101525090565b60006102f384848461048f565b90505b9392505050565b7f0fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd5546001600160a01b038281169116146101605760405162461bcd60e51b815260206004820152601d60248201527f436f6d706c69616e6365496e7465726e616c3a204e6f74206f776e6572000000604482015260640160405180910390fd5b7f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d681905560405181815260008051602061089b833981519152907f0de3b656191db95f0ae3b33d959531021110a9da5b819655d9d13a57496144ad906020015b60405180910390a15050565b60008051602061089b8339815191528181556040518281527f82f9980487703d8db41f1ba63b2665566f7fb449fbc840a9e0c6ca932bed582c906020016103dd565b7f3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d581905560405181815260008051602061089b833981519152907fc9ac0b9c6116d44b14ac8198e0802802d07cf6956054e7542f0460a4d3423b3a906020016103dd565b6001600160a01b03831660009081527f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb443a602052604081205460ff168061050c57506001600160a01b03831660009081527f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb443a602052604090205460ff165b15610519575060006102f6565b6001600160a01b0383811660009081527f8250f062390633740b58dd505171a2b7207c6c4b65557d3f50ba32fe928e9da560205260409020541661055f575060006102f6565b6001600160a01b03831660009081527f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb4434602052604081205460008051602061089b833981519152916105b18583610868565b8354909150158015906105c45750825481115b156105d557600093505050506102f6565b600083600101541180156105ec5750826001015481105b156105fd57600093505050506102f6565b6000836002015411801561060f575081155b1561063a57600061061e610647565b9050836002015481106106385760009450505050506102f6565b505b5060019695505050505050565b6000807f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb44346007018054806020026020016040519081016040528092919081815260200182805480156106c257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106a4575b505050505090506000805b825181101561075f5760007f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb4434600001600085848151811061071057610710610852565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054111561074d578161074981610881565b9250505b8061075781610881565b9150506106cd565b5092915050565b60006020828403121561077857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156107c15783516001600160e01b0319168352928401929184019160010161079b565b50909695505050505050565b80356001600160a01b03811681146107e457600080fd5b919050565b6000806000606084860312156107fe57600080fd5b610807846107cd565b9250610815602085016107cd565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b60008161084a5761084a610825565b506000190190565b634e487b7160e01b600052603260045260246000fd5b8082018082111561087b5761087b610825565b92915050565b60006001820161089357610893610825565b506001019056fe3f58a8938bec95c6a1ed44e042c3c2e2b9c1eb2b83644b148efde1f9dd7788d4a26469706673582212202c0b5a6c3473e4d46f5a41839d75b3304aac936f6233fd2c9ef66c7e9716b03764736f6c63430008110033";

type ComplianceFacetExternalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComplianceFacetExternalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComplianceFacetExternal__factory extends ContractFactory {
  constructor(...args: ComplianceFacetExternalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ComplianceFacetExternal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ComplianceFacetExternal__factory {
    return super.connect(runner) as ComplianceFacetExternal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComplianceFacetExternalInterface {
    return new Interface(_abi) as ComplianceFacetExternalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ComplianceFacetExternal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ComplianceFacetExternal;
  }
}
