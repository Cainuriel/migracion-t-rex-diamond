/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ClaimTopicsFacet,
  ClaimTopicsFacetInterface,
} from "../../../contracts/facets/ClaimTopicsFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "topic",
        type: "uint256",
      },
    ],
    name: "ClaimTopicAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "topic",
        type: "uint256",
      },
    ],
    name: "ClaimTopicRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic",
        type: "uint256",
      },
    ],
    name: "addClaimTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimTopics",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic",
        type: "uint256",
      },
    ],
    name: "removeClaimTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selectorsIntrospection",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610690806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630829784614610051578063c7b2255114610066578063df09d60414610079578063e3b807a014610097575b600080fd5b61006461005f366004610530565b6100ac565b005b610064610074366004610530565b6100c1565b6100816100d3565b60405161008e9190610549565b60405180910390f35b61009f6100e2565b60405161008e919061058d565b6100b5336101c4565b6100be81610245565b50565b6100ca336101c4565b6100be816103c0565b60606100dd6104bc565b905090565b60408051600380825260808201909252606091908160208201848036833701905050915063c7b2255160e01b82610118836105e5565b9250828151811061012b5761012b6105fc565b6001600160e01b031990921660209283029190910190910152630414bc2360e11b82610156836105e5565b92508281518110610169576101696105fc565b6001600160e01b0319909216602092830291909101909101526337c2758160e21b82610194836105e5565b925082815181106101a7576101a76105fc565b6001600160e01b0319909216602092830291909101909101525090565b7f0fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd5546001600160a01b038281169116146100be5760405162461bcd60e51b815260206004820152601e60248201527f436c61696d546f70696373496e7465726e616c3a204e6f74206f776e6572000060448201526064015b60405180910390fd5b7f122b1d6208c9f06f38eea9775d610d6447ef9c6bf9da7e813570b22bcd54b7766000805b82548110156103425783836000018281548110610289576102896105fc565b90600052602060002001540361033057825483906102a990600190610612565b815481106102b9576102b96105fc565b90600052602060002001548360000182815481106102d9576102d96105fc565b60009182526020909120015582548390806102f6576102f661062b565b60008281526020808220830160001990810183905590920190925585825260018581019091526040909120805460ff191690559150610342565b8061033a81610641565b91505061026a565b50806103905760405162461bcd60e51b815260206004820152601e60248201527f436c61696d546f70696373496e7465726e616c3a204e6f7420666f756e640000604482015260640161023c565b60405183907f0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec590600090a2505050565b7f122b1d6208c9f06f38eea9775d610d6447ef9c6bf9da7e813570b22bcd54b77660005b81548110156104785782826000018281548110610403576104036105fc565b9060005260206000200154036104665760405162461bcd60e51b815260206004820152602260248201527f436c61696d546f70696373496e7465726e616c3a20416c726561647920616464604482015261195960f21b606482015260840161023c565b8061047081610641565b9150506103e4565b50805460018101825560008281526020812090910183905560405183917f01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d691a25050565b60607f122b1d6208c9f06f38eea9775d610d6447ef9c6bf9da7e813570b22bcd54b77680546040805160208084028201810190925282815292919083018282801561052657602002820191906000526020600020905b815481526020019060010190808311610512575b5050505050905090565b60006020828403121561054257600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561058157835183529284019291840191600101610565565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156105815783516001600160e01b031916835292840192918401916001016105a9565b634e487b7160e01b600052601160045260246000fd5b6000816105f4576105f46105cf565b506000190190565b634e487b7160e01b600052603260045260246000fd5b81810381811115610625576106256105cf565b92915050565b634e487b7160e01b600052603160045260246000fd5b600060018201610653576106536105cf565b506001019056fea264697066735822122064d276e0bed63b08b2c2a098bc477bf85420420b491280d7b7ea0a1d0ba9b05064736f6c63430008110033";

type ClaimTopicsFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimTopicsFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimTopicsFacet__factory extends ContractFactory {
  constructor(...args: ClaimTopicsFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ClaimTopicsFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ClaimTopicsFacet__factory {
    return super.connect(runner) as ClaimTopicsFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimTopicsFacetInterface {
    return new Interface(_abi) as ClaimTopicsFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ClaimTopicsFacet {
    return new Contract(address, _abi, runner) as unknown as ClaimTopicsFacet;
  }
}
