/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ClaimTopicsFacet,
  ClaimTopicsFacetInterface,
} from "../../../contracts/facets/ClaimTopicsFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "topic",
        type: "uint256",
      },
    ],
    name: "ClaimTopicAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "topic",
        type: "uint256",
      },
    ],
    name: "ClaimTopicRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic",
        type: "uint256",
      },
    ],
    name: "addClaimTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimTopics",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic",
        type: "uint256",
      },
    ],
    name: "removeClaimTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630829784614610046578063c7b225511461005b578063df09d6041461006e575b600080fd5b610059610054366004610387565b61008c565b005b610059610069366004610387565b6101f0565b61007661031f565b60405161008391906103a0565b60405180910390f35b6000805160206104598339815191526008015461010090046001600160a01b031633146100ec5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b60008051602061045983398151915260005b600e8201548110156101eb578282600e018281548110610120576101206103e4565b9060005260206000200154036101d957600e8201805461014290600190610410565b81548110610152576101526103e4565b906000526020600020015482600e018281548110610172576101726103e4565b600091825260209091200155600e820180548061019157610191610429565b60019003818190600052602060002001600090559055827f0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec560405160405180910390a2505050565b806101e38161043f565b9150506100fe565b505050565b6000805160206104598339815191526008015461010090046001600160a01b0316331461024b5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064016100e3565b60008051602061045983398151915260005b600e8201548110156102d9578282600e01828154811061027f5761027f6103e4565b9060005260206000200154036102c75760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481859191959609a1b60448201526064016100e3565b806102d18161043f565b91505061025d565b50600e810180546001810182556000918252602082200183905560405183917f01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d691a25050565b6060600080516020610459833981519152600e0180548060200260200160405190810160405280929190818152602001828054801561037d57602002820191906000526020600020905b815481526020019060010190808311610369575b5050505050905090565b60006020828403121561039957600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156103d8578351835292840192918401916001016103bc565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610423576104236103fa565b92915050565b634e487b7160e01b600052603160045260246000fd5b600060018201610451576104516103fa565b506001019056fec2b69da5e7be41c6eaba0bfa82e0e1fef8d4512d663aa63c99ede9dd1d17b00fa26469706673582212208f140caf4a1fb65cb93f7f61083085e2fe1a85b72f673b8a7bc8637cd42c128c64736f6c63430008110033";

type ClaimTopicsFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimTopicsFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimTopicsFacet__factory extends ContractFactory {
  constructor(...args: ClaimTopicsFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ClaimTopicsFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ClaimTopicsFacet__factory {
    return super.connect(runner) as ClaimTopicsFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimTopicsFacetInterface {
    return new Interface(_abi) as ClaimTopicsFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ClaimTopicsFacet {
    return new Contract(address, _abi, runner) as unknown as ClaimTopicsFacet;
  }
}
