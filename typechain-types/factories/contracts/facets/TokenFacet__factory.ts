/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenFacet,
  TokenFacetInterface,
} from "../../../contracts/facets/TokenFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "AccountFrozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "forceTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "freezeAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "selectorsIntrospection",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "unfreezeAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506114aa806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063788649ea11610097578063dd62ed3e11610066578063dd62ed3e146101fa578063e3b807a01461020d578063e583983614610222578063f26c159f1461023557600080fd5b8063788649ea146101b957806395d89b41146101cc5780639dc29fac146101d4578063a9059cbb146101e757600080fd5b8063313ce567116100d3578063313ce5671461016f57806333bebb771461017e57806340c10f191461019357806370a08231146101a657600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd1461015c575b600080fd5b61010d610248565b60405161011a919061119f565b60405180910390f35b610136610131366004611209565b610257565b604051901515815260200161011a565b61014e61026e565b60405190815260200161011a565b61013661016a366004611233565b610298565b6040516012815260200161011a565b61019161018c366004611233565b610326565b005b6101916101a1366004611209565b610394565b61014e6101b436600461126f565b610400565b6101916101c736600461126f565b61042b565b61010d610497565b6101916101e2366004611209565b6104a1565b6101366101f5366004611209565b610509565b61014e61020836600461128a565b610516565b610215610529565b60405161011a91906112bd565b61013661023036600461126f565b6108f6565b61019161024336600461126f565b610936565b606061025261099f565b905090565b6000610264338484610a41565b5060015b92915050565b60006102527f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb44365490565b6000806102a58533610ad5565b9050828110156102fc5760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e46616365743a20616c6c6f77616e6365206578636565646564000060448201526064015b60405180910390fd5b610310853361030b8685611321565b610a41565b61031b858585610b1f565b506001949350505050565b600080516020611455833981519152546001600160a01b03163314806103685750336000908152600080516020611415833981519152602052604090205460ff165b6103845760405162461bcd60e51b81526004016102f390611334565b61038f838383610b1f565b505050565b600080516020611455833981519152546001600160a01b03163314806103d65750336000908152600080516020611415833981519152602052604090205460ff165b6103f25760405162461bcd60e51b81526004016102f390611334565b6103fc8282610d40565b5050565b6001600160a01b03811660009081526000805160206114358339815191526020526040812054610268565b600080516020611455833981519152546001600160a01b031633148061046d5750336000908152600080516020611415833981519152602052604090205460ff165b6104895760405162461bcd60e51b81526004016102f390611334565b610494816000610e08565b50565b6060610252610e98565b600080516020611455833981519152546001600160a01b03163314806104e35750336000908152600080516020611415833981519152602052604090205460ff165b6104ff5760405162461bcd60e51b81526004016102f390611334565b6103fc8282610eb7565b6000610264338484610b1f565b60006105228383610ad5565b9392505050565b60408051600f80825261020082019092526060919081602082016101e0803683370190505091506306fdde0360e01b826105628361136b565b9250828151811061057557610575611382565b6001600160e01b0319909216602092830291909101909101526395d89b4160e01b826105a08361136b565b925082815181106105b3576105b3611382565b6001600160e01b03199092166020928302919091019091015263313ce56760e01b826105de8361136b565b925082815181106105f1576105f1611382565b6001600160e01b0319909216602092830291909101909101526318160ddd60e01b8261061c8361136b565b9250828151811061062f5761062f611382565b6001600160e01b0319909216602092830291909101909101526370a0823160e01b8261065a8361136b565b9250828151811061066d5761066d611382565b6001600160e01b03199092166020928302919091019091015263a9059cbb60e01b826106988361136b565b925082815181106106ab576106ab611382565b6001600160e01b03199092166020928302919091019091015263095ea7b360e01b826106d68361136b565b925082815181106106e9576106e9611382565b6001600160e01b0319909216602092830291909101909101526323b872dd60e01b826107148361136b565b9250828151811061072757610727611382565b6001600160e01b031990921660209283029190910190910152636eb1769f60e11b826107528361136b565b9250828151811061076557610765611382565b6001600160e01b0319909216602092830291909101909101526340c10f1960e01b826107908361136b565b925082815181106107a3576107a3611382565b6001600160e01b031990921660209283029190910190910152632770a7eb60e21b826107ce8361136b565b925082815181106107e1576107e1611382565b6001600160e01b0319909216602092830291909101909101526333bebb7760e01b8261080c8361136b565b9250828151811061081f5761081f611382565b6001600160e01b03199092166020928302919091019091015263f26c159f60e01b8261084a8361136b565b9250828151811061085d5761085d611382565b6001600160e01b031990921660209283029190910190910152633c4324f560e11b826108888361136b565b9250828151811061089b5761089b611382565b6001600160e01b0319909216602092830291909101909101526372c1cc1b60e11b826108c68361136b565b925082815181106108d9576108d9611382565b6001600160e01b0319909216602092830291909101909101525090565b6001600160a01b03811660009081527f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb443a602052604081205460ff16610268565b600080516020611455833981519152546001600160a01b03163314806109785750336000908152600080516020611415833981519152602052604090205460ff165b6109945760405162461bcd60e51b81526004016102f390611334565b610494816001610e08565b606060008051602061143583398151915260030180546109be90611398565b80601f01602080910402602001604051908101604052809291908181526020018280546109ea90611398565b8015610a375780601f10610a0c57610100808354040283529160200191610a37565b820191906000526020600020905b815481529060010190602001808311610a1a57829003601f168201915b5050505050905090565b6001600160a01b0383811660008181527f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb4435602090815260408083209487168084529482529182902085905590518481526000805160206114358339815191529392917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a350505050565b6001600160a01b0391821660009081527f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb44356020908152604080832093909416825291909152205490565b6001600160a01b03831660009081527f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb443a60205260409020546000805160206114358339815191529060ff1615610bb75760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e496e7465726e616c3a2073656e6465722066726f7a656e0000000060448201526064016102f3565b6001600160a01b038316600090815260068201602052604090205460ff1615610c225760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e496e7465726e616c3a2072656365697665722066726f7a656e000060448201526064016102f3565b6001600160a01b038416600090815260208290526040902054821115610c965760405162461bcd60e51b815260206004820152602360248201527f546f6b656e496e7465726e616c3a20696e73756666696369656e742062616c616044820152626e636560e81b60648201526084016102f3565b6001600160a01b03841660009081526020829052604081208054849290610cbe908490611321565b90915550506001600160a01b03831660009081526020829052604081208054849290610ceb9084906113d2565b90915550610cfb90508484610fd4565b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ac791815260200190565b7f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb44368054600080516020611435833981519152918391600090610d839084906113d2565b90915550506001600160a01b03831660009081526020829052604081208054849290610db09084906113d2565b90915550610dc19050600084610fd4565b6040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a3505050565b6001600160a01b03821660008181527f736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb443a6020908152604091829020805460ff1916851515908117909155915191825260008051602061143583398151915292917fa33e6b076d391e96626483b30e365719f79f1d6594aff6587649ffd6c82ed7fa910160405180910390a2505050565b606060008051602061143583398151915260040180546109be90611398565b6001600160a01b03821660009081526000805160206114358339815191526020819052604090912054821115610f425760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e496e7465726e616c3a206275726e20616d6f756e7420657863656560448201526964732062616c616e636560b01b60648201526084016102f3565b6001600160a01b03831660009081526020829052604081208054849290610f6a908490611321565b9250508190555081816002016000828254610f859190611321565b90915550610f969050836000610fd4565b6040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610dfb565b6000805160206114358339815191526001600160a01b0382161580159061101157506001600160a01b038216600090815260208290526040902054155b1561104757600781018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0384161790555b6001600160a01b0383161580159061107557506001600160a01b038316600090815260208290526040902054155b1561038f5761038f8360008051602061143583398151915260005b600782015481101561038f57826001600160a01b03168260070182815481106110bb576110bb611382565b6000918252602090912001546001600160a01b03160361118d576007820180546110e790600190611321565b815481106110f7576110f7611382565b6000918252602090912001546007830180546001600160a01b03909216918390811061112557611125611382565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600701805480611166576111666113e5565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b80611197816113fb565b915050611090565b600060208083528351808285015260005b818110156111cc578581018301518582016040015282016111b0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461120457600080fd5b919050565b6000806040838503121561121c57600080fd5b611225836111ed565b946020939093013593505050565b60008060006060848603121561124857600080fd5b611251846111ed565b925061125f602085016111ed565b9150604084013590509250925092565b60006020828403121561128157600080fd5b610522826111ed565b6000806040838503121561129d57600080fd5b6112a6836111ed565b91506112b4602084016111ed565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156112ff5783516001600160e01b031916835292840192918401916001016112d9565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102685761026861130b565b6020808252601a908201527f546f6b656e46616365743a204e6f7420617574686f72697a6564000000000000604082015260600190565b60008161137a5761137a61130b565b506000190190565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806113ac57607f821691505b6020821081036113cc57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102685761026861130b565b634e487b7160e01b600052603160045260246000fd5b60006001820161140d5761140d61130b565b506001019056fe0fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd6736ce0c14097c43f46534906dfa4c53dc3d50ced9d4ca89fafa7ec003cfb44340fcb11fff5651caf53eaf1124d25315389f7b0ceffd704a5e999a2ffc7764fd5a26469706673582212202db4c9dc3fb6cec744a4655f55ceffde09c5fd5a55bcbddb3dd5910023c4581864736f6c63430008110033";

type TokenFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenFacet__factory extends ContractFactory {
  constructor(...args: TokenFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenFacet__factory {
    return super.connect(runner) as TokenFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenFacetInterface {
    return new Interface(_abi) as TokenFacetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenFacet {
    return new Contract(address, _abi, runner) as unknown as TokenFacet;
  }
}
