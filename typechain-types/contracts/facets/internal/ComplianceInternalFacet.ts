/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  FunctionFragment,
  Interface,
  EventFragment,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
} from "../../../common";

export interface ComplianceInternalFacetInterface extends Interface {
  getEvent(
    nameOrSignatureOrTopic:
      | "MaxBalanceSet"
      | "MaxInvestorsSet"
      | "MinBalanceSet"
  ): EventFragment;
}

export namespace MaxBalanceSetEvent {
  export type InputTuple = [max: BigNumberish];
  export type OutputTuple = [max: bigint];
  export interface OutputObject {
    max: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MaxInvestorsSetEvent {
  export type InputTuple = [max: BigNumberish];
  export type OutputTuple = [max: bigint];
  export interface OutputObject {
    max: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MinBalanceSetEvent {
  export type InputTuple = [min: BigNumberish];
  export type OutputTuple = [min: bigint];
  export interface OutputObject {
    min: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface ComplianceInternalFacet extends BaseContract {
  connect(runner?: ContractRunner | null): ComplianceInternalFacet;
  waitForDeployment(): Promise<this>;

  interface: ComplianceInternalFacetInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getEvent(
    key: "MaxBalanceSet"
  ): TypedContractEvent<
    MaxBalanceSetEvent.InputTuple,
    MaxBalanceSetEvent.OutputTuple,
    MaxBalanceSetEvent.OutputObject
  >;
  getEvent(
    key: "MaxInvestorsSet"
  ): TypedContractEvent<
    MaxInvestorsSetEvent.InputTuple,
    MaxInvestorsSetEvent.OutputTuple,
    MaxInvestorsSetEvent.OutputObject
  >;
  getEvent(
    key: "MinBalanceSet"
  ): TypedContractEvent<
    MinBalanceSetEvent.InputTuple,
    MinBalanceSetEvent.OutputTuple,
    MinBalanceSetEvent.OutputObject
  >;

  filters: {
    "MaxBalanceSet(uint256)": TypedContractEvent<
      MaxBalanceSetEvent.InputTuple,
      MaxBalanceSetEvent.OutputTuple,
      MaxBalanceSetEvent.OutputObject
    >;
    MaxBalanceSet: TypedContractEvent<
      MaxBalanceSetEvent.InputTuple,
      MaxBalanceSetEvent.OutputTuple,
      MaxBalanceSetEvent.OutputObject
    >;

    "MaxInvestorsSet(uint256)": TypedContractEvent<
      MaxInvestorsSetEvent.InputTuple,
      MaxInvestorsSetEvent.OutputTuple,
      MaxInvestorsSetEvent.OutputObject
    >;
    MaxInvestorsSet: TypedContractEvent<
      MaxInvestorsSetEvent.InputTuple,
      MaxInvestorsSetEvent.OutputTuple,
      MaxInvestorsSetEvent.OutputObject
    >;

    "MinBalanceSet(uint256)": TypedContractEvent<
      MinBalanceSetEvent.InputTuple,
      MinBalanceSetEvent.OutputTuple,
      MinBalanceSetEvent.OutputObject
    >;
    MinBalanceSet: TypedContractEvent<
      MinBalanceSetEvent.InputTuple,
      MinBalanceSetEvent.OutputTuple,
      MinBalanceSetEvent.OutputObject
    >;
  };
}
